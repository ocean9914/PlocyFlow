<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Tencent.OA.Framework</name>
    </assembly>
    <members>
        <member name="T:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem">
            <summary>
            工作项
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.Execute(System.String)">
            <summary>
            异步执行方法
            </summary>
            <param name="Method"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.Execute(System.String,System.Boolean)">
            <summary>
            是否同步执行
            </summary>
            <param name="Action"></param>
            <param name="Sync">是否同步</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.GotoActivity(System.String)">
            <summary>
            异步执行GotoActivity
            </summary>
            <param name="activity"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.GotoActivity(System.String,System.Boolean)">
            <summary>
            是否异步执行GotoActivity
            </summary>
            <param name="activity"></param>
            <param name="Sync"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.Redirect(System.String)">
            <summary>
            将任务转交给用户
            </summary>
            <param name="username"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.Delegate(System.String)">
            <summary>
            将任务委派给用户
            </summary>
            <param name="username"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.Delegate(System.Collections.Generic.List{System.String})">
            <summary>
            将任务委派给的系列用户
            </summary>
            <param name="usernames"></param>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.ActionNames">
            <summary>
            意见集合
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.StartDate">
            <summary>
            WorkItem开始时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.ProcStartDate">
            <summary>
            流程启动时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.SerialNumber">
            <summary>
            WorkItem的序列号
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.Location">
            <summary>
            地址，和Data属性相同
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.ActivityName">
            <summary>
            步骤名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.ProcessFullName">
            <summary>
            流程名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.ProcessIdentifier">
            <summary>
            流程标识，为整数
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.ProcessFolio">
            <summary>
            流程标题
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.Data">
            <summary>
            处理地址
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.ProcessInstance">
            <summary>
            流程实例
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2WorklistItem.WorklistItem">
            <summary>
            整个WorkListItem
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.K2WorklistItem.ProcessFolio">
            <summary>
            流程标题
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.Interfaces.IK2ProcVariable">
            <summary>
            流程变量，包括DataField和XmlField
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2ProcVariable.IsDirty">
            <summary>
            是否修改过
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2ProcVariable.Name">
            <summary>
            变量的名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2ProcVariable.Value">
            <summary>
            变量的值
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.Interfaces.IK2Connection">
            <summary>
            连接K2服务器接口
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2Connection.Close">
            <summary>
            关闭K2服务器的连接
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2Connection.Connection">
            <summary>
            K2服务器连接
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.DataContract.ProcessStatus">
            <summary>
            流程状态
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ProcessStatus.Error">
            <summary>
            发生错误
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ProcessStatus.Running">
            <summary>
            运行中
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ProcessStatus.Active">
            <summary>
            被激活
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ProcessStatus.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ProcessStatus.Stopped">
            <summary>
            被停止
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ProcessStatus.Deleted">
            <summary>
            被删除
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.DataContract.ActivityStatus">
            <summary>
            步骤实例状态
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ActivityStatus.Error">
            <summary>
            发生错误
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ActivityStatus.Waiting">
            <summary>
            等待
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ActivityStatus.Active">
            <summary>
            被激活
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ActivityStatus.Expired">
            <summary>
            过时
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ActivityStatus.Completed">
            <summary>
            已完成
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Workflow.DataContract.ActivityStatus.Empty">
            <summary>
            没有处理人，出错状态
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ActivityInstance.ID">
            <summary>
            流程ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ActivityInstance.ProcID">
            <summary>
            流程ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ActivityInstance.Status">
            <summary>
            流程ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ActivityInstance.ActivityName">
            <summary>
            步骤名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ActivityInstance.DestinationUsers">
            <summary>
            流程处理人（英文名）
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ActivityInstance.StartTime">
            <summary>
            流程步骤的开始时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ActivityInstance.ExtensionData">
            <summary>
            Gets or sets the structure that contains extra data.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject"/> 
            that contains data that is not recognized as belonging to the data contract.</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Web.WebUtilities">
            <summary>
            Summary description for WebUtilities.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Web.WebUtilities.GetIP">
            <summary>
            获得当前页面客户端的IP
            </summary>
            <returns>当前页面客户端的IP</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.Web.WebUtilities.IsIPAddress(System.String)" -->
        <!-- Badly formed XML comment ignored for member "T:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.Internal.WCFProxyClassBuilder`1" -->
        <!-- Badly formed XML comment ignored for member "T:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.Internal.AbstractClassBuilder`1" -->
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.Internal.AbstractClassBuilder`1.GenerateTypeImplementation" -->
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.Internal.AbstractClassBuilder`1.GenerateMethodImpl(System.Reflection.Emit.TypeBuilder)">
            <summary>
            Read the interface declaration and emit a method for each method declaration
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.Internal.AbstractClassBuilder`1.GenerateConstructor(System.Reflection.Emit.TypeBuilder)">
            <summary>
            Simply generate a constructor:
            public MyClass(string configName)
            	: base ( configName )
            {
            }
            </summary>
            <param name="builder"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.Internal.WCFProxyClassBuilder`1.GenerateMethodImpl(System.Reflection.MethodInfo,System.Type[],System.Reflection.Emit.ILGenerator)">
            <summary>
            Generate the contents of the method. This will generate:
            
            ....
            return Channel.MethodName(params);
            ...
            
            </summary>
            <param name="method"></param>
            <param name="parameterTypes"></param>
            <param name="iLGenerator"></param>
        </member>
        <member name="P:Tencent.OA.Framework.RightWay.Entity.CodeName.Code">
            <summary>
            代码
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.RightWay.Entity.CodeName.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.RightWay.Entity.CodeName.Remark">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Organization.OrganizationBase">
            <summary>
            组织架构的基类
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.IPropertyIndexical">
            <summary>
            定义对象属性的索引访问
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.IPropertyIndexical.Item(System.String)">
            <summary>
            提供对象属性的索引访问
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.OrganizationBase.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.OrganizationBase.FullName">
            <summary>
            全名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.OrganizationBase.Enabled">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.OrganizationBase.Item(System.String)">
            <summary>
            提供对象属性的索引访问
            </summary>
            <exception cref="T:Tencent.OA.Framework.Exceptions.PropertyNotExistException"></exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="id">StaffId</param>
            <exception cref="T:Tencent.OA.Framework.Organization.OrgEntryNotFoundException"></exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="loginName"></param>
            <exception cref="T:Tencent.OA.Framework.Organization.OrgEntryNotFoundException"></exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.CheckTokencode(System.String)">
            <summary>
            检查用户的tokencode是否有效
            </summary>
            <param name="tokencode"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.CheckAdminTokencode(System.String)">
            <summary>
            检查指定用户的tokencode是否有效,用于Token卡管理
            </summary>
            <param name="tokencode"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.GetMemberOfAdGroups">
            <summary>
            获取员工直属邮件组
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.GetDirectLeaders(System.Int32)">
            <summary>
            获取所有员工列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.GetAllStaff">
            <summary>
            获取所有员工列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.GetAllStaff(System.Boolean)">
            <summary>
            *获取所有员工列表
            </summary>
            <param name="isIncludeFired">true 表示包含离职的,false 表示不包含</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.GetAllRegularStaffInfo(System.Boolean)">
            <summary>
            *获取所有正式员工列表(不包含外聘)
            </summary>
            <param name="isIncludeFired">true 表示包含离职的,false 表示不包含</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.CheckTokencode(System.Int32,System.String)">
            <summary>
            检查指定用户的tokencode是否有效
            </summary>
            <param name="staffId"></param>
            <param name="tokencode"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.GetPassByStaff(System.Int32)">
            <summary>
            通道
            </summary>
            <param name="staffid"></param>
            <returns>可能为空</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Staff.GetStaffTypeByStaff(System.Int32)">
            <summary>
            员工类型
            </summary>
            <param name="staffid"></param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.LoginName">
            <summary>
            登录名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.EnglishName">
            <summary>
            英文名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.ChineseName">
            <summary>
            中文名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.Birthday">
            <summary>
            生日
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.BranchPhoneNumber">
            <summary>
            分机号码
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.MobilePhoneNumber">
            <summary>
            移动电话
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.RTX">
            <summary>
            RTX号码
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.DepartmentId">
            <summary>
            部门Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.DepartmentName">
            <summary>
            部门名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.OfficialId">
            <summary>
            员工级别ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.OfficialName">
            <summary>
            员工级别名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.GroupId">
            <summary>
            所属部门/小组ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.GroupName">
            <summary>
            所属部门/小组名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.PostId">
            <summary>
            主职位ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.PostName">
            <summary>
            主职位名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.TypeId">
            <summary>
            员工类型ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.TypeName">
            <summary>
            员工类型名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.StatusId">
            <summary>
            员工状态ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.StatusName">
            <summary>
            员工状态名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.WorkDeptId">
            <summary>
            员工实际工作部门ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.WorkDeptName">
            <summary>
            员工实际工作部门名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.ExProperties">
            <summary>
            扩展属性:object数组类型
            索引 0 : 员工对应的部门经理ID(特殊处理，行政部-政策外联组成员经理为Nick)
            索引 1-15 : 增加为RTX同步所用扩张属性
            索引 16 : 员工肖像Url
            索引 17 : 转正时间
            索引 18 : 授权访问信息
            索引 19/20 : 员工工作地点Id/工作地点名称
            索引 21/22 : 员工合同签订公司
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.DeptLeader">
            <summary>
            员工对应的部门经理
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.BloodTypeId">
            <summary>
            血型Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.IsShowRealAge">
            <summary>
            是否显示真实年龄
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.Collage">
            <summary>
            毕业学校
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.PostCode">
            <summary>
            邮编
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.Country">
            <summary>
            国家
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.Province">
            <summary>
            省份
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.City">
            <summary>
            城市
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.Address">
            <summary>
            地址
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.SeatPosition">
            <summary>
            座位号
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.Email">
            <summary>
            电子邮件
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.Fax">
            <summary>
            传真
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.SelfNick">
            <summary>
            个性签名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.Memo">
            <summary>
            个人简介
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.HomePage">
            <summary>
            个人主页
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.BankAccount">
            <summary>
            *银行帐号(此处为授权访问信息 非授权调用，获取值为空)
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.WorkPlaceID">
            <summary>
            *员工工作地点名称Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.WorkPlaceName">
            <summary>
            *员工工作地点名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.ContractCompanyID">
            <summary>
            *所属公司ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.ContractCompanyName">
            <summary>
            *所属公司名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.BankName">
            <summary>
            *开户行名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.BankNameId">
            <summary>
            *开户行ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.BankAddress">
            <summary>
            *开户行地址
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.MajorPost">
            <summary>
            主岗位信息
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.DirectLeaders">
            <summary>
            *直属上级
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.AllPosts">
            <summary>
            所有岗位信息
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.DirectSubStaffs">
            <summary>
            直属员工
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Staff.AllSubStaffs">
            <summary>
            所有下级员工
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="id">DeptId</param>
            <exception cref="T:Tencent.OA.Framework.Organization.OrgEntryNotFoundException"></exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetSystemManager">
            <summary>
            * 部门对应的系统级别审批人
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetPrincipalPost">
            <summary>
            * 部门的主岗位信息
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetPrincipalStaffs">
            <summary>
            * 部门负责人
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetAllPosts">
            <summary>
            * 部门所有岗位信息
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetDirectPosts">
            <summary>
            * 部门直接岗位信息
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetAllPostStaffs">
            <summary>
            * 部门所有岗位对应的员工信息
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetChildDepts">
            <summary>
            获取直属下级部门
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetChildDepts(System.Int32)">
            <summary>
            获取指定深度的子部门
            </summary>
            <param name="level">深度</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetParentDepts">
            <summary>
            获取指定深度的父部门
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetParentDepts(System.Int32)">
            <summary>
            获取指定深度的父部门
            </summary>
            <param name="level">深度</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetStaffs">
            <summary>
            获取指定部门的所有在编员工信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetStaffs(System.Boolean)">
            <summary>
            *获取指定部门的所有在编员工信息(包含离职)
            </summary>
            <param name="isIncludeFired">true 表示包含离职的,false 表示不包含</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetStaffs(System.Int32)">
            <summary>
            获取指定部门的所有在编员工信息
            </summary>
            <param name="level">搜索的层次</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetWorkStaffs">
            <summary>
            获取指定部门的所有的工作员工信息（工作部门在指定部门的）
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetWorkStaffs(System.Int32)">
            <summary>
            获取指定部门的所有的工作员工信息（工作部门在指定部门的）
            </summary>
            <param name="level">搜索的层次</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetVicePresident">
            <summary>
            获取该部门的主管副总信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetAllDepts">
            <summary>
            获取所有部门列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetAllDepts(System.Boolean)">
            <summary>
            *获取所有部门列表
            </summary>
            <param name="isIncludeDisabled">true 表示包含失效的,false 表示不包含</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Dept.GetAllDepts(System.Int32)">
            <summary>
            获取指定深度的所有部门信息
            </summary>
            <param name="level">深度</param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.ExchangeGroupName">
            <summary>
            内部邮件组名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.LeaderId">
            <summary>
            经理/LeaderID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.Level">
            <summary>
            级别
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.VicePresidentId">
            <summary>
            业务副总Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.ParentId">
            <summary>
            父级部门Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.SecretaryId">
            <summary>
            部门秘书Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.TypeId">
            <summary>
            部门类型Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.TypeName">
            <summary>
            部门类型名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.ExProperties">
            <summary>
            扩展属性:object数组类型
            索引 0 : 部门对应的 ComOfficalID/公司级负责人ID(Int32)
            索引 1 : 部门对应的 SysCCID/系统级抄送人ID(Int32)
            索引 2 : 部门对应的 ComCCID/公司级抄送人ID(Int32)
            索引 3 : 部门编号
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.SystemManager">
            <summary>
            * 部门对应的系统级别审批人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.CompanyManager">
            <summary>
            * 部门对应的公司级审批人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.SystemCCStaff">
            <summary>
            * 部门对应的系统级抄送
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.CompanyCCStaff">
            <summary>
            * 部门对应的公司级抄送人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Dept.DeptCode">
            <summary>
            * 部门编号
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.FieldValue.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.FieldValue.IsDefault">
            <summary>
            是否默认的
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.FieldValue.Value">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityFileEngine">
            <summary>
            Summary description for NVelocityFileEngine.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.NVelocityTemplateEngine.BaseClasses.NVelocityEngineBase">
            <summary>
            Summary description for NVelocityEngineBase.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.BaseClasses.NVelocityEngineBase.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.NVelocityTemplateEngine.BaseClasses.NVelocityEngineBase"/> class.
            </summary>
            <param name="cacheTemplate">if set to <c>true</c> [cache template].</param>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.BaseClasses.NVelocityEngineBase.CreateContext(System.Collections.IDictionary)">
            <summary>
            Creates a VelocityContext from an IDictionary object.
            </summary>
            <param name="context">The context.</param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.NVelocityTemplateEngine.Interfaces.INVelocityEngine">
            <summary>
            Summary description for INVelocityEngine.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Interfaces.INVelocityEngine.Process(System.Collections.IDictionary,System.String)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="template">Name of the template.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Interfaces.INVelocityEngine.Process(System.Collections.IDictionary,System.IO.TextWriter,System.String)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="writer">The writer.</param>
            <param name="template">Name of the template.</param>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityFileEngine.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityFileEngine"/> class.
            </summary>
            <param name="templateDirectory">The template directory.</param>
            <param name="cacheTemplate">if set to <c>true</c> [cache template].</param>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityFileEngine.Process(System.Collections.IDictionary,System.String)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="templateName">Name of the template.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityFileEngine.Process(System.Collections.IDictionary,System.IO.TextWriter,System.String)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="writer">The writer.</param>
            <param name="templateName">Name of the template.</param>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.ServiceContract.ILogService">
            <summary>
            日志记录服务
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ServiceContract.ILogService.GetConfiguration(Tencent.OA.Framework.Logging.LogEntry.IClientInfo)">
            <summary>
            获取日志的配置信息
            </summary>
            <param name="clientInfo">调用日志的客户端信息</param>
            <returns>日志配置信息.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ServiceContract.ILogService.WriteEntry(Tencent.OA.Framework.Logging.LogEntry.ILogEntry)">
            <summary>
            写入日志信息 <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="entryData">日志数据</param>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.LogStrategies.IClientStrategy">
            <summary>
            Denotes a log strategy that is used client side.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.ILogStrategy">
            <summary>
            This defines the contract for handling logging events.
            To create a custom strategy, implement this interface
            and define a provider for the strategy
            in the application configuration.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ILogStrategy.GetLogLevel(Tencent.OA.Framework.Logging.LogEntry.IClientInfo)">
            <summary>
            Gets the log level for the log with the specified name.
            </summary>
            <param name="clientInfo">Information regarding the caller.</param>
            <returns>The threshold log level.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ILogStrategy.Write(Tencent.OA.Framework.Logging.LogEntry.IClientLogEntry)">
            <summary>
            Logs the specified client log entry.
            <seealso cref="T:Tencent.OA.Framework.Logging.LogEntry.IServerLogEntry"/>
            </summary>
            <param name="logEntry">The log entry.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ILogStrategy.Write(Tencent.OA.Framework.Logging.LogEntry.IServerLogEntry)">
            <summary>
            Logs the specified server log entry. 
            <seealso cref="T:Tencent.OA.Framework.Logging.LogEntry.IServerLogEntry"/>
            </summary>
            <param name="logEntry">The log entry.</param>
        </member>
        <member name="T:Tencent.OA.Framework.Data.QueryCriteria">
            <summary>
            A QueryCriteria instance represents a C/R/U/D query on a query table.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Data.QueryCriteria.PredefinedColumns">
            <summary>
            Gets the predefined columns to return if no columns is specified in Select() method.
            </summary>
            <value>The predefined columns.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Data.QueryCriteria.ResultColumns">
            <summary>
            The result columns specified to return in select.
            </summary>
            <value>The result columns.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Data.QueryCriteria.IsDistinct">
            <summary>
            Gets a value indicating whether the select returns distinct results.
            </summary>
            <value>
            	<c>true</c> if return distinct results; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Tencent.OA.Framework.Data.QueryCriteria.MaxResults">
            <summary>
            Get the max number of results to return.
            </summary>
            <value>The max results.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Data.QueryCriteria.SkipResults">
            <summary>
            Get the skip number of results.
            </summary>
            <value>The skip results.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Data.QueryCriteria.SortBys">
            <summary>
            Get the sort bys.
            </summary>
            <value>The sort bys.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Data.QueryCriteria.ConditionAndOrs">
            <summary>
            Get the And/Or logic operators of the query conditions.
            </summary>
            <value>The condition and ors.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Data.QueryCriteria.Conditions">
            <summary>
            Get the query conditions.
            </summary>
            <value>The conditions.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Tencent.OA.Framework.Data.QueryCriteria.Assignments" -->
        <member name="P:Tencent.OA.Framework.Data.QueryCriteria.ReadOnly">
            <summary>
            Gets a value indicating whether the query is readonly.
            </summary>
            <value><c>true</c> if the query is readonly; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Data.QueryCriteria.QueryType">
            <summary>
            Get the QueryType.
            </summary>
            <value>The QueryType.</value>
        </member>
        <member name="T:Tencent.OA.Framework.Configuration.AppConfig">
            <summary>
            Summary description for Application.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.AppConfig.INVAILD_SYSTEM_ID">
            <summary>
            无效的系统Id
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Configuration.AppConfig.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.AppConfig.IsDev">
            <summary>
            是否使用测试环境
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.AppConfig.SystemId">
            <summary>
            系统Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.AppConfig.BanckAccountWarrantString">
            <summary>
            *BanckAccountWarrantString
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.AppConfig.TokenServerWarrantString">
            <summary>
            *BanckAccountWarrantString
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.AppConfig.LogQueryWarrantString">
            <summary>
            * 日志查询授权串
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.AppConfig.SystemKey">
            <summary>
            系统在统一权限中的密钥
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate">
            <summary>
            流程实例的委托关系
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate.ProcInstID">
            <summary>
            流程实例ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate.ActivityName">
            <summary>
            流程实例ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate.SysID">
            <summary>
            所在的统一权限的系统ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate.ProcessName">
            <summary>
            流程名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate.HandlerID">
            <summary>
            当前的处理人ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate.AgentID">
            <summary>
            委托处理人ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate.ExpiredDate">
            <summary>
            委托处理时限
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate.CreatedDate">
            <summary>
            委托创建时间
            </summary>
        </member>
        <member name="E:Tencent.OA.Framework.ServiceModel.ServiceHelper`1.ProxyCreated">
            <summary>
            Fired when a new proxy is created.
            In here you can initialize the Credentials and EndPoints.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Security.SecurityUtility">
            <summary>
            这是字符串加密解密的通用类
            
            现在有三种：
            1、一般的普通加密
            2、DES加密
            3、MD5加密
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Security.SecurityUtility.Encode(System.String)">
            <summary>
            一般的加密
            </summary>
            <param name="str">需要加密的字符串</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Security.SecurityUtility.Decode(System.String)">
            <summary>
            一般的解密
            </summary>
            <param name="str">需要解密的字符串</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Security.SecurityUtility.DESEncrypt(System.String,System.String)">
            <summary>
            使用DES加密，key输入密码的时候，必须使用英文字符，区分大小写，且字符数量是8个，不能多也不能少
            </summary>
            <param name="toEncrypt">需要加密的字符串</param>
            <param name="key">加密字符串的密钥</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Security.SecurityUtility.DESDecrypt(System.String,System.String)">
            <summary>
            使用DES解密，key输入密码的时候，必须使用英文字符，区分大小写，且字符数量是8个，不能多也不能少
            </summary>
            <param name="toDecrypt">需要加密的字符串</param>
            <param name="key">加密字符串的密钥</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Security.SecurityUtility.MD5Encrypt(System.String)">
            <summary>
            字符串MD5加密为二进制字符串
            </summary>
            <param name="strSource">要转换的字符串</param>
            <returns>string</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ISimpleService.GetAllPostInfos">
            <summary>
            岗位
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ISimpleService.GetAllPosition">
            <summary>
            职位
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ISimpleService.GetAllPass">
            <summary>
            发展通道
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ISimpleService.GetAllWorkplace">
            <summary>
            工作地
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ISimpleService.GetStaffByDept(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="deptId"></param>
            <param name="includePartTime">
            true:包含兼职，false不包含兼职
            </param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ISimpleService.GetOrgByStaff(System.Int32,System.Boolean)">
            <summary>
            获取用户的组织
            </summary>
            <param name="staffid"></param>
            <param name="includePartTime"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ISimpleService.GetOrgByStaff(System.Int32,System.Boolean,System.Int32)">
            <summary>
            获取用户的组织，兼职，岗位属性
            </summary>
            <param name="staffid"></param>
            <param name="includePartTime"></param>
            <param name="postPropertyid"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ISimpleService.GetPostByStaff(System.Int32,System.Boolean)">
            <summary>
            获取用户的岗位
            </summary>
            <param name="staffid"></param>
            <param name="includePartTime"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ISimpleService.GetPostByOrg(System.Int32)">
            <summary>
            根据部门，查找岗位
            </summary>
            <param name="deptid"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Post.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="id">PostId</param>
            <exception cref="T:Tencent.OA.Framework.Organization.OrgEntryNotFoundException"></exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.Post.GetStaffs">
            <summary>
            获取指定岗位的所有在编员工信息
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Post.Name">
            <summary>
            岗位名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Post.DepartmentID">
            <summary>
            所属部门Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Post.ParentId">
            <summary>
            上级岗位Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Post.StateID">
            <summary>
            状态Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Post.PropertyID">
            <summary>
            状态Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Post.IsPrincipal">
            <summary>
            是否负责人岗位
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Post.LocationCode">
            <summary>
            分机号码
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.Post.ExProperties">
            <summary>
            扩展属性:object数组类型
            索引 0 : 岗位属性名称
            索引 1 : 岗位状态名称
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.KeyField">
            <summary>
            KeyField
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.KeyField.Name">
            <summary>
            Key名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.KeyField.Value">
            <summary>
            key值
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.ActionResult">
            <summary>
            审批结论，如同意、不同意等
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ActionResult.ActionName">
            <summary>
            审批结论名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ActionResult.ActionValue">
            <summary>
            审批结论内容
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.DataContract.LogEntryData">
            <summary>
            Contains data pertaining to a <see cref="T:Tencent.OA.Framework.Logging.LogEntry.ILogEntry"/>.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.IClientInfo.Url">
            <summary>
            Gets or sets the URL of the client.
            </summary>
            <value>The URL of the client.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.IClientInfo.LogName">
            <summary>
            Gets the name of the log that the log entry
            is to be written under. <seealso cref="T:Tencent.OA.Framework.Logging.LogEntry.ILogEntry"/>
            </summary>
            <value>The name of the log.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.IClientInfo.UserName">
            <summary>
            Gets the name of the user that the request for the log entry
            was made under.
            </summary>
            <value>The name of the user.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.IClientInfo.MachineName">
            <summary>
            Gets the name of the machine that the request for the log entry
            was made.
            </summary>
            <value>The name of the machine.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.IClientInfo.IPAddress">
            <summary>
            Gets the ip address of the client.
            </summary>
            <value>The ip address of the client.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientInfo.LogName">
            <summary>
            获取和设置日志的名称
            <seealso cref="T:Tencent.OA.Framework.Logging.LogEntry.ILogEntry"/>
            </summary>
            <value>The name of the log.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientInfo.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientInfo.MachineName">
            <summary>
            机器名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientInfo.Url">
            <summary>
            Gets or sets the URL from where the log request was made.
            </summary>
            <value>The URL of the log request.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientInfo.IPAddress">
            <summary>
            请求IP
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientInfo.ExtensionData">
            <summary>
            Gets or sets the structure that contains extra data.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject"/> 
            that contains data that is not recognized as belonging to the data contract.</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.LogEntry.ILogEntry">
            <summary>
            Base interface for all log entries.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.ILogEntry.LogLevel">
            <summary>
            Gets the log level of the log entry.
            This is the intended level that the log entry should be written.
            This may cause the log entry to be ignored if the current
            <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/> has a higher threshold log level.
            </summary>
            <value>The log level.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.ILogEntry.Message">
            <summary>
            Gets the message to be logged.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.ILogEntry.CodeLocation">
            <summary>
            Gets the code location of the call to log.
            </summary>
            <value>The code location.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.ILogEntry.ThreadName">
            <summary>
            Gets or sets the name of the thread
            in which the request to log was made.
            </summary>
            <value>The name of the thread.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.ILogEntry.ManagedThreadId">
            <summary>
            Gets or sets the ManagedThreadId of the thread
            in which the request to log was made.
            </summary>
            <value>The name of the thread.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.ILogEntry.OccuredAt">
            <summary>
            Gets the time that the log request was made.
            </summary>
            <value>The time that the log request was made.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.ILogEntry.Properties">
            <summary>
            Gets the custom properties.
            </summary>
            <value>The custom properties.</value>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.DataContract.LogEntryData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Logging.DataContract.LogEntryData"/> class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.Logging.DataContract.LogEntryData.#ctor(Tencent.OA.Framework.Logging.LogEntry.ILogEntry)" -->
        <member name="P:Tencent.OA.Framework.Logging.DataContract.LogEntryData.LogLevel">
            <summary>
            Gets or sets the log level of the log entry.
            This is the intended level that the log entry should be written.
            This may cause the log entry to be ignored if the current
            <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/> has a higher threshold log level.
            </summary>
            <value>The log level.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.LogEntryData.Message">
            <summary>
            Gets or sets the message to be logged.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.LogEntryData.CodeLocation">
            <summary>
            Gets or sets the code location of the call to log.
            </summary>
            <value>The code location.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.LogEntryData.ExceptionMemento">
            <summary>
            Gets or sets the exception memento, representing
            an exception that is to be logged.
            May be null.
            </summary>
            <value>The exception memento.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.LogEntryData.ThreadName">
            <summary>
            Gets or sets the name of the thread that requested
            the log entry to take place.
            </summary>
            <value>The name of the thread.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.LogEntryData.ManagedThreadId">
            <summary>
            Gets or sets the managed thread id that requested
            the log entry to take place.
            </summary>
            <value>The managed thread id.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.LogEntryData.OccuredAt">
            <summary>
            Gets or sets the time that the log request was made.
            </summary>
            <value>The time that the log request was made.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.LogEntryData.Properties">
            <summary>
            Gets or sets additional custom properties.
            </summary>
            <value>The custom properties.</value>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Configuration.ClientLoggingConfigurationSectionHandler">
            <summary>
            Logging 系统的配置信息.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowDelegate">
            <summary>
            委托关系
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowDelegate.AddProcInstanceDelegate(Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate)" -->
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowDelegate.GetProcInstanceDelegates(System.Int32)">
            <summary>
            获取用户所有的流程委托关系包括委托和被委托
            </summary>
            <param name="staffId">用户的ID</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowDelegate.DeleteProcInstanceDelegates(System.Int32)">
            <summary>
            删除一条委托关系
            </summary>
            <param name="id">委托关系ID</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowDelegate.GetProcInstanceDelegatesWithID(System.Int32,System.String)">
            <summary>
            通过流程实例ID和步骤实例ID获取所有的委托关系
            </summary>
            <param name="procInstId">流程实例ID</param>
            <param name="actInstName">步骤 名称</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowDelegate.GetProcInstanceDelegatesWithStaffID(System.Int32,System.String,System.Int32)">
            <summary>
            通过流程实例ID、步骤实例ID、StaffID获取用户的所有的委托关系
            </summary>
            <param name="procInstId">流程实例ID</param>
            <param name="actInstName">步骤实例 名称</param>
            <param name="staffId">StaffID</param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.DataContract.K2DataField">
            <summary>
            字段
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2DataField.Name">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2DataField.Value">
            <summary>
            字段的值 
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2DataField.ExtensionData">
            <summary>
            Gets or sets the structure that contains extra data.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject"/> 
            that contains data that is not recognized as belonging to the data contract.</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver">
            <summary>
            Resolves a <see cref="T:System.Type"/> by name.
            </summary>
            <remarks>
            <p>
            The rationale behind the creation of this class is to centralise the
            resolution of type names to <see cref="T:System.Type"/> instances beyond that
            offered by the plain vanilla System.Type.GetType method call.
            </p>
            </remarks>
            <version>$Id: TypeResolver.cs,v 1.5 2004/09/28 07:51:47 springboy Exp $</version>
        </member>
        <member name="T:Tencent.OA.Framework.Utilities.TypesResolver.ITypeResolver">
            <summary>
            Resolves a <see cref="T:System.Type"/> by name.
            </summary>
            <remarks>
            <p>
            The rationale behind the creation of this interface is to centralise
            the resolution of type names to <see cref="T:System.Type"/> instances
            beyond that offered by the plain vanilla
            <see cref="M:System.Type.GetType(System.String)"/> method call.
            </p>
            </remarks>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.ITypeResolver.Resolve(System.String)">
            <summary>
            Resolves the supplied <paramref name="typeName"/> to a
            <see cref="T:System.Type"/>
            instance.
            </summary>
            <param name="typeName">
            The (possibly partially assembly qualified) name of a
            <see cref="T:System.Type"/>.
            </param>
            <returns>
            A resolved <see cref="T:System.Type"/> instance.
            </returns>
            <exception cref="T:System.TypeLoadException">
            If the supplied <paramref name="typeName"/> could not be resolved
            to a <see cref="T:System.Type"/>.
            </exception>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.#ctor">
            <summary>
            Creates a new instance of the TypeResolver class.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.Resolve(System.String)">
            <summary>
            Resolves the supplied <paramref name="typeName"/> to a
            <see cref="T:System.Type"/> instance.
            </summary>
            <param name="typeName">
            The unresolved name of a <see cref="T:System.Type"/>.
            </param>
            <returns>
            A resolved <see cref="T:System.Type"/> instance.
            </returns>
            <exception cref="T:System.TypeLoadException">
            If the supplied <paramref name="typeName"/> could not be resolved
            to a <see cref="T:System.Type"/>.
            </exception>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.ResolveGenericType(System.String)">
            <summary>
            Resolves the supplied generic <paramref name="typeName"/>,
            substituting recursively all its type parameters., 
            to a <see cref="T:System.Type"/> instance.
            </summary>
            <param name="typeName">
            The (possibly generic) name of a <see cref="T:System.Type"/>.
            </param>
            <returns>
            A resolved <see cref="T:System.Type"/> instance.
            </returns>
            <exception cref="T:System.TypeLoadException">
            If the supplied <paramref name="typeName"/> could not be resolved
            to a <see cref="T:System.Type"/>.
            </exception>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.ResolveType(System.String)">
            <summary>
            Resolves the supplied <paramref name="typeName"/> to a
            <see cref="T:System.Type"/>
            instance.
            </summary>
            <param name="typeName">
            The (possibly partially assembly qualified) name of a
            <see cref="T:System.Type"/>.
            </param>
            <returns>
            A resolved <see cref="T:System.Type"/> instance.
            </returns>
            <exception cref="T:System.TypeLoadException">
            If the supplied <paramref name="typeName"/> could not be resolved
            to a <see cref="T:System.Type"/>.
            </exception>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.LoadTypeDirectlyFromAssembly(Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.TypeAssemblyInfo)">
            <summary>
            Uses <see cref="M:System.Reflection.Assembly.LoadWithPartialName(System.String)"/>
            to load an <see cref="T:System.Reflection.Assembly"/> and then the attendant
            <see cref="T:System.Type"/> referred to by the <paramref name="typeInfo"/>
            parameter.
            </summary>
            <remarks>
            <p>
            <see cref="M:System.Reflection.Assembly.LoadWithPartialName(System.String)"/> is
            deprecated in .NET 2.0, but is still used here (even when this class is
            compiled for .NET 2.0);
            <see cref="M:System.Reflection.Assembly.LoadWithPartialName(System.String)"/> will
            still resolve (non-.NET Framework) local assemblies when given only the
            display name of an assembly (the behaviour for .NET Framework assemblies
            and strongly named assemblies is documented in the docs for the
            <see cref="M:System.Reflection.Assembly.LoadWithPartialName(System.String)"/> method).
            </p>
            </remarks>
            <param name="typeInfo">
            The assembly and type to be loaded.
            </param>
            <returns>
            A <see cref="T:System.Type"/>, or <see lang="null"/>.
            </returns>
            <exception cref="T:System.Exception">
            <see cref="M:System.Reflection.Assembly.LoadWithPartialName(System.String)"/>
            </exception>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.LoadTypeByIteratingOverAllLoadedAssemblies(Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.TypeAssemblyInfo)">
            <summary>
            Check all assembly
            to load the attendant <see cref="T:System.Type"/> referred to by 
            the <paramref name="typeInfo"/> parameter.
            </summary>
            <param name="typeInfo">
            The type to be loaded.
            </param>
            <returns>
            A <see cref="T:System.Type"/>, or <see lang="null"/>.
            </returns>
        </member>
        <member name="T:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.GenericArgumentsInfo">
            <summary>
            Holder for the generic arguments when using type parameters.
            </summary>
            <remarks>
            <p>
            Type parameters can be applied to classes, interfaces, 
            structures, methods, delegates, etc...
            </p>
            </remarks>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.GenericArgumentsInfo.GENERIC_ARGUMENTS_PREFIX">
            <summary>
            The generic arguments prefix.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.GenericArgumentsInfo.GENERIC_ARGUMENTS_SUFFIX">
            <summary>
            The generic arguments suffix.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.GenericArgumentsInfo.GENERIC_ARGUMENTS_SEPARATOR">
            <summary>
            The character that separates a list of generic arguments.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.GenericArgumentsInfo.#ctor(System.String)">
            <summary>
            Creates a new instance of the GenericArgumentsInfo class.
            </summary>
            <param name="value">
            The string value to parse looking for a generic definition
            and retrieving its generic arguments.
            </param>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.GenericArgumentsInfo.GetGenericArguments">
            <summary>
            Returns an array of unresolved generic arguments types.
            </summary>
            <remarks>
            <p>
            A empty string represents a type parameter that 
            did not have been substituted by a specific type.
            </p>
            </remarks>
            <returns>
            An array of strings that represents the unresolved generic 
            arguments types or an empty array if not generic.
            </returns>
        </member>
        <member name="P:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.GenericArgumentsInfo.GenericTypeName">
            <summary>
            The (unresolved) generic type name portion 
            of the original value when parsing a generic type.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.GenericArgumentsInfo.GenericMethodName">
            <summary>
            The (unresolved) generic method name portion 
            of the original value when parsing a generic method.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.GenericArgumentsInfo.ContainsGenericArguments">
            <summary>
            Is the string value contains generic arguments ?
            </summary>
            <remarks>
            <p>
            A generic argument can be a type parameter or a type argument.
            </p>
            </remarks>
        </member>
        <member name="P:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.GenericArgumentsInfo.IsGenericDefinition">
            <summary>
            Is generic arguments only contains type parameters ?
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.TypeAssemblyInfo">
            <summary>
            Holds data about a <see cref="T:System.Type"/> and it's
            attendant <see cref="T:System.Reflection.Assembly"/>.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.TypeAssemblyInfo.TYPE_ASSEMBLY_SEPARATOR">
            <summary>
            The string that separates a <see cref="T:System.Type"/> name
            from the name of it's attendant <see cref="T:System.Reflection.Assembly"/>
            in an assembly qualified type name.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.TypeAssemblyInfo.#ctor(System.String)">
            <summary>
            Creates a new instance of the TypeAssemblyInfo class.
            </summary>
            <param name="unresolvedTypeName">
            The unresolved name of a <see cref="T:System.Type"/>.
            </param>
        </member>
        <member name="P:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.TypeAssemblyInfo.TypeName">
            <summary>
            The (unresolved) type name portion of the original type name.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.TypeAssemblyInfo.AssemblyName">
            <summary>
            The (unresolved, possibly partial) name of the attandant assembly.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Utilities.TypesResolver.TypeResolver.TypeAssemblyInfo.IsAssemblyQualified">
            <summary>
            Is the type name being resolved assembly qualified?
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry">
            <summary> 
            Provides access to a central registry of aliased <see cref="T:System.Type"/>s.
            </summary>
            <remarks>
            <p>
            Simplifies configuration by allowing aliases to be used instead of
            fully qualified type names.
            </p>
            <p>
            Comes 'pre-loaded' with a number of convenience alias' for the more
            common types; an example would be the '<c>int</c>' (or '<c>Integer</c>'
            for Visual Basic.NET developers) alias for the <see cref="T:System.Int32"/>
            type.
            </p>
            </remarks>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.ArrayListAlias1">
            <summary>
            The alias around the 'list' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.ArrayListAlias2">
            <summary>
            Another alias around the 'list' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.BoolAlias">
            <summary>
            Another alias around the 'bool' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.BooleanAlias">
            <summary>
            The alias around the 'bool' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.ByteAlias">
            <summary>
            The alias around the 'byte' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.CharAlias">
            <summary>
            The alias around the 'char' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.DateAlias1">
            <summary>
            The alias around the 'DateTime' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.DateAlias2">
            <summary>
            Another alias around the 'DateTime' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.DecimalAlias">
            <summary>
            The alias around the 'decimal' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.DoubleAlias">
            <summary>
            The alias around the 'double' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.FloatAlias">
            <summary>
            The alias around the 'float' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.SingleAlias">
            <summary>
            Another alias around the 'float' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.GuidAlias">
            <summary>
            The alias around the 'guid' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.HashtableAlias1">
            <summary>
            The alias around the 'Hashtable' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.HashtableAlias2">
            <summary>
            Another alias around the 'Hashtable' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.HashtableAlias3">
            <summary>
            Another alias around the 'Hashtable' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.Int16Alias1">
            <summary>
            The alias around the 'short' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.Int16Alias2">
            <summary>
            Another alias around the 'short' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.Int32Alias1">
            <summary>
            The alias around the 'int' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.Int32Alias2">
            <summary>
            Another alias around the 'int' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.Int32Alias3">
            <summary>
            Another alias around the 'int' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.Int64Alias1">
            <summary>
            The alias around the 'long' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.Int64Alias2">
            <summary>
            Another alias around the 'long' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.UInt16Alias1">
            <summary>
            The alias around the 'unsigned short' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.UInt16Alias2">
            <summary>
            Another alias around the 'unsigned short' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.UInt32Alias1">
            <summary>
            The alias around the 'unsigned int' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.UInt32Alias2">
            <summary>
            Another alias around the 'unsigned int' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.UInt64Alias1">
            <summary>
            The alias around the 'unsigned long' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.UInt64Alias2">
            <summary>
            Another alias around the 'unsigned long' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.SByteAlias">
            <summary>
            The alias around the 'SByte' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.StringAlias">
            <summary>
            The alias around the 'string' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.TimeSpanAlias">
            <summary>
            The alias around the 'TimeSpan' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableInt32Alias">
            <summary>
            The alias around the 'int?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableInt32ArrayAlias">
            <summary>
            The alias around the 'int?[]' array type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableDecimalAlias">
            <summary>
            The alias around the 'decimal?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableDecimalArrayAlias">
            <summary>
            The alias around the 'decimal?[]' array type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableCharAlias">
            <summary>
            The alias around the 'char?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableCharArrayAlias">
            <summary>
            The alias around the 'char?[]' array type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableInt64Alias">
            <summary>
            The alias around the 'long?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableInt64ArrayAlias">
            <summary>
            The alias around the 'long?[]' array type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableInt16Alias">
            <summary>
            The alias around the 'short?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableInt16ArrayAlias">
            <summary>
            The alias around the 'short?[]' array type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableUInt32Alias">
            <summary>
            The alias around the 'unsigned int?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableUInt64Alias">
            <summary>
            The alias around the 'unsigned long?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableUInt64ArrayAlias">
            <summary>
            The alias around the 'ulong?[]' array type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableUInt32ArrayAlias">
            <summary>
            The alias around the 'uint?[]' array type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableUInt16Alias">
            <summary>
            The alias around the 'unsigned short?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableUInt16ArrayAlias">
            <summary>
            The alias around the 'ushort?[]' array type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableDoubleAlias">
            <summary>
            The alias around the 'double?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableDoubleArrayAlias">
            <summary>
            The alias around the 'double?[]' array type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableFloatAlias">
            <summary>
            The alias around the 'float?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableFloatArrayAlias">
            <summary>
            The alias around the 'float?[]' array type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableBoolAlias">
            <summary>
            The alias around the 'bool?' type.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.NullableBoolArrayAlias">
            <summary>
            The alias around the 'bool?[]' array type.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry"/> class.
            </summary>
            <remarks>
            <p>
            This is a utility class, and as such has no publicly visible
            constructors.
            </p>
            </remarks>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.#cctor">
            <summary>
            Initialises the static properties of the TypeAliasResolver class.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.TypeRegistry.ResolveType(System.String)">
            <summary> 
            Resolves the supplied <paramref name="alias"/> to a <see cref="T:System.Type"/>. 
            </summary> 
            <param name="alias">
            The alias to resolve.
            </param>
            <returns>
            The <see cref="T:System.Type"/> the supplied <paramref name="alias"/> was
            associated with, or <see lang="null"/> if no <see cref="T:System.Type"/> 
            was previously registered for the supplied <paramref name="alias"/>.
            </returns>
            <remarks>The alis name will be convert in lower character before the resolution.</remarks>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="alias"/> is <see langword="null"/> or
            contains only whitespace character(s).
            </exception>
        </member>
        <member name="T:Tencent.OA.Framework.ServiceModel.ServiceProxyHelper`2">
            <summary>
            通用的 WCF service 代理辅助类.
            </summary>
            <typeparam name="TProxy">The type of WCF service proxy to wrap.</typeparam>
            <typeparam name="TChannel">The type of WCF service interface to wrap.</typeparam>
        </member>
        <member name="F:Tencent.OA.Framework.ServiceModel.ServiceProxyHelper`2._proxy">
            <summary>
            Private instance of the WCF service proxy.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.ServiceProxyHelper`2.#ctor">
            <summary>
            Constructs an instance.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.ServiceProxyHelper`2.Dispose">
            <summary>
            释放代理实例.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.ServiceModel.ServiceProxyHelper`2.Proxy">
            <summary>
            Gets the WCF service proxy wrapped by this instance.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Proxy.RightClient.GetAgentRelation(System.Int32,System.Int32,System.Boolean)">
            <summary>
            得到当前系统，当前用户的
               被委托人  isGetAgentedData = false
               委托人    isGetAgentedData = true
            </summary>
            <param name="sysID"></param>
            <param name="staffID"></param>
            <param name="isGetAgentedData"></param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.RightWay.Entity.Operation.Desc">
            <summary>
            扩展备注属性
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.OrganizationCollection`1.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.OrganizationCollection`1.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.OrganizationCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            构造函数
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.OrganizationCollection`1.Contains(System.Int32)">
            <summary>
            根据元素ID来确定集合是否包含此元素
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.OrganizationCollection`1.RemoveById(System.Int32)">
            <summary>
            根据ID移除元素
            </summary>
            <param name="id"></param>
            <exception cref="T:Tencent.OA.Framework.Organization.OrgEntryNotFoundException"></exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.#ctor(System.Collections.Generic.IEnumerable{Tencent.OA.Framework.Organization.Staff})">
            <summary>
            构造函数
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.#ctor(System.Collections.Generic.List{Tencent.OA.Framework.Organization.DataContract.StaffInfo})">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.Contains(Tencent.OA.Framework.Organization.Staff)">
            <summary>
            检查集合是否包含指定的对象实例
            </summary>
            <param name="staff"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">输入参数不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.Remove(Tencent.OA.Framework.Organization.Staff)">
            <summary>
            从集合中删除指定对象
            </summary>
            <param name="staff"></param>
            <exception cref="T:System.ArgumentNullException">输入参数不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.ToString">
            <summary>
            将集合对象转化成";"分隔的Id序列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.ToString(System.String)">
            <summary>
            将集合对象转化成指定分隔符分隔的指定属性的序列
            </summary>
            <param name="splitter">分隔符</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.Organization.StaffCollection.ToString(System.String,System.String)" -->
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.Parse(System.String,System.String)">
            <summary>
            将Id序列转化成集合对象
            </summary>
            <param name="idString">Id序列</param>
            <param name="splitter">分隔符</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Id序列字符串和分隔符不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.Merge(Tencent.OA.Framework.Organization.StaffCollection)">
            <summary>
            添加一个新集合到集合中，现有集合会被改变(集合合并，当有重复对象则保留一个)
            </summary>
            <param name="c">要并入的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.MergeWith(Tencent.OA.Framework.Organization.StaffCollection)">
            <summary>
            合并集合，当有重复对象则保留一个
            </summary>
            <param name="c">要并入的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns>合并后的集合</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.InterseWith(Tencent.OA.Framework.Organization.StaffCollection)">
            <summary>
            集合比较，取两个集合的交集
            </summary>
            <param name="c">要进行比较的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.StaffCollection.ComplementWith(Tencent.OA.Framework.Organization.StaffCollection)">
            <summary>
            集合比较，取两个集合的补集
            </summary>
            <param name="c">要进行比较的子集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffService.GetStaffInfo(System.Int32)">
            <summary>
            获取员工信息
            </summary>
            <param name="staffId">员工Id</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffService.GetStaffInfo(System.String)">
            <summary>
            获取员工信息
            </summary>
            <param name="loginName">员工登录名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffService.GetAllStaffInfo">
            <summary>
            获取所有员工列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffService.GetAllStaffInfo(System.Boolean)">
            <summary>
            获取所有员工列表
            </summary>
            <param name="isIncludeFired">true 表示包含离职员工，false表示不包含</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffService.GetAllRegularStaffInfo(System.Boolean,System.String)">
            <summary>
            获取所有正式员工列表(不包含外聘)
            </summary>
            <param name="isIncludeFired">true 表示包含离职员工，false表示不包含</param>
            <param name="warrantString">授权字符串</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffService.GetStaffsByIdString(System.String,System.String)">
            <summary>
            根据Id序列查询员工列表
            </summary>
            <param name="idString">Id序列</param>
            <param name="splitter">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffService.GetPassByStaff(System.Int32)">
            <summary>
            通道
            </summary>
            <param name="staffid"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffService.GetStaffTypeByStaff(System.Int32)">
            <summary>
            员工类型
            </summary>
            <param name="staffid"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IPostService.GetPostInfo(System.Int32)">
            <summary>
            获取岗位信息
            </summary>
            <param name="postId">岗位Id</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IPostService.GetChildPostInfos(System.Int32,System.Int32)">
            <summary>
            获取子岗位信息
            </summary>
            <param name="postId">岗位ID</param>
            <param name="level">搜索的层次，如果为1,0或者是小于0则为查询其直接下属</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IPostService.GetParentPostInfos(System.Int32,System.Int32)">
            <summary>
            获取父级岗位信息
            </summary>
            <param name="postId">岗位ID</param>
            <param name="level">搜索的层次，如果为1,0或者是小于0则为查询其直接上级</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IPostService.GetAllPostInfos">
            <summary>
            获取所有岗位信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IPostService.GetAllPostInfos(System.Boolean)">
            <summary>
            获取所有岗位信息
            </summary>
            <param name="isIncludeDisabled">true 表示包含失效岗位，false表示不包含</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IPostService.GetAllPostInfos(System.Int32)">
            <summary>
            获取指定深度的所有岗位信息
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IPostService.GetPostsByIdString(System.String,System.String)">
            <summary>
            根据Id序列查询岗位列表
            </summary>
            <param name="idString">Id序列</param>
            <param name="splitter">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IPostService.GetChildStaffInfos(System.Int32,System.Int32)">
            <summary>
            获取岗位下属岗位对应的所有员工信息
            </summary>
            <param name="postId">岗位ID</param>
            <param name="level">搜索的层次，如果为1,0或者是小于0则为查询其直接下属</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IPostService.GetParentStaffInfos(System.Int32,System.Int32)">
            <summary>
            获取岗位信息
            </summary>
            <param name="postId">岗位ID</param>
            <param name="level">搜索的层次，如果为1,0或者是小于0则为查询其直接上级</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IPostService.GetStaffs(System.Int32)">
            <summary>
            获取指定岗位的所有在编员工信息
            </summary>
            <param name="postId"></param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.PostInfo.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.PostInfo.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.PostInfo.DepartmentID">
            <summary>
            所属部门
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.PostInfo.ParentId">
            <summary>
            父岗位ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.PostInfo.StateID">
            <summary>
            状态
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.PostInfo.PropertyID">
            <summary>
            岗位属性
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.PostInfo.EnableFlag">
            <summary>
            有效性
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.PostInfo.IsPrincipal">
            <summary>
            是否主岗位
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.PostInfo.LocationCode">
            <summary>
            岗位路径
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.PostInfo.ExProperties">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.KeyFieldList">
            <summary>
            业务审批可变字段列表
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.KeyFieldList.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="parentNode"></param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.KeyFieldList.Create(System.String,System.String)">
            <summary>
            创建一个KeyField节点
            </summary>
            <param name="name">节点名</param>
            <returns>返回KeyField节点</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.KeyFieldList.Create(System.String,System.String,System.Boolean,System.String)">
            <summary>
            创建一个KeyField节点
            </summary>
            <param name="name">节点名</param>
            <returns>返回KeyField节点</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.KeyFieldList.Remove(System.Int32)">
            <summary>
            删除某个节点
            </summary>
            <param name="index">要删除的节点的索引值</param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.KeyFieldList.Clear">
            <summary>
            删除所有节点
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.KeyFieldList.Item(System.Int32)">
            <summary>
            列表索引
            </summary>
            <param name="index">索引值</param>
            <returns>返回KeyField节点</returns>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.KeyField">
            <summary>
            业务审批可变字段节点
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.KeyField.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.KeyField.Name">
            <summary>
            KeyField名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.KeyField.UIType">
            <summary>
            KeyField UIType
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.KeyField.Description">
            <summary>
            KeyField 描述
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.KeyField.IsRequired">
            <summary>
            是否必填的，需要校验
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Filter.FilterBase">
            <summary>
            Base implementation for an <see cref="T:Tencent.OA.Framework.Logging.Filter.IFilter"/>.
            </summary>
            <summary>
            Base implementation for an <see cref="T:Tencent.OA.Framework.Logging.Filter.IFilter"/>.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Filter.IFilter">
            <summary>
            A filter is used to allow or prevent
            <see cref="T:Tencent.OA.Framework.Logging.LogEntry.ILogEntry"/> instances from being
            logged.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Filter.IFilter.IsValid(Tencent.OA.Framework.Logging.Filter.LogEntryOrigin,Tencent.OA.Framework.Logging.LogEntry.IClientInfo)">
            <summary>
            Determines whether the <see cref="T:Tencent.OA.Framework.Logging.LogEntry.ILogEntry"/> 
            should be logged. 
            </summary>
            <param name="origin">Where the call orginated. 
            <see cref="T:Tencent.OA.Framework.Logging.Filter.LogEntryOrigin"/></param>
            <param name="clientInfo">The caller information that this filter
            applies. Can be null.</param>
            <returns>
            	<c>true</c> if the <see cref="T:Tencent.OA.Framework.Logging.LogEntry.ILogEntry"/> should
            be logged; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Filter.IFilter.Load(System.Xml.XmlElement)">
            <summary>
            Initializes using the specified filter element.
            </summary>
            <param name="filterElement">The filter element.</param>
        </member>
        <member name="E:Tencent.OA.Framework.Logging.Filter.FilterBase.Init">
            <summary>
            Occurs when the filter is first initialised
            and the <see cref="T:Tencent.OA.Framework.Logging.Filter.FilterInitEventArgs"/> is available.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.ArgumentValidator">
            <summary>
            Utility class for validating method parameters.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ArgumentValidator.AssertNotNull``1(``0,System.String)">
            <summary>
            Ensures the specified value is not null.
            </summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="value">The value to test.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns>The specified value.</returns>
            <exception cref="T:System.ArgumentNullException">Occurs if the specified value 
            is <code>null</code>.</exception>
            <example>
            public UIElementAdapter(UIElement uiElement)
            {
            	this.uiElement = ArgumentValidator.AssertNotNull(uiElement, "uiElement");	
            }
            </example>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ArgumentValidator.AssertNotNullOrEmpty(System.String,System.String)">
            <summary>
            Ensures the specified value is not <code>null</code> or empty (a zero length string).
            </summary>
            <param name="value">The value to test.</param>
            <param name="parameterName">Name of the parameter.</param>
            <returns>The specified value.</returns>
            <exception cref="T:System.ArgumentNullException">Occurs if the specified value 
            is <code>null</code> or empty (a zero length string).</exception>
            <example>
            public DoSomething(string message)
            {
            	this.message = ArgumentValidator.AssertNotNullOrEmpty(message, "message");	
            }
            </example>
        </member>
        <member name="T:Tencent.OA.Framework.Exceptions.AppException">
            <summary>
            异常类的基类
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Exceptions.AppException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Exceptions.AppException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="M:Tencent.OA.Framework.Exceptions.AppException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常信息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="M:Tencent.OA.Framework.Exceptions.AppException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">异常信息</param>
            <param name="context">上下文信息</param>
        </member>
        <member name="M:Tencent.OA.Framework.Configuration.TOFConfigException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Configuration.TOFConfigException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="M:Tencent.OA.Framework.Configuration.TOFConfigException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常信息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="M:Tencent.OA.Framework.Configuration.TOFConfigException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">异常信息</param>
            <param name="context">上下文信息</param>
        </member>
        <member name="T:Tencent.OA.Framework.Diagnostics.CounterHelper`1">
            <summary>
            性能计数器容器
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.CounterHelper`1.Dispose">
            <summary>
            IDisposable接口
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.CounterHelper`1.Finalize">
            <summary>
            Destructor
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.CounterHelper`1.Decrement(`0)">
            <summary>
            
            </summary>
            <param name="counterName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.CounterHelper`1.Increment(`0)">
            <summary>
            
            </summary>
            <param name="counterName">n</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.CounterHelper`1.IncrementBy(`0,System.Int64)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="counterName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.CounterHelper`1.NextSample(`0)">
            <summary>
            
            </summary>
            <param name="counterName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.CounterHelper`1.NextValue(`0)">
            <summary>
            
            </summary>
            <param name="counterName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.CounterHelper`1.RawValue(`0,System.Int64)">
            <summary>
            
            </summary>
            <param name="counterName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.Impersonation">
             <summary>
             <example>
            IK2Connection k2Conn = K2Factory.NewK2Connection("oa-flowdb");; 
            using(Impersonation.Impersonate(userName, k2Conn) 
            { 
                //Do whatever work you need to do as the impersonated user 
            }
             </example>
             </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Impersonation.Impersonate(System.String,Tencent.OA.Framework.Workflow.Interfaces.IK2Connection)">
            <summary>
            模拟用户
            </summary>
            <param name="userName">用户英文名</param>
            <param name="conn">代表K2服务器链接</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Impersonation.Dispose">
            <summary>
            取消用户的模拟
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.DataContract.WorklistItem">
            <summary>
            代办事项
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.WorklistItem.ProcessInstID">
            <summary>
            流程实例ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.WorklistItem.ActInstID">
            <summary>
            步骤实例ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.WorklistItem.SerialNumber">
            <summary>
            顺序号
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.WorklistItem.PageURL">
            <summary>
            审批页面地址
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.WorklistItem.ActivityName">
            <summary>
            步骤名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.WorklistItem.ProcessFolio">
            <summary>
            流程标题
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.WorklistItem.Actions">
            <summary>
            流程操作
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.WorklistItem.AllocatedUser">
            <summary>
            流程处理人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.WorklistItem.Agent">
            <summary>
            委托处理人
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFClientProxy`1">
            <summary>
            Dynamic generator for a WCF ClientBase proxies
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFClientProxy`1.RegisterEndpoint(System.String)">
            <summary>
            Registers a specific interface with a specific configuration.
            </summary>
            <param name="configName"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFClientProxy`1.GetRegisteredInstance">
            <summary>
            Returns a configured registered instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFClientProxy`1.GetInstance(System.String)">
            <summary>
            Returns a new instance for a client proxy over the specified interface with the specified config name used for initialization.
            This is a simple instance of a ClientBase derived class.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFClientProxy`1.GetReusableInstance(System.String)">
            <summary>
            Returns a new instance for a client proxy over the specified interface with the specified config name used for initialization.
            This instance of the proxy can be reused as it will always "clean" itself
            if the channel is faulted.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFClientProxy`1.GetReusableFaultUnwrappingInstance(System.String)">
            <summary>
            Returns a new instance for a client proxy over the specified interface with the specified config name used for initialization.
            This instance of the proxy can be reused as it will always "clean" itself
            if the channel is faulted.
            The class will also unwrap any FaultException and throw the original Exception.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IRoleUpdate.SyncRole(System.Int32,System.String)">
            <summary>
            同步角色成员关联的角色
            </summary>
            <param name="sysId"></param>
            <param name="code"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IRight.CheckRight(System.Int32,System.Int32,System.String)">
            <summary>
            检查当前用户的当前操作的功能权限
            </summary>
            <param name="staffID"></param>
            <param name="sysID"></param>
            <param name="operateCode"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IRight.GetOperations(System.Int32,System.Int32)">
            <summary>
            获取当前系统的有权限的操作
            </summary>
            <param name="staffID"></param>
            <param name="sysID"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IRight.GetDataScope(System.Int32,System.Int32,System.String)">
            <summary>
            获取当前操作的数据权限范围
            </summary>
            <param name="staffID"></param>
            <param name="sysID"></param>
            <param name="operateCode"></param>
            <returns>
            人员，组织单元
            dataCode=类别code,dataObjectCode=id,dataObjectName=name
            我的相关
            dataCode=类别code,dataObjectCode=子项code，dataObjectName=子项name，dataObjectRemark=值id
            其它
            dataCode=类别code,dataObjectCode=子项code，dataObjectName=子项name，dataObjectRemark=子项remark
            </returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IRight.GetAllDataScope(System.Int32,System.Int32)">
            <summary>
            获取当前系统的数据权限范围
            </summary>
            <param name="staffID"></param>
            <param name="sysID"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IRight.GetAllRole(System.Int32,System.Int32)">
            <summary>
            得到职员所属的角色集
            </summary>
            <param name="staffID"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IRight.GetStaffByOperate(System.Int32,System.String)">
            <summary>
            通过操作获取对应的职员ID列表
            </summary>
            <param name="operateCode"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IRight.GetStaffByRoleAndOperate(System.Int32,System.String,System.String)">
            <summary>
            通过角色和操作获取对应的职员ID列表
            </summary>
            <param name="sysID"></param>
            <param name="operateCode"></param>
            <param name="roleCode"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IRight.GetMyRelation(System.Int32,System.String,System.String,System.Int32)">
            <summary>
            我的部门，我的秘书，我的EVP
            </summary>
            <param name="sysID"></param>
            <param name="roleCode"></param>
            <param name="operateCode"></param>
            <param name="staffID">当前用户</param>
            <returns>
            返回我的部门ID，秘书ID，EVP的ID
            如果不存在，则返回null
            </returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IRight.GetAgentRelation(System.Int32,System.Int32,System.Boolean)">
            <summary>
            得到当前系统，当前用户的
               被委托人  isGetAgentedData = false
               委托人    isGetAgentedData = true
            </summary>
            <param name="sysID"></param>
            <param name="staffID"></param>
            <param name="isGetAgentedData"></param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.ID">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.LoginName">
            <summary>
            Outlook名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.EnglishName">
            <summary>
            英文名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.ChineseName">
            <summary>
            中文名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.FullName">
            <summary>
            全名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.Gender">
            <summary>
            性别
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.Enabled">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.Birthday">
            <summary>
            出生年月
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.DepartmentId">
            <summary>
            所属二级部门编号
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.DepartmentName">
            <summary>
            所属二级部门名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.OfficialId">
            <summary>
            主管业务副总ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.OfficialName">
            <summary>
            主管业务副总名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.GroupId">
            <summary>
            所在小组ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.GroupName">
            <summary>
            所在小组名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.PostId">
            <summary>
            职位编号
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.PostName">
            <summary>
            职位名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.TypeId">
            <summary>
            类型ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.TypeName">
            <summary>
            类型名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.StatusId">
            <summary>
            状态ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.StatusName">
            <summary>
            状态名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.WorkDeptId">
            <summary>
            当前工作部门ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.WorkDeptName">
            <summary>
            当前工作部门名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.MobilePhoneNumber">
            <summary>
            移动电话
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.BranchPhoneNumber">
            <summary>
            移动电话
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.RTX">
            <summary>
            RTX号码
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffInfo.ExProperties">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Organization.DataContract.DeptMapp">
            <summary>
            OA和RTX部门映射
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptMapp.OADeptID">
            <summary>
            OA部门ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptMapp.RTXDeptID">
            <summary>
            RTX部门ID
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.FieldValueList.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="parentNode"></param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.FieldValueList.Create(System.String,System.Boolean)">
            <summary>
            创建一个FieldValue节点
            </summary>
            <param name="name">节点名</param>
            <returns>返回Summary节点</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.FieldValueList.Remove(System.Int32)">
            <summary>
            删除某个节点
            </summary>
            <param name="index">要删除的节点的索引值</param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.FieldValueList.Clear">
            <summary>
            删除所有节点
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.FieldValueList.Item(System.Int32)">
            <summary>
            列表索引
            </summary>
            <param name="index">索引值</param>
            <returns>返回FieldValue节点</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.LogEntry.IClientLogEntry">
            <summary>
            A log entry originating from a remote location
            such as from a web client, arriving via a web service.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.IClientLogEntry.ExceptionMemento">
            <summary>
            Gets the exception memento.
            May be null.
            </summary>
            <value>The exception memento.</value>
        </member>
        <member name="T:Tencent.OA.Framework.Web.Security.AuthenticationType">
            <summary>
            授权类型
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Web.Security.AuthenticationType.None">
            <summary>
            未论证
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Web.Security.AuthenticationType.OA">
            <summary>
            OA验证
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Web.Security.AuthenticationType.Outlook">
            <summary>
            Outlook验证
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Web.Security.AuthenticationType.Token">
            <summary>
            Token验证
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Web.Security.AuthenticationTicket">
            <summary>
            认证票据
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.AuthenticationTicket.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.AuthenticationTicket.#ctor(System.String,System.Int32,System.String,System.String,System.Int32,System.String,System.Boolean,System.Int32)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="staffId"></param>
            <param name="loginName"></param>
            <param name="chineseName"></param>
            <param name="deptID"></param>
            <param name="deptName"></param>
            <param name="isPersistent"></param>
            <param name="timeout">超时时间/分钟</param>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.AuthenticationTicket.#ctor(System.String,System.Int32,System.Int32,System.String,System.String,System.Int32,System.String,System.DateTime,System.DateTime,System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="key"></param>
            <param name="version"></param>
            <param name="staffId"></param>
            <param name="loginName"></param>
            <param name="chineseName"></param>
            <param name="deptID"></param>
            <param name="deptName"></param>
            <param name="issueDate"></param>
            <param name="expiration"></param>
            <param name="isPersistent"></param>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.Key">
            <summary>
            密钥
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.Expiration">
            <summary>
            票据过期时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.Expired">
            <summary>
            票据是否已过期
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.IsPersistent">
            <summary>
            票据是否持久到存储媒介
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.IssueDate">
            <summary>
            票据颁发日期
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.StaffId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.LoginName">
            <summary>
            用户名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.ChineseName">
            <summary>
            用户中文名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.DeptId">
            <summary>
            用户部门ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.DeptName">
            <summary>
            用户部门名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.Version">
            <summary>
            版本
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.AuthenticationTicket.Token">
            <summary>
            令牌数据
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.TransactionDecorator">
            <summary>
            TransactionDecorator 包装 (装饰模式) 了系统内建的 TransactionScope 类 
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.TransactionDecorator.#ctor">
            <summary>
            初始化一个 TransactionDecorator实例. 
            设置内部的TransactionScope实例
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.TransactionDecorator.#ctor(System.Transactions.Transaction)">
            <summary>
            初始化一个 TransactionDecorator实例 和设置 内部所使用的Transaction
            </summary>
            <param name="transactionToUse">所使用的Transaction</param>
        </member>
        <member name="M:Tencent.OA.Framework.TransactionDecorator.#ctor(System.Transactions.TransactionScopeOption)">
            <summary>
            使用特殊选项 初始化一个 TransactionDecorator实例  
            </summary>
            <param name="scopeOption">Provides additional options for creating a TransactionDecorator.</param>
        </member>
        <member name="M:Tencent.OA.Framework.TransactionDecorator.#ctor(System.Transactions.Transaction,System.TimeSpan)">
            <summary>
            Initializes a new instance of the TransactionScope class 
            with the specified timeout value, and sets the specified 
            transaction as the ambient transaction, so that transactional 
            work done inside the scope uses this transDoFactory. 
            </summary>
            <param name="transactionToUse">Represents a transaction.</param>
            <param name="scopeTimeout">The TimeSpan after which the transaction scope times out and aborts the transaction.</param>
        </member>
        <member name="M:Tencent.OA.Framework.TransactionDecorator.#ctor(System.Transactions.TransactionScopeOption,System.TimeSpan)">
            <summary>
            Initializes a new instance of the TransactionScope class 
            with the specified timeout value and requirements.
            </summary>
            <param name="scopeOption">TransactionScopeOption enumeration that describes the transaction requirements associated with this transaction scope.</param>
            <param name="scopeTimeout">The TimeSpan after which the transaction scope times out and aborts the transaction.</param>
        </member>
        <member name="M:Tencent.OA.Framework.TransactionDecorator.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions)">
            <summary>
            Initializes a new instance of the TransactionScope class with the specified requirements.
            </summary>
            <param name="scopeOption">TransactionScopeOption enumeration that describes the transaction requirements associated with this transaction scope.</param>
            <param name="transactionOptions">A TransactionOptions structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.</param>
        </member>
        <member name="M:Tencent.OA.Framework.TransactionDecorator.#ctor(System.Transactions.Transaction,System.TimeSpan,System.Transactions.EnterpriseServicesInteropOption)">
            <summary>
            Initializes a new instance of the TransactionScope class with the specified 
            timeout value and COM+ interoperability requirements, and sets the specified 
            transaction as the ambient transaction, so that transactional work done inside 
            the scope uses this transDoFactory. 
            </summary>
            <param name="transactionToUse">Represents a transaction.</param>
            <param name="scopeTimeout">The TimeSpan after which the transaction scope times out and aborts the transaction.</param>
            <param name="interopOption">An instance of the EnterpriseServicesInteropOption enumeration that describes how the associated transaction interacts with COM+ transactions.</param>
        </member>
        <member name="M:Tencent.OA.Framework.TransactionDecorator.#ctor(System.Transactions.TransactionScopeOption,System.Transactions.TransactionOptions,System.Transactions.EnterpriseServicesInteropOption)">
            <summary>
            Initializes a new instance of the TransactionScope class with the 
            specified scope and COM+ interoperability requirements, and 
            transaction options.
            </summary>
            <param name="scopeOption">TransactionScopeOption enumeration that describes the transaction requirements associated with this transaction scope.</param>
            <param name="transactionOptions">A TransactionOptions structure that describes the transaction options to use if a new transaction is created. If an existing transaction is used, the timeout value in this parameter applies to the transaction scope. If that time expires before the scope is disposed, the transaction is aborted.</param>
            <param name="interopOption">An instance of the EnterpriseServicesInteropOption enumeration that describes how the associated transaction interacts with COM+ transactions.</param>
        </member>
        <member name="M:Tencent.OA.Framework.TransactionDecorator.Complete">
            <summary>
            保证在scope 内的所有操作都成功提交.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.TransactionDecorator.Dispose">
            <summary>
            结束和销毁 transaction scope.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Quartz.JobBase">
            <summary>
            定时任务基类
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Quartz.JobBase.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Quartz.JobBase.Execute(Quartz.JobExecutionContext)">
            <summary>
            执行Job内容
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Quartz.JobBase.ScheduleNextJob(Quartz.JobExecutionContext)">
            <summary>
            调度下一个Job
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Quartz.JobBase.ScheduleJob(System.Type,Quartz.IScheduler)">
            <summary>
            调度Job的执行
            </summary>
            <param name="jobType">job类型</param>
            <param name="scheduler"></param>
        </member>
        <member name="P:Tencent.OA.Framework.Quartz.JobBase.Success">
            <summary>
            是否成功
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffPostService.GetStaffMajorPost(System.Int32)">
            <summary>
            获取员工主岗位
            </summary>
            <param name="staffId">员工Id</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffPostService.GetStaffAllPosts(System.Int32)">
            <summary>
            获取员工所有岗位
            </summary>
            <param name="staffId">员工Id</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffPostService.GetStaffDirectLeaders(System.Int32)">
            <summary>
            获取直接上级
            </summary>
            <param name="staffId">员工Id</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffPostService.GetDirectLeaders(System.Int32)">
            <summary>
            通过回报关系获取直接上级
            </summary>
            <param name="staffId">员工Id</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffPostService.GetDirectSubStaffs(System.Int32)">
            <summary>
            获取员工直接下属
            </summary>
            <param name="staffId">员工Id</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffPostService.GetAllSubStaffs(System.Int32)">
            <summary>
            获取员工所有下属
            </summary>
            <param name="staffId">员工Id</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.#ctor(System.Collections.Generic.IEnumerable{Tencent.OA.Framework.Organization.Post})">
            <summary>
            构造函数
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.#ctor(System.Collections.Generic.List{Tencent.OA.Framework.Organization.DataContract.PostInfo})">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.Contains(Tencent.OA.Framework.Organization.Post)">
            <summary>
            检查集合是否包含指定的对象实例
            </summary>
            <param name="post"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">输入参数不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.Remove(Tencent.OA.Framework.Organization.Post)">
            <summary>
            从集合中删除指定对象
            </summary>
            <param name="post"></param>
            <exception cref="T:System.ArgumentNullException">输入参数不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.ToString">
            <summary>
            将集合对象转化成";"分隔的Id序列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.ToString(System.String)">
            <summary>
            将集合对象转化成指定分隔符分隔的指定属性的序列
            </summary>
            <param name="splitter">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.ToString(System.String,System.String)">
            <summary>
            将集合对象转化成指定分隔符分隔的指定属性的序列
            </summary>
            <param name="property">用于构成序列的属性</param>
            <param name="splitter">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.Parse(System.String,System.String)">
            <summary>
            将Id序列转化成集合对象
            </summary>
            <param name="idString">Id序列</param>
            <param name="splitter">分隔符</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Id序列字符串和分隔符不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.Merge(Tencent.OA.Framework.Organization.PostCollection)">
            <summary>
            添加一个新集合到集合中，现有集合会被改变(集合合并，当有重复对象则保留一个)
            </summary>
            <param name="c">要并入的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.MergeWith(Tencent.OA.Framework.Organization.PostCollection)">
            <summary>
            合并集合，当有重复对象则保留一个
            </summary>
            <param name="c">要并入的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns>合并后的集合</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.InterseWith(Tencent.OA.Framework.Organization.PostCollection)">
            <summary>
            集合比较，取两个集合的交集
            </summary>
            <param name="c">要进行比较的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.PostCollection.ComplementWith(Tencent.OA.Framework.Organization.PostCollection)">
            <summary>
            集合比较，取两个集合的补集
            </summary>
            <param name="c">要进行比较的子集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.LogEventArgs">
            <summary>
            Contains information regarding a logging event.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.LogEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Logging.LogEventArgs"/> class.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.LogEventArgs.#ctor(Tencent.OA.Framework.Logging.LogEntry.ILogEntry)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Logging.LogEventArgs"/> class.
            </summary>
            <param name="logEntry">The log entry data.</param>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEventArgs.LogEntry">
            <summary>
            Gets the log entry data.
            </summary>
            <value>The log entry data.</value>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Filter.FilterAction">
            <summary>
            Specifies the action to be taken
            if a filter is deemed to be invalid or valid.
            <seealso cref="T:Tencent.OA.Framework.Logging.Filter.IFilter"/>
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.Filter.FilterAction.Default">
            <summary>
            The default action.
            The filter will take what ever 
            action it regards as appropriate.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.Filter.FilterAction.Deny">
            <summary>
            The filter may choose to reject
            the logging request.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.Filter.FilterAction.Allow">
            <summary>
            The filter may choose to accept 
            the logging request.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.IExceptionMemento">
            <summary>
            异常日志信息<see cref="T:System.Exception"/>.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.IExceptionMemento.TypeName">
            <summary>
            异常的类型名 <see cref="T:System.Type"/> 
            </summary>
            <value>异常的类型名.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.IExceptionMemento.Message">
            <summary>
            异常的message属性.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.IExceptionMemento.Source">
            <summary>
            异常的source 属性
            </summary>
            <value>异常的源.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.IExceptionMemento.StackTrace">
            <summary>
            获取和设置异常的堆栈信息
            </summary>
            <value>异常堆栈信息.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.IExceptionMemento.HelpLink">
            <summary>
            异常的HelpLink  
            </summary>
            <value>异常的HelpLink.</value>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.DataContract.LogEntryBase.#ctor(Tencent.OA.Framework.Logging.LogLevel,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Logging.DataContract.LogEntryBase"/> class.
            </summary>
            <param name="logLevel">The log level.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.DataContract.LogEntryBase.#ctor(Tencent.OA.Framework.Logging.DataContract.LogEntryData)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Logging.DataContract.LogEntryBase"/> class.
            </summary>
            <param name="logEntryData">The log entry data.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.DataContract.LogEntryBase.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> 
            that represents the current <see cref="T:Tencent.OA.Framework.Logging.DataContract.LogEntryBase"/>.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Tencent.OA.Framework.Logging.DataContract.LogEntryBase"/>.
            </returns>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientLogEntry.ExceptionMemento">
            <summary>
            异常信息
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Extensions.ComparerExtensions">
            <summary>
            Class containing extension methods for comparison and sorting using textual sort expressions.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.ComparerExtensions.Sort``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
            Sort the elements of a list according to the specified sort expression.
            </summary>
            <typeparam name="T">List item type</typeparam>
            <param name="list">List to be sorted</param>
            <param name="sortExpression">A SQL-like sort expression with comma separated property names (and optional direction specifiers) (e.g. "Age DESC, Name")</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="list"/> is null or <paramref name="sortExpression"/> is null</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If <paramref name="sortExpression"/> is an invalid sort expression.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.ComparerExtensions.Sort``1(System.Collections.Generic.List{``0},System.Int32,System.Int32,System.String)">
            <summary>
            Sorts the elements in a range of elements in a list using the specified sort expression 
            </summary>
            <typeparam name="T">List item type</typeparam>
            <param name="list">List to be sorted</param>
            <param name="index">Index of first item to be sorted</param>
            <param name="count">Number of items to be sorted.</param>
            <param name="sortExpression">A SQL-like sort expression with comma separated property names (and optional direction specifiers) (e.g. "Age DESC, Name")</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="list"/> is null or <paramref name="sortExpression"/> is null</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If <paramref name="sortExpression"/> is an invalid sort expression.</exception>
            <exception cref="!:System.ArgumentOutOfRangeExcpetion"><paramref name="index"/> not a valid list index or <paramref name="count"/> out of range.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.ComparerExtensions.Sort``1(``0[],System.String)">
            <summary>
            Sort the elements in an array according specified sort expression.
            </summary>
            <typeparam name="T">Type of array items</typeparam>
            <param name="array">Array to be sorted</param>
            <param name="sortExpression">A SQL-like sort expression with comma separated property names (and optional direction specifiers) (e.g. "Age DESC, Name")</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null or <paramref name="sortExpression"/> is null</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If <paramref name="sortExpression"/> is an invalid sort expression.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.ComparerExtensions.Sort``1(``0[],System.Int32,System.Int32,System.String)">
            <summary>
            Sorts the elements in a range of elements in an array using the specified sort expression.
            </summary>
            <typeparam name="T">Type of elements in array</typeparam>
            <param name="array">Array to be sorted.</param>
            <param name="index">Index of first element to be sorted</param>
            <param name="length">Number of elements to be sorted.</param>
            <param name="sortExpression">A SQL-like sort expression with comma separated property names (and optional direction specifiers) (e.g. "Age DESC, Name")</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null or <paramref name="sortExpression"/> is null</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If <paramref name="sortExpression"/> is an invalid sort expression.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> or <paramref name="length"/> out of range.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.ComparerExtensions.IsOrderedBy``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Tests whether the elements in the given sequence is sorted according to the specified fields.
            </summary>
            <typeparam name="T">Type of items in sequence</typeparam>
            <param name="source">Sequence to test</param>
            <param name="sortExpression">A SQL-like sort expression with comma separated property names (and optional direction specifiers) (e.g. "Age DESC, Name")</param>
            <returns>True if all elements in sequence is sorted according to the specified fields (or if sequence is empty), otherwise false.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null or <paramref name="sortExpression"/> is null</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If <paramref name="sortExpression"/> is an invalid sort expression.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.ComparerExtensions.ValidateSortExpression``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Checks that the given sort expression is valid for the given sequence.
            </summary>
            <remarks>
            If you do not have a reference to an instance of the expression you can directly call 
            ComparerBuilder&lt;T&gt;.CreateTypeComparison(sortExpression) to validate a sort expression.
            </remarks>
            <typeparam name="T">Type of items in sequence</typeparam>
            <param name="source">Sequence to be tested</param>
            <param name="sortExpression">Sort expression to be verified.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="sortExpression"/> is null</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If sort expression is not valid.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.ComparerExtensions.OrderBy``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Sort the elements of a sequence according to the specified textual sort expression.
            </summary>
            <typeparam name="T">Type in sequence</typeparam>
            <param name="source">Sequence to be sorted</param>
            <param name="sortExpression">A SQL-like sort expression with comma separated property names (and optional direction specifiers) (e.g. "Age DESC, Name")</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null or <paramref name="sortExpression"/> is null</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If <paramref name="sortExpression"/> is an invalid sort expression.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.ComparerExtensions.OrderBy``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
            Sort the element of a queryable sequence by a given sort expression.
            </summary>
            <typeparam name="T">Type of items in sequence.</typeparam>
            <param name="source">Sequence to be sorted.</param>
            <param name="sortExpression">A SQL-like sort expression with comma separated property names (and optional direction specifiers) (e.g. "Age DESC, Name")</param>
            <returns>A queryable object that can enumerate the elements in the input sequence ordered according to the given sort expression.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null or <paramref name="sortExpression"/> is null</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If <paramref name="sortExpression"/> is an invalid sort expression.</exception>
        </member>
        <member name="T:Tencent.OA.Framework.Data.QueryCommandBuilder">
            <summary>
            The base class for all QueryCommandBuilders which provides most resuable mfunctions.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.GetDbProviderFactory">
            <summary>
            Gets the db provider factory.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.ToParameterName(System.String)">
            <summary>
            Format a name string to a parameter name.
            </summary>
            <param name="name">The name.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.GetDatabaseObjectNameQuoteCharacters">
            <summary>
            Gets the database object name quote characters.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.BuildCommandText(System.String,System.Data.Common.DbParameterCollection)">
            <summary>
            Builds the command text.
            </summary>
            <param name="cacheableSql">The cacheable SQL.</param>
            <param name="parameterCollection">The parameter collection.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.BuildPagingCacheableSql(Tencent.OA.Framework.Data.QueryCriteria)">
            <summary>
            Builds the paging cacheable SQL.
            </summary>
            <param name="criteria">The criteria.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.AppendSortBys(Tencent.OA.Framework.Data.QueryCriteria,System.Text.StringBuilder)">
            <summary>
            Appends the sort bys.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="sb">The sb.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.AppendConditions(Tencent.OA.Framework.Data.QueryCriteria,System.Text.StringBuilder)">
            <summary>
            Appends the conditions.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="sb">The sb.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.AppendFrom(System.String,System.Text.StringBuilder)">
            <summary>
            Appends from.
            </summary>
            <param name="tableName">Name of the table.</param>
            <param name="sb">The sb.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.AppendResultColumns(Tencent.OA.Framework.Data.QueryCriteria,System.Text.StringBuilder)">
            <summary>
            Appends the result columns.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="sb">The sb.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.BuildCommandParameters(Tencent.OA.Framework.Data.QueryCriteria,System.Data.Common.DbParameterCollection,System.Boolean)">
            <summary>
            Builds the command parameters.
            </summary>
            <param name="criteria">The criteria.</param>
            <param name="parameterCollection">The parameter collection.</param>
            <param name="setParameterValueOnly">if set to <c>true</c> [set parameter value only].</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.AddAssignmentParameters(Tencent.OA.Framework.Data.Assignment,System.Data.Common.DbParameterCollection,System.Boolean)">
            <summary>
            Adds the assignment parameters.
            </summary>
            <param name="assignment">The assignment.</param>
            <param name="parameterCollection">The parameter collection.</param>
            <param name="setParameterValueOnly">if set to <c>true</c> [set parameter value only].</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.AddConditionParameters(Tencent.OA.Framework.Data.Condition,System.Data.Common.DbParameterCollection,System.Boolean)">
            <summary>
            Adds the condition parameters.
            </summary>
            <param name="condition">The condition.</param>
            <param name="parameterCollection">The parameter collection.</param>
            <param name="setParameterValueOnly">if set to <c>true</c> [set parameter value only].</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.AddExpressionParameters(Tencent.OA.Framework.Data.IExpression,System.Data.Common.DbParameterCollection,System.Boolean)">
            <summary>
            Adds the expression parameters.
            </summary>
            <param name="expr">The expr.</param>
            <param name="parameterCollection">The parameter collection.</param>
            <param name="setParameterValueOnly">if set to <c>true</c> [set parameter value only].</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.AdjustParameterProperties(Tencent.OA.Framework.Data.IParameterExpression,System.Data.Common.DbParameter)">
            <summary>
            Adjusts the parameter properties.
            </summary>
            <param name="parameterExpr">The parameter expr.</param>
            <param name="parameter">The parameter.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.AddParameter(Tencent.OA.Framework.Data.IParameterExpression,System.Data.Common.DbParameterCollection,System.Boolean)">
            <summary>
            Adds the parameter.
            </summary>
            <param name="parameterExpr">The parameter expr.</param>
            <param name="parameterCollection">The parameter collection.</param>
            <param name="setParameterValueOnly">if set to <c>true</c> [set parameter value only].</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandBuilder.CloneCommand(System.Data.Common.DbCommand)">
            <summary>
            Clones the command.
            </summary>
            <param name="cmd">The CMD.</param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.K2Factory2">
            <summary>
            流程API的统一入口
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.GetUserWorklists(System.String)">
            <summary>
            获取用户的流程的待办事项
            </summary>
            <param name="engName">用户的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.GetUserWorklists(System.String,System.String)">
            <summary>
            获取用户的流程的待办事项
            </summary>
            <param name="flowName">流程名称</param>
            <param name="engName">用户的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.GetUserWorklists(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            获取用户的流程的待办事项
            </summary>
            <param name="flowNameList">流程名称</param>
            <param name="engName">用户的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.GetUserWorklists(System.String,System.String,System.String)">
            <summary>
            获取用户的流程的待办事项
            </summary>
            <param name="flowName">流程名称</param>
            <param name="activeName">活动名称</param>
            <param name="engname">用户的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.GetUserWorklists(System.String,Tencent.OA.Framework.Workflow.DataContract.WorklistCriteria)">
            <summary>
            获取用户的流程的待办事项
            </summary>
            <param name="engname">用户的英文名</param>
            <param name="criteria">高级查询对象</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.GetWorklistItem(System.String,System.String)">
            <summary>
            获取工作项
            </summary>
            <param name="Identifier">工作项的ID</param>
            <param name="engname">当前操作者的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.StartProcess(System.String,System.String,System.String,System.Collections.Generic.List{Tencent.OA.Framework.Workflow.DataContract.K2DataField})">
            <summary>
            启动流程实例
            </summary>
            <param name="engname">用户英文名</param>、
            <param name="processFullname">流程的全名，例如 K2DecimalWF\DecimalWF</param>
            <param name="folio">流程的标题,可以将自定义的流程编号放在这个Folio字段中</param>
            <param name="dataList">流程变量</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.StartProcessAsync(System.String,System.String,System.String,System.Collections.Generic.List{Tencent.OA.Framework.Workflow.DataContract.K2DataField})">
            <summary>
            异步方式启动流程实例
            </summary>
            <param name="engname">用户英文名</param>、
            <param name="processFullname">流程的全名，例如 K2DecimalWF\DecimalWF</param>
            <param name="folio">流程的标题,可以将自定义的流程编号放在这个Folio字段中</param>
            <param name="dataList">流程变量</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.SubmitWorkItem(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String,System.String)">
            <summary>
            提交审批流程
            </summary>
            <param name="workItem">工作项</param>
            <param name="action">执行的动作</param>
            <param name="engname">提交的用户</param>
            <param name="memo">审批的意见</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.SubmitWorkItemAsync(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String,System.String)">
            <summary>
            异步方式提交审批流程
            </summary>
            <param name="workItem">工作项</param>
            <param name="action">执行的动作</param>
            <param name="engname">提交的用户</param>
            <param name="memo">审批的意见</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.GotoActivity(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String)">
            <summary>
            用户Goto到流程的步骤
            </summary>
            <param name="workItem">工作项</param>
            <param name="engname">用户英文名</param>
            <param name="activity">步骤名称</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.GotoActivityAsync(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String)">
            <summary>
            异步方式用户Goto到流程的步骤
            </summary>
            <param name="workItem">工作项</param>
            <param name="engname">用户英文名</param>
            <param name="activity">步骤名称</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory2.Redirect(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String)">
            <summary>
            将任务转交给用户
            </summary>
            <param name="workItem">工作项</param>
            <param name="engname">用户英文名</param>
            <param name="username">转交给的用户英文名</param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.K2Factory">
            <summary>
            流程API的统一入口
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2Process(System.UInt32,Tencent.OA.Framework.Workflow.Interfaces.IK2Connection)">
            <summary>
            获取流程的信息
            </summary>
            <param name="ProcID"></param>
            <param name="Connection"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2Worklist(Tencent.OA.Framework.Workflow.Interfaces.IK2Connection,System.Collections.Generic.List{System.String})">
            <summary>
            获取用户的代办
            </summary>
            <param name="flowNames">流程的完整名称列表</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2Worklist(Tencent.OA.Framework.Workflow.Interfaces.IK2Connection)">
            <summary>
            取流程的待处理工作项列表
            </summary>
            <param name="Connection"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2Worklist(Tencent.OA.Framework.Workflow.Interfaces.IK2Connection,SourceCode.Workflow.Client.WorklistCriteria)">
            <summary>
            通过查询条件获取流程的待处理工作项列表
            </summary>
            <param name="Connection"></param>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2Worklist(System.String,Tencent.OA.Framework.Workflow.Interfaces.IK2Connection)">
            <summary>
            通过流程名获取流程的待处理工作项列表
            </summary>
            <param name="ProcessName"></param>
            <param name="Connection"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2Worklist(System.String,System.String,Tencent.OA.Framework.Workflow.Interfaces.IK2Connection)">
            <summary>
            通过流程名和Activity名获取流程的待处理工作项列表 
            </summary>
            <param name="processName"></param>
            <param name="activityName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2Worklist(System.Object,System.DateTime,Tencent.OA.Framework.Workflow.Interfaces.IK2Connection)">
            <summary>
            通过流程ID和Activity的创建时间获取流程的待处理工作项列表
            </summary>
            <param name="ProcessID"></param>
            <param name="created"></param>
            <param name="Connection"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2WorklistItem(System.String,Tencent.OA.Framework.Workflow.Interfaces.IK2Connection)">
            <summary>
            获取工作项
            </summary>
            <param name="Identifier"></param>
            <param name="Connection"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.NewK2Connection(System.String)">
            <summary>
            打开一个新的服务器链接
            </summary>
            <param name="Server"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.NewK2ConnectionEx">
            <summary>
            打开一个新的服务器链接
            </summary>
            <param name="Server"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.NewK2Connection(System.String,System.String)">
            <summary>
            打开一个新的服务器链接,使用SQL认证方式，使用5252端口
            </summary>
            <param name="Server"></param>
            <param name="UserName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.NewK2Connection(System.String,System.UInt32,System.String)">
            <summary>
            打开一个新的服务器链接,使用SQL认证方式，使用5252端口
            </summary>
            <param name="Server"></param>
            <param name="Port"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.NewK2Connection(System.String,System.UInt32,System.String,System.String)">
            <summary>
            打开一个新的服务器链接,使用SQL认证方式，使用5252端口
            </summary>
            <param name="Server"></param>
            <param name="Port"></param>
            <param name="SecLabel"></param>
            <param name="UserName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.NewK2Connection(System.String,System.UInt32,System.String,System.String,System.String)">
            <summary>
            打开一个新的服务器链接
            </summary>
            <param name="Server"></param>
            <param name="Port"></param>
            <param name="SecLabel"></param>
            <param name="UserName"></param>
            <param name="Password"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.NewK2Process(System.String,System.String,Tencent.OA.Framework.Workflow.Interfaces.IK2Connection)">
            <summary>
            启动一个新流程，可以将自定义的流程编号放在这个ProcFolio字段中
            </summary>
            <param name="ProcName"></param>
            <param name="ProcFolio">可以将自定义的流程编号放在这个字段中</param>
            <param name="Connection"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.SaveActivityMemo(Tencent.OA.Framework.Workflow.DataContract.ActivityMemo)">
            <summary>
            保存审批意见
            </summary>
            <param name="actMemo"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetActivityMemo(System.Int32,System.String)">
            <summary>
            获取流程实例的活动审批意见
            </summary>
            <param name="procInstId"></param>
            <param name="serialNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetActivityMemos(System.Int32)">
            <summary>
            获取流程实例的所有审批意见
            </summary>
            <param name="procInstId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2Process(System.Int32)">
            <summary>
            获取K2的流程信息
            </summary>
            <param name="procInstID">流程ID</param>
            <returns>流程实例ID</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2ProcessActivity(System.Int32)">
            <summary>
            获取流程的审批历史
            </summary>
            <param name="procInstID">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2ActiveProcessActivity(System.Int32)">
            <summary>
            获取流程的当前活动的审批步骤
            </summary>
            <param name="procInstID">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2ProcessCurrentActivityUsers(System.Int32)">
            <summary>
            获取当前流程的审批人
            </summary>
            <param name="procId">流程ID</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetK2ProcessCurrentActivityUsers2(System.Int32)">
            <summary>
            获取当前流程的审批人
            </summary>
            <param name="procId">流程ID</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GotoActivity(System.Int32,System.String)">
            <summary>
            将流程实例Goto到步骤
            </summary>
            <param name="procInstID">流程ID</param>
            <param name="activityName">流程图上的步骤名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetProcessDataFields(System.Int32)">
            <summary>
            获取流程的DataField数据
            </summary>
            <param name="procInstID">流程实例ID</param>
            <returns>流程的DataField数据</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.UpdateProcessDataFields(System.Int32,System.Collections.Generic.List{Tencent.OA.Framework.Workflow.DataContract.K2DataField})">
            <summary>
            更新流程DataField数据
            </summary>
            <param name="procInstID">流程实例ID</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.UpdateProcessFolio(System.Int32,System.String)">
            <summary>
            更新流程Folio数据
            </summary>
            <param name="procInstID">流程实例ID</param>
            <param name="processFolio">流程的说明文字</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetApprovedK2Process(System.String,System.String)">
            <summary>
            获取用户已办的流程ID，包括提交的和审批过的
            </summary>
            <param name="username">用户名</param>
            <param name="flowName">流程名</param>
            <returns>流程的实例ID列表</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetApprovedK2ProcessInstance(System.String,System.String)">
            <summary>
            获取用户已办的流程，包括提交的和审批过的
            </summary>
            <param name="username">用户名</param>
            <param name="flowName">流程名</param>
            <returns>流程的实例列表</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2Factory.GetApprovedK2ProcessInstance(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获取用户已办的流程，包括提交的和审批过的
            </summary>
            <param name="username">用户名</param>
            <param name="flowName">流程名</param>
            <returns>流程的实例列表</returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Interface.IDataObjectProvider.AddDataObject(System.String,Tencent.OA.Framework.RightWay.Entity.CodeName)">
            <summary>
            增加
            </summary>
            <param name="typeCode"></param>
            <param name="codeName"></param>
            <returns>true-成功；false-code存在</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Messages.DataContract.TencentMailAttachment">
            <summary> 
            附件信息 
            </summary> 
        </member>
        <member name="M:Tencent.OA.Framework.Messages.DataContract.TencentMailAttachment.#ctor(System.String,System.IO.Stream)">
            <summary> 
            从流中读取附件内容并构造 
            </summary> 
            <param name="fileName">附件的文件名</param> 
            <param name="fileContent">附件的内容流</param> 
        </member>
        <member name="M:Tencent.OA.Framework.Messages.DataContract.TencentMailAttachment.#ctor(System.String,System.Byte[])">
            <summary> 
            按照给定的字节构造附件 
            </summary> 
            <param name="fileName">附件的文件名</param> 
            <param name="fileContent">附件的内容 [字节]</param> 
        </member>
        <member name="M:Tencent.OA.Framework.Messages.DataContract.TencentMailAttachment.#ctor(System.String)">
            <summary> 
            从文件载入并构造 
            </summary> 
            <param name="filePath"></param> 
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentMailAttachment.FileName">
            <summary> 
            附件的文件名 [如果输入路径，则自动转换为文件名] 
            </summary> 
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentMailAttachment.FileContent">
            <summary> 
            附件的内容
            </summary> 
        </member>
        <member name="M:Tencent.OA.Framework.Messages.DataContract.IMMessage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.IMMessage.Receiver">
            <summary>
            接收者，多人用分号码;隔开。
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.IMMessage.MsgInfo">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.IMMessage.Sender">
            <summary>
            信息发送者
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.IMMessage.SenderPwd">
            <summary>
            消息发送者密码
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.IMMessage.SessionID">
            <summary>
            会话ID，一个GUID 标识一个窗口
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Provider.LogStrategyProviderCollection">
            <summary>
            A collection of <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>'s.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Provider.LogStrategyProviderCollection.Add(System.Configuration.Provider.ProviderBase)">
            <summary>
            Adds a provider to the collection.
            </summary>
            <param name="provider">The provider to be added.</param>
            <exception cref="T:System.ArgumentException">The <see cref="P:System.Configuration.Provider.ProviderBase.Name"></see> of provider is null.- or -The length of the <see cref="P:System.Configuration.Provider.ProviderBase.Name"></see> of provider is less than 1.</exception>
            <exception cref="T:System.ArgumentNullException">provider is null.</exception>
            <exception cref="T:System.NotSupportedException">The collection is read-only.</exception>
            <PermissionSet><IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/></PermissionSet>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Provider.ILogStrategyProvider">
             <summary>
            日志策略提供者必须实现这个接口.
             </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.Provider.ILogStrategyProvider.LogStrategy">
            <summary>
            获取日志策略.
            </summary>
            <value>日志策略</value>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.RTXEncourageInfo.StaffID">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.RTXEncourageInfo.StaffName">
            <summary>
            员工姓名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.RTXEncourageInfo.EncourageItemID">
            <summary>
            奖惩项ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.RTXEncourageInfo.EncourageItemName">
            <summary>
            奖惩名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.RTXEncourageInfo.EncourageSubLevelID">
            <summary>
            奖惩子项ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.RTXEncourageInfo.EncourageSubLevelName">
            <summary>
            奖惩子项名称
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Data.SqlClient.SqlQueryCommandBuilder">
            <summary>
            The IQueryCommandBuilder implementation for SQL Server database.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Data.SqlClient.SqlQueryCommandBuilder.Instance">
            <summary>
            The singleton.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlClient.SqlQueryCommandBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Data.SqlClient.SqlQueryCommandBuilder"/> class.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlClient.SqlQueryCommandBuilder.GetDbProviderFactory">
            <summary>
            Gets the db provider factory.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Data.OracleClient.OracleQueryCommandBuilder">
            <summary>
            The IQueryCommandBuilder implementation for Oracle database.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Data.OracleClient.OracleQueryCommandBuilder.Instance">
            <summary>
            The singleton.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.OracleClient.OracleQueryCommandBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Data.OracleClient.OracleQueryCommandBuilder"/> class.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.OracleClient.OracleQueryCommandBuilder.#cctor">
            <summary>
            Initializes the <see cref="T:Tencent.OA.Framework.Data.OracleClient.OracleQueryCommandBuilder"/> class.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.OracleClient.OracleQueryCommandBuilder.GetDbProviderFactory">
            <summary>
            Gets the db provider factory.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2">
            <summary>
            A dictionary implementation that offers thread-safe read and writes without any locking mechanism.
            </summary>
            <typeparam name="TKey">Type of key</typeparam>
            <typeparam name="TValue">Type of value to store</typeparam>
            <remarks></remarks>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.Add(`0,`1)">
            <summary>
            Adds the specified key and value to the dictionary.
            </summary>
            <param name="key">Key to add</param>
            <param name="value">Value to add</param>
            <exception cref="T:System.ArgumentNullException">Key is null.</exception>
            <exception cref="T:System.ArgumentException">Key already exists in dictionary.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.ContainsKey(`0)">
            <summary>
            Determines if the specified key exists.
            </summary>
            <param name="key">Key to search for.</param>
            <returns>True if key exists.</returns>
            <remarks>
            Although this is thread-safe in the meaning that it will not crash if another thread writes to the dictionary,
            it is dangerous to assume that the result of this call is valid after a call because other threads might have
            changed the dictionary meanwhile.
            </remarks>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.Remove(`0)">
            <summary>
            Removes the value with the given key from the dictionary.
            </summary>
            <param name="key">Key to remove</param>
            <returns>True if this thread found and removed the given value from the dictionary, false otherwise.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.TryGetValue(`0,`1@)">
            <summary>
            Gets the value associated with the given key.
            </summary>
            <param name="key">Key for value to get.</param>
            <param name="value">Where the value will be stored if successful.</param>
            <returns>True if the key was found, false otherwise.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.Clear">
            <summary>
            Clears the dictionary.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Determines if the collection currently contains the given key-value pair.
            </summary>
            <param name="item">Value pair to look for.</param>
            <returns>True if the collection currently contains the given key-value pair.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary>
            Copies the elements of the dictionary to an array.
            </summary>
            <param name="array">Array to copy key value pairs to.</param>
            <param name="arrayIndex">Index of array index to start inserting elements.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey@TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary>
            Remove the given key-value pair from the collection.
            </summary>
            <param name="item">Key-value pair to remove</param>
            <returns>True if the pair was found and removed.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the elements currently in the dictionary.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.Keys">
            <summary>
            Gets a collection containing all keys in dictionary.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.Values">
            <summary>
            Gets a collection containing the values in the collection.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.Item(`0)">
            <summary>
            Gets or sets the value for a specified key.
            </summary>
            <param name="key">The key of the value to get or set.</param>
            <returns>The current value.</returns>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.Count">
            <summary>
            Gets the number of elements currently in dictionary.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.ThreadSafeDictionary`2.IsReadOnly">
            <summary>
            Determines if this collection is read-only, i.e. does not permit changes.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.SerializableDictionary`2">
            <summary>
            支持XML序列化的泛型 Dictionary
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
            <summary>
            从对象的 XML 表示形式生成该对象
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
            <summary>
            / 将对象转换为其 XML 表示形式
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.Interfaces.IK2Process">
            <summary>
            K2流程实例的包装
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2Process.Start">
            <summary>
            异步启动新流程
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2Process.Start(System.Boolean)">
            <summary>
            启动新流程
            </summary>
            <param name="Sync">是否异步</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2Process.SetProcessValue(System.String,System.Object)">
            <summary>
            给流程的变量赋值，包括DataField和XmlField
            </summary>
            <param name="Name">流程的变量的名称</param>
            <param name="Value">流程的变量的值</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.Interfaces.IK2Process.GetProcessValue(System.String)">
            <summary>
            获取流程变量的值，通常应用于XmlField
            </summary>
            <param name="Name"></param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2Process.K2ProcFolio">
            <summary>
            ProcFolio
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2Process.K2ProcID">
            <summary>
            流程ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2Process.K2ProcName">
            <summary>
            流程名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2Process.K2ProcStatus">
            <summary>
            流程状态<seealso cref="T:SourceCode.Workflow.Client.ProcessInstance.Status"/>
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2Process.ProcessInstance">
            <summary>
            流程实例
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.Interfaces.IK2Process.ProcessFields">
            <summary>
            流程变量的集合，包括DataField和XmlField
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.DataContract.K2XmlField">
            <summary>
            Xml字段
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2XmlField.Name">
            <summary>
            字段名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2XmlField.Value">
            <summary>
            字段的值 
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2XmlField.ExtensionData">
            <summary>
            Gets or sets the structure that contains extra data.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject"/> 
            that contains data that is not recognized as belonging to the data contract.</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Web.Security.PassportAuthentication">
            <summary>
            Passport统一登陆认证类.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Web.Security.PassportAuthentication.KEY_COOKIE_OF_RANDOM_KEY">
            <summary>
            随机键值的键
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Web.Security.PassportAuthentication.KEY_COOKIE_OF_TICKET">
            <summary>
            票据的键
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.#ctor(System.Boolean)">
            <summary>
            构造函数
            </summary>
            <param name="isInitHttp"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.IsAuthenticated">
            <summary>
            判断当前客户端是否已认证
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.SignOut(System.String,System.String)">
            <summary>
            注销登录
            </summary>
            <param name="title">子系统名字，将显示为登陆窗口的标题，需要UrlEncode</param>
            <param name="returnUrl"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.SignOut(System.Int32)">
            <summary>
            注销登录
            </summary>
            <param name="subSystemID">子系统ID</param>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.SignOut">
            <summary>
            注销登录
            </summary>
            <remarks>
            下次登陆时将导向到OA门户首页
            </remarks>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.SignOut(System.String)">
            <summary>
            注销登录
            </summary>
            <remarks>
            导向指定Url，需要UrlEncode
            </remarks>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.SignIn(System.String,System.String)">
            <summary>
            登录
            </summary>
            <param name="title">子系统名字，将显示为登陆窗口的标题，需要UrlEncode</param>
            <param name="returnUrl"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.SignIn(System.Int32)">
            <summary>
            登录
            </summary>
            <param name="subSystemID">子系统ID</param>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.SignIn">
            <summary>
            登录
            </summary>
            <remarks>
            将导向到OA门户首页
            </remarks>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.GetSignOutRedirectUrl(System.String)">
            <summary>
            获取注销登录的Url
            </summary>
            <param name="returnUrl">认证后导向的Url，需要UrlEncode</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.GetSignOutRedirectUrl(System.String,System.String)">
            <summary>
            获取注销登录的Url
            </summary>
            <param name="title">子系统名字，将显示为登陆窗口的标题，需要UrlEncode</param>
            <param name="returnUrl">认证后导向的Url，需要UrlEncode</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.GetSignOutRedirectUrl(System.Int32)">
            <summary>
            获取注销登录的Url
            </summary>
            <param name="subSystemId">子系统ID</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.GetSignInRedirectUrl(System.String,System.String)">
            <summary>
            获取Passport登陆的Url
            </summary>
            <param name="title">子系统名字，将显示为登陆窗口的标题</param>
            <param name="returnUrl">认证后导向的Url，需要UrlEncode</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.PassportAuthentication.GetSignInRedirectUrl(System.Int32)">
            <summary>
            获取Passport登陆的Url
            </summary>
            <param name="subSystemId">子系统ID</param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.PassportAuthentication.Ticket">
            <summary>
            身份认证票据
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Web.Security.PassportAuthentication.Context">
            <summary>
            上下文
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetDeptInfo(System.Int32)">
            <summary>
            获取部门信息
            </summary>
            <param name="deptId">部门Id</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetChildDeptInfos(System.Int32,System.Int32)">
            <summary>
            获取子部门信息
            </summary>
            <param name="parentDeptId">定部门ID</param>
            <param name="level">搜索的层次，如果为1,0或者是小于0则为查询其直接下属部门</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetParentDeptInfos(System.Int32,System.Int32)">
            <summary>
            获取父级部门信息
            </summary>
            <param name="deptId">定部门ID</param>
            <param name="level">搜索的层次，如果为1,0或者是小于0则为查询其直接下属部门</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetAllDeptInfos">
            <summary>
            获取所有部门信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetAllDeptInfos(System.Boolean)">
            <summary>
            获取所有部门信息
            </summary>
            <param name="isIncludeDisabled">true 表示包含失效部门，false表示不包含</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetAllDeptInfos(System.Int32)">
            <summary>
            获取指定深度的所有部门信息
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetDeptsByIdString(System.String,System.String)">
            <summary>
            根据Id序列查询部门列表
            </summary>
            <param name="idString">Id序列</param>
            <param name="splitter">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetVicePresident(System.Int32)">
            <summary>
            获取部门副总信息
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetStaffs(System.Int32)">
            <summary>
            获取指定部门的所有在编员工信息
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetStaffs(System.Int32,System.Boolean)">
            <summary>
            获取指定部门的所有在编员工信息
            </summary>
            <param name="deptId"></param>
            <param name="isIncludeFired">true 表示包含离职员工，false表示不包含</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetStaffs(System.Int32,System.Int32)">
            <summary>
            获取指定部门的所有在编员工信息
            </summary>
            <param name="deptId"></param>
            <param name="level">搜索的层次</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetWorkStaffs(System.Int32)">
            <summary>
            获取指定部门的所有的工作员工信息（工作部门在指定部门的）
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptService.GetWorkStaffs(System.Int32,System.Int32)">
            <summary>
            获取指定部门的所有的工作员工信息（工作部门在指定部门的）
            </summary>
            <param name="deptId"></param>
            <param name="level">搜索的层次</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.#ctor(System.Collections.Generic.IEnumerable{Tencent.OA.Framework.Organization.Dept})">
            <summary>
            构造函数
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.#ctor(System.Collections.Generic.List{Tencent.OA.Framework.Organization.DataContract.DeptInfo})">
            <summary>
            构造函数
            </summary>
            <param name="infos"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.Contains(Tencent.OA.Framework.Organization.Dept)">
            <summary>
            检查集合是否包含指定的对象实例
            </summary>
            <param name="dept"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">输入参数不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.Remove(Tencent.OA.Framework.Organization.Dept)">
            <summary>
            从集合中删除指定对象
            </summary>
            <param name="dept"></param>
            <exception cref="T:System.ArgumentNullException">输入参数不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.Merge(Tencent.OA.Framework.Organization.DeptCollection)">
            <summary>
            添加一个新集合到集合中，现有集合会被改变(集合合并，当有重复对象则保留一个)
            </summary>
            <param name="c">要并入的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.MergeWith(Tencent.OA.Framework.Organization.DeptCollection)">
            <summary>
            合并集合，当有重复对象则保留一个
            </summary>
            <param name="c">要并入的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns>合并后的集合</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.InterseWith(Tencent.OA.Framework.Organization.DeptCollection)">
            <summary>
            集合比较，取两个集合的交集
            </summary>
            <param name="c">要进行比较的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.ComplementWith(Tencent.OA.Framework.Organization.DeptCollection)">
            <summary>
            集合比较，取两个集合的补集
            </summary>
            <param name="c">要进行比较的子集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.ToString">
            <summary>
            将集合对象转化成";"分隔的Id序列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.ToString(System.String)">
            <summary>
            将集合对象转化成";"分隔的Id序列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.DeptCollection.ToString(System.String,System.String)">
            <summary>
            将集合对象转化成指定分隔符分隔的指定属性的序列
            </summary>
            <param name="property">用于构成序列的属性</param>
            <param name="splitter">分隔符</param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.MyWorkspaceClient">
            <summary>
            个人工作台服务接口
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.MyWorkspaceClient.PushData(System.String,System.Collections.Generic.List{Tencent.OA.Framework.MyWorkspace.ProcWorklistItem},System.Boolean)">
            <summary>
            应用系统推送待办审批单列表
            </summary>
            <param name="sysKey">业务系统sysKey</param>
            <param name="workItems">代办的列表</param>
            <param name="isAll">是增量还是全部</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.MyWorkspaceClient.PushDelegateData(System.String,System.Collections.Generic.List{Tencent.OA.Framework.MyWorkspace.ProcWorklistItem},System.Boolean)">
            <summary>
            应用系统推送委托部分的待办审批单列表
            </summary>
            <param name="sysKey">业务系统sysKey</param>
            <param name="workItems">待办的列表</param>
            <param name="isAll">是增量还是全部</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.MyWorkspaceClient.CompletedForm(System.String,System.Int32,System.String,System.String)">
            <summary>
            管理应用中间件将前端提交的数据提交给应用系统处理，应用系统通过此接口返回处理结果
            </summary>
            <param name="sysKey">业务系统sysKey</param>
            <param name="StaffId">处理人</param>
            <param name="ProcInstId">流程实例ID</param>
            <param name="SerialNumber">待办的序列号</param>
        </member>
        <member name="T:Tencent.OA.Framework.NVelocityTemplateEngine.NVelocityEngineFactory">
            <summary>
            Summary description for NVelocityEngineFactory.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.NVelocityEngineFactory.CreateNVelocityFileEngine(System.String,System.Boolean)">
            <summary>
            Creates a new instance of NVelocityFileEngine class.
            </summary>
            <param name="templateDirectory">The template directory.</param>
            <param name="cacheTemplate">if set to <c>true</c> [cache template].</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.NVelocityEngineFactory.CreateNVelocityAssemblyEngine(System.String,System.Boolean)">
            <summary>
            Creates a new instance of NVelocityAssemblyEngine class.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="cacheTemplate">if set to <c>true</c> [cache template].</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.NVelocityEngineFactory.CreateNVelocityMemoryEngine(System.Boolean)">
            <summary>
            Creates a new instance of NVelocityMemoryEngine class.
            </summary>
            <param name="cacheTemplate">if set to <c>true</c> [cache template].</param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Organization.ServiceContract.IStaffEncourageService">
            <summary>
            员工荣誉
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffEncourageService.GetAllStaffEncourage">
            <summary>
            获取员工的所有荣誉数据
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffEncourageService.GetStaffEncourage(System.String)">
            <summary>
            获取员工的荣誉数据
            </summary>
            <param name="engName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IStaffEncourageService.GetStaffRTXEncourage(System.String)">
            <summary>
            获取员工在RTX上的展现的荣誉数据
            </summary>
            <param name="engName"></param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Extensions.StringExtensions">
            <summary>
            String 扩展方法
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.StringExtensions.ParseEnum``1(System.String)">
            <summary>
            Parse a string into an enumeration
            </summary>
            <typeparam name="TEnum">The Enumeration type to cast to</typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.StringExtensions.TrimBefore(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.StringExtensions.TrimAfter(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="match"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.StringExtensions.SplitUpperCaseToString(System.String)">
            <summary>
            Parses a camel cased or pascal cased string and returns a new 
            string with spaces between the words in the string.
            </summary>
            <example>
            The string "PascalCasing" will return an array with two 
            elements, "Pascal" and "Casing".
            </example>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.StringExtensions.SplitUpperCase(System.String)">
            <summary>
            Parses a camel cased or pascal cased string and returns an array 
            of the words within the string.
            </summary>
            <example>
            The string "PascalCasing" will return an array with two 
            elements, "Pascal" and "Casing".
            </example>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Data.TableExtensions">
            <summary>
            L2S 表扩展方法
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.TableExtensions.Delete``1(System.Data.Linq.Table{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            批量删除数据
            </summary>
            <typeparam name="TEntity"></typeparam>
            <param name="table"></param>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Data.PartialEvaluator.Nominator">
            <summary>
            Performs bottom-up analysis to determine which nodes can possibly
            be part of an evaluated sub-tree.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Data.QueryService">
            <summary>
            The default implementation for IQueryService.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Data.QueryCommandFactory">
            <summary>
            The QueryCommandFactory creates query commands by 
            calling different query command builders.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandFactory.CreateCommand(Tencent.OA.Framework.Data.QueryCriteria,System.Boolean)">
            <summary>
            Create a DbCommand from a query criteria.
            </summary>
            <param name="criteria">The query criteria.</param>
            <param name="isCountCommand">if a count command is expected to create.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryCommandFactory.GetDbProviderFactory(Tencent.OA.Framework.Data.QueryCriteria)">
            <summary>
            Get DbProviderFactory from query criteria.
            </summary>
            <param name="criteria">The query criteria.</param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicQueryable.Where``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <summary>
            等价于Linq表达示版本的Where
            </summary>
            <typeparam name="T">返回类型</typeparam>
            <param name="source">IQueryable对象</param>
            <param name="predicate">字符串版本的表达式,如果要使用参数,以@0,@1...的形式表示</param>
            <param name="values">如果predicate中有参数(@0,@1...)，则需要在values中指定参数值,参数值的个数不能少于predicate中参数的个数</param>
            <returns>附加Where表达式之后的IQueryalbe对象</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Data.Configuration.KnownTypeRegistry">
            <summary>
            Registry for all known types for serializing QueryCriteria class.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Data.Configuration.KnownTypeRegistry.Instance">
            <summary>
            The singleton.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.Configuration.KnownTypeRegistry.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Data.Configuration.KnownTypeRegistry"/> class.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.Configuration.KnownTypeRegistry.#cctor">
            <summary>
            Initializes the <see cref="T:Tencent.OA.Framework.Data.Configuration.KnownTypeRegistry"/> class.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.Configuration.KnownTypeRegistry.AddKnownType(System.Type)">
            <summary>
            Add a known type to registry.
            </summary>
            <param name="type">The known type to add.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.Configuration.KnownTypeRegistry.RemoveKnownType(System.Type)">
            <summary>
            Remove a known type from registry.
            </summary>
            <param name="type">The known type to remove.</param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Caching.CacheProvider">
            <summary>
            缓存提供者
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Caching.CacheProvider.Add(System.String,System.Object)">
            <summary>
            添加缓存，默认的过期时间
            </summary>
            <param name="strKey"></param>
            <param name="objValue"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Caching.CacheProvider.Add(System.String,System.Object,System.Boolean)">
            <summary>
            添加缓存，指定是否使用默认的过期时间
            </summary>
            <param name="strKey"></param>
            <param name="objValue"></param>
            <param name="bDefaultExpire"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Caching.CacheProvider.Add(System.String,System.Object,System.Int64)">
            <summary>
            添加缓存，指定过期时间
            </summary>
            <param name="strKey"></param>
            <param name="objValue"></param>
            <param name="lNumofMilliSeconds"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Caching.CacheProvider.Get(System.String)">
            <summary>
            通过Key获取缓存对象
            </summary>
            <param name="strKey"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Caching.CacheProvider.Get``1(System.String)">
            <summary>
            通过Key获取缓存对象的范型方法
            </summary>
            <typeparam name="T"></typeparam>
            <param name="strKey"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Caching.CacheProvider.Get(System.String[])">
            <summary>
            获取一系列Key的缓存对象
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Caching.CacheProvider.DefaultExpireTime">
            <summary>
            缓存缺省过期时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Caching.CacheProvider.KeySuffix">
            <summary>
            缓存Key前缀
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.Logging.LogHandlerHelper.LogAccess(System.String,System.String,System.String,System.Object[])">
            <summary>
            记录方法调用
            </summary>
            <param name="clientIP">调用方IP</param>
            <param name="classType"></param>
            <param name="methodType"></param>
            <param name="inputs"></param>
        </member>
        <member name="T:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.Internal.WCFReusableProxyClassBuilder`1">
            <summary>
            Builds a class inheriting from WCFAbstractClientProxy.cs that will wrap a WCF Proxy
            and automatically rebuild the proxy if the channel is faulted.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.Internal.WCFReusableProxyClassBuilder`1.GenerateMethodImpl(System.Reflection.MethodInfo,System.Type[],System.Reflection.Emit.ILGenerator)">
            <summary>
            Generate the contents of the method. This will generate:
            ...
            try
            {
            	return Proxy.MethodName(arg1, arg2);
            }
            catch
            {
            	CloseProxyBecauseOfException();
            	throw;
            }
            ...
            </summary>
            <param name="method"></param>
            <param name="parameterTypes"></param>
            <param name="iLGenerator"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptPostService.GetPrincipalPost(System.Int32)">
            <summary>
            获得部门的主岗位信息
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptPostService.GetAllPosts(System.Int32)">
            <summary>
            获得部门所有岗位信息
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptPostService.GetDirectPosts(System.Int32)">
            <summary>
            获得部门直属岗位信息
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptPostService.GetAllPostStaffs(System.Int32)">
            <summary>
            部门所有岗位对应的员工信息
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IDeptPostService.GetPrincipalStaffs(System.Int32)">
            <summary>
            获得部门负责人
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IAdGroupService.GetAdGroupInfo(System.Int32)">
            <summary>
            获取指定组
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IAdGroupService.GetAdGroupInfo(System.String)">
            <summary>
            获取指定组
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IAdGroupService.GetAdGroupsByIdString(System.String,System.String)">
            <summary>
            根据Id序列查询组列表
            </summary>
            <param name="idString"></param>
            <param name="splitter"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IAdGroupService.GetAllAdGroups">
            <summary>
            获取所有组的列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IAdGroupService.GetMemberAdGroups(System.Int32)">
            <summary>
            获取指定组的子组
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IAdGroupService.GetMemberOfAdGroups(System.Int32)">
            <summary>
            获取指定组的所属组
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IAdGroupService.GetStaffMemberOfAdGroups(System.Int32)">
            <summary>
            获取指定员工的所属组
            </summary>
            <param name="staffId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IAdGroupService.GetStaffMembers(System.Int32)">
            <summary>
            获取属于指定组的员工
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.Xml.CommonXml">
            <summary>
            Summary description for CommonXml.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.Xml.CommonXml.GetNode(System.Xml.XmlDocument,System.String)">
            <summary>
            Returns the requested node and creates it if it does not exist.
            </summary>
            <param name="document">XmlDocument to get the node from.</param>
            <param name="path">Path for the node.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.Xml.CommonXml.GetNode(System.Xml.XmlDocument,System.String,Tencent.OA.Framework.MyWorkspace.Common.Xml.EmptyNodeHandling)">
            <summary>
            Returns the requested node and optionally creates it if it does not exist.
            </summary>
            <param name="document">XmlDocument to get the node from.</param>
            <param name="path">Path for the node.</param>
            <param name="emptyNode">Specifies whether to create a node if it does not exist.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.Xml.CommonXml.GetNode(System.Xml.XmlNode,System.String)">
            <summary>
            Returns the requested node and creates it if it does not exist.
            </summary>
            <param name="fromXmlNode">XmlNode to get the node from.</param>
            <param name="path">Path for the node.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.Xml.CommonXml.GetNode(System.Xml.XmlNode,System.String,Tencent.OA.Framework.MyWorkspace.Common.Xml.EmptyNodeHandling)">
            <summary>
            Returns the requested node and optionally creates it if it does not exist.
            </summary>
            <param name="fromXmlNode">XmlNode to get the node from.</param>
            <param name="path">Path for the node.</param>
            <param name="emptyNode">Specifies whether to create a node if it does not exist.</param>
            <returns></returns>
        </member>
        <member name="F:Tencent.OA.Framework.MyWorkspace.Common.Xml.EmptyNodeHandling.CreateNew">
            <summary>
            If the requested node does not exist, it is created, inserted and returned. 
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.MyWorkspace.Common.Xml.EmptyNodeHandling.Ignore">
            <summary>
            If the requested node does not exist, null is returned.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.MyWorkspace.Common.Xml.EmptyNodeHandling.ForceCreateNew">
            <summary>
            Always create a new node.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.ActionList">
            <summary>
            审批动作列表
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.ActionList.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="parentNode"></param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.ActionList.Create(System.String,System.String,System.String)">
            <summary>
            创建一个Action节点
            </summary>
            <param name="name">节点名</param>
            <returns>返回Action节点</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.ActionList.Remove(System.Int32)">
            <summary>
            删除某个节点
            </summary>
            <param name="index">要删除的节点的索引值</param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.ActionList.Clear">
            <summary>
            删除所有节点
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.ActionList.Item(System.Int32)">
            <summary>
            列表索引
            </summary>
            <param name="index">索引值</param>
            <returns>返回Action节点</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Messages.DataContract.TencentEmail">
            <summary>
            邮件内容
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.DataContract.TencentEmail.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.Priority">
            <summary>
            邮件优先级
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.EmailType">
            <summary>
            发送邮件类型
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.MessageStatus">
            <summary>
            邮件状态
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.To">
            <summary>
            主送人邮件地址列表
            </summary>     
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.CC">
            <summary>
            抄送人邮件地址列表
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.Bcc">
            <summary>
            暗送人邮件地址列表
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.From">
            <summary>
            发送人邮件地址
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.Title">
            <summary>
            邮件标题
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.Content">
            <summary>
            邮件正文
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.BodyFormat">
            <summary>
            邮件格式(文本/HTML)
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.Attachments">
            <summary>
            邮件附件列表
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.Location">
            <summary>
            会议举办地点
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.Organizer">
            <summary>
            会议组织者
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.StartTime">
            <summary>
            会议开始时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.TencentEmail.EndTime">
            <summary>
            会议结束时间
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Provider.LogStrategyProvider">
            <summary>
            缺省的日志策略提供者.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Provider.LogStrategyProvider.ThrowMissingPropertyException(System.String)">
            <summary>
            Throws a missing property exception.
            </summary>
            <param name="propertyName">Name of the property.</param>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Filters.TimeRangeFilter">
            <summary>
            This filter compares checks that the current
            date and time is between the range specified 
            in the configuration. 
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Filters.HttpRequestFilterBase">
            <summary>
            The base implementation for filters that require
            an HttpRequest to be able to evaluate correctly.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.Filters.HttpRequestFilterBase.HttpRequest">
            <summary>
            Gets the HTTP request.
            </summary>
            <value>The HTTP request.</value>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.DataContract.CodeLocation">
            <summary>
            Specifies a place in the source code or class,
            where an logging event occurred.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.ICodeLocation">
            <summary>
            日志事件发生的位置，也就是在源代码中的位置
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.ICodeLocation.ClassName">
            <summary>
            设置和获取类名称.
            </summary>
            <value>类名称</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.ICodeLocation.FileName">
            <summary>
            设置和获取类所在文件的名称.
            </summary>
            <value>文件名称</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.ICodeLocation.LineNumber">
            <summary>
            设置和获取代码行数.
            </summary>
            <value>代码行</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.ICodeLocation.MethodName">
            <summary>
            设置和获取方法名称
            </summary>
            <value>方法的名称</value>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.DataContract.CodeLocation.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents 
            the current <see cref="T:Tencent.OA.Framework.Logging.DataContract.CodeLocation"/>.
            The format is &lt;FileName&gt;(&lt;LineNumber&gt;):&lt;ClassName&gt;.&lt;MethodName&gt;
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents the current <see cref="T:Tencent.OA.Framework.Logging.DataContract.CodeLocation"/>.
            </returns>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.CodeLocation.ClassName">
            <summary>
            Gets or sets the name of the class.
            </summary>
            <value>The name of the class.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.CodeLocation.MethodName">
            <summary>
            Gets or sets the name of the method.
            </summary>
            <value>The name of the method.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.CodeLocation.FileName">
            <summary>
            Gets or sets the name of the file.
            </summary>
            <value>The name of the file.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.CodeLocation.LineNumber">
            <summary>
            Gets or sets the line number of the location.
            </summary>
            <value>The line number.</value>
        </member>
        <member name="T:Tencent.OA.Framework.Diagnostics.PerformanceHelper">
            <summary>
            性能计数器辅助类
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceHelper.GetPerformanceCounterFromAssembly(System.Reflection.Assembly)">
            <summary>
            从程序集中提取定义的性能计数器 
            </summary>
            <param name="assembly">包含性能计数器的程序集</param>
            <returns>程序集所包含的性能计数器</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceHelper.Uninstall(System.Type)">
            <summary>
            卸载性能计数器类型
            </summary>
            <typeparam name="T">指定PerformanceCounterCategoryAttribute类型 的性能计数器枚举</typeparam>
            <seealso cref="T:Tencent.OA.Framework.Diagnostics.PerformanceCounterCategoryAttribute"/>
            <seealso cref="T:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute"/>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceHelper.Install(System.Type)">
            <summary>
            Instala 安装一个性能计数器
            </summary>
            <typeparam name="T">指定PerformanceCounterCategoryAttribute类型 的性能计数器枚举</typeparam>
            <seealso cref="T:Tencent.OA.Framework.Diagnostics.PerformanceCounterCategoryAttribute"/>
            <seealso cref="T:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute"/>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceHelper.CreateCounterHelper``1">
            <summary>
            创建一个CounterHelper
            </summary>
            <typeparam name="T"></typeparam>
            <seealso cref="T:Tencent.OA.Framework.Diagnostics.PerformanceCounterCategoryAttribute"/>
            <seealso cref="T:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute"/>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceHelper.GetCategoryAttribute(System.Type)">
            <summary>
            获取 PerformanceCounterCategoryAttribute 
            </summary>
            <param name="enumType"></param>
            <returns>PerformanceCounterCategoryAttribute</returns>
            <seealso cref="T:Tencent.OA.Framework.Diagnostics.PerformanceCounterCategoryAttribute"/>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceHelper.GetCounterAttribute(System.Type,System.Object)">
            <summary>
            获取PerformanceCounterAttribute
            </summary>
            <param name="enumType"></param>
            <param name="enumValue"></param>
            <returns></returns>
            <seealso cref="T:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute"/>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceHelper.GetBaseType(System.Diagnostics.PerformanceCounterType)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
            <seealso cref="T:System.Diagnostics.PerformanceCounterType"/>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceHelper.GetCounterNameForBaseType(System.String)">
            <summary>
            性能计数器名称
            </summary>
            <param name="counterName"> </param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceHelper.IsBaseType(System.Diagnostics.PerformanceCounterType)">
            <summary>
            是否是一个性能计数器类型
            </summary>
            <param name="counterType">PerformanceCounterType</param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Data.QuerySproc">
            <summary>
            
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Configuration.HostConfigurationSection">
            <summary>
            host配置块
              <host>
                 <services>
                     <service name="">
                         <registers>
                            <add serviceType="" interfaceType="" />
                         </registers>
                         <extensions>
                            <add serviceType="" interfaceType="" />
                         </extensions>
                     </service>
                 </services>
              </host>
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Web.HttpModule.UnhandledExceptionModule">
            <summary>
            为了提高系统的健壮性和可维护性，我们需要通过一种方法来截获这些未捕获异常，并进行适当的处理。
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Web.HttpModule.UnhandledExceptionModule.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Web.HttpModule.UnhandledExceptionModule.OnUnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            通过这个事件，我们可以截获未捕获异常，并进行处理。这个事件的事件参数UnhandledExceptionEventArgs e， 有两个属性，一个是ExceptionObject，这个属性返回为截获异常的对象实例。
            还有一个属性是IsTerminating，这个属性告诉我们这个异常是否会导致应用终止。
            </summary>
            <param name="o"></param>
            <param name="e"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Web.HttpModule.UnhandledExceptionModule.Init(System.Web.HttpApplication)">
            <summary>
            初始化HttpModule
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Tencent.OA.Framework.Utilities.TypeUtils">
            <summary>
             Helper methods with regard to type.
            </summary>
            <remarks>
            <p>
            Mainly for internal use within the framework.
            </p>
            </remarks>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypeUtils.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Tencent.OA.Framework.Utilities.TypeUtils"/> class.
            </summary>
            <remarks>
            <p>
            This is a utility class, and as such exposes no public constructors.
            </p>
            </remarks>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypeUtils.ResolveType(System.String)">
            <summary>
            Resolves the supplied type name into a <see cref="T:System.Type"/>
            instance.
            </summary>
            <param name="typeName">
            The (possibly partially assembly qualified) name of a
            <see cref="T:System.Type"/>.
            </param>
            <returns>
            A resolved <see cref="T:System.Type"/> instance.
            </returns>
            <exception cref="T:System.TypeLoadException">
            If the type cannot be resolved.
            </exception>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypeUtils.InstantiatePrimitiveType(System.TypeCode)">
            <summary>
            Instantiate a 'Primitive' Type.
            </summary>
            <param name="typeCode">a typeCode.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypeUtils.InstantiateNullableType(System.Type)">
            <summary>
            Instantiate a Nullable Type.
            </summary>
            <param name="type">The nullable type.</param>
            <returns>An object.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypeUtils.IsImplementGenericIListInterface(System.Type)">
            <summary>
            Determines whether the specified type is implement generic Ilist interface.
            </summary>
            <param name="type">The type.</param>
            <returns>
            	<c>true</c> if the specified type is implement generic Ilist interface; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Proxy.DataObjectClient.AddDataObject(System.String,System.String,Tencent.OA.Framework.RightWay.Entity.CodeName)">
            <summary>
            
            </summary>
            <param name="url"></param>
            <param name="typeCode"></param>
            <param name="codeName"></param>
            <returns>false--编码存在</returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Entity.RightData.ToString">
            <summary>
            输出对象的XML序列化结果
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Quartz.JobResult">
            <summary>
            Job运行结果， Job 执行结果的几块信息：启动时间，完成时间，和指示是否执行成功的标志。
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Quartz.JobResult.Success">
            <summary>
            是否执行成功的标志
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Quartz.JobResult.JobName">
            <summary>
            Job名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Quartz.JobResult.StartedTime">
            <summary>
            启动时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Quartz.JobResult.FinishedTime">
            <summary>
            完成时间
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.#ctor(System.Collections.Generic.IEnumerable{Tencent.OA.Framework.Organization.AdGroup})">
            <summary>
            构造函数
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.#ctor(System.Collections.Generic.List{Tencent.OA.Framework.Organization.DataContract.AdGroupInfo})">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.Contains(Tencent.OA.Framework.Organization.AdGroup)">
            <summary>
            检查集合是否包含指定的对象实例
            </summary>
            <param name="adgroup"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">输入参数不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.Remove(Tencent.OA.Framework.Organization.AdGroup)">
            <summary>
            从集合中删除指定对象
            </summary>
            <param name="adgroup"></param>
            <exception cref="T:System.ArgumentNullException">输入参数不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.ToString">
            <summary>
            将集合对象转化成";"分隔的Id序列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.ToString(System.String)">
            <summary>
            将集合对象转化成指定分隔符分隔的指定属性的序列
            </summary>
            <param name="splitter">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.ToString(System.String,System.String)">
            <summary>
            将集合对象转化成指定分隔符分隔的指定属性的序列
            </summary>
            <param name="property">用于构成序列的属性</param>
            <param name="splitter">分隔符</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.Parse(System.String,System.String)">
            <summary>
            将Id序列转化成集合对象
            </summary>
            <param name="idString">Id序列</param>
            <param name="splitter">分隔符</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">Id序列字符串和分隔符不能为空</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.Merge(Tencent.OA.Framework.Organization.AdGroupCollection)">
            <summary>
            添加一个新集合到集合中，现有集合会被改变(集合合并，当有重复对象则保留一个)
            </summary>
            <param name="c">要并入的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.MergeWith(Tencent.OA.Framework.Organization.AdGroupCollection)">
            <summary>
            合并集合，当有重复对象则保留一个
            </summary>
            <param name="c">要并入的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns>合并后的集合</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.InterseWith(Tencent.OA.Framework.Organization.AdGroupCollection)">
            <summary>
            集合比较，取两个集合的交集
            </summary>
            <param name="c">要进行比较的集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroupCollection.ComplementWith(Tencent.OA.Framework.Organization.AdGroupCollection)">
            <summary>
            集合比较，取两个集合的补集
            </summary>
            <param name="c">要进行比较的子集合</param>
            <exception cref="T:System.ArgumentNullException">要并入的集合不能为NULL</exception>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService">
            <summary>
            K2工作流服务
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetK2Process(System.Int32)">
            <summary>
            获取K2的流程信息
            </summary>
            <param name="procInstID">流程ID</param>
            <returns>流程实例ID</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetK2ProcessActivity(System.Int32)">
            <summary>
            获取流程的审批历史
            </summary>
            <param name="procInstID">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetK2ActiveProcessActivity(System.Int32)">
            <summary>
            获取流程的当前活动的审批步骤
            </summary>
            <param name="procInstID">流程ID</param>
            <returns>当前状态为Active的步骤</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetK2ProcessCurrentActivityUsers(System.Int32)">
            <summary>
            获取当前流程的审批人
            </summary>
            <param name="procInstID">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetK2ProcessCurrentActivityUsers2(System.Int32)">
            <summary>
            获取当前流程的审批人
            </summary>
            <param name="procInstID">流程ID</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GotoActivity(System.Int32,System.String)">
            <summary>
            将流程实例Goto到步骤
            </summary>
            <param name="procInstID">流程ID</param>
            <param name="activityName">流程图上的步骤名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetProcessDataFields(System.Int32)">
            <summary>
            获取流程的DataField数据
            </summary>
            <param name="procInstID">流程实例ID</param>
            <returns>流程的DataField数据</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetProcessXmlFields(System.Int32)">
            <summary>
            获取流程的DataField数据
            </summary>
            <param name="procInstID">流程实例ID</param>
            <returns>流程的DataField数据</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.UpdateProcessDataFields(System.Int32,System.Collections.Generic.List{Tencent.OA.Framework.Workflow.DataContract.K2DataField})">
            <summary>
            更新流程DataField数据
            </summary>
            <param name="procInstID">流程实例ID</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.UpdateProcessXmlFields(System.Int32,System.Collections.Generic.List{Tencent.OA.Framework.Workflow.DataContract.K2XmlField})">
            <summary>
            更新流程XmlDataField数据
            </summary>
            <param name="procInstID">流程实例ID</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.UpdateProcessFolio(System.Int32,System.String)">
            <summary>
            更新流程Folio数据
            </summary>
            <param name="procInstID">流程实例ID</param>
            <param name="processFolio">流程的说明文字</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetK2Worklist(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            获取用户的代办
            </summary>
            <param name="userName">用户的英文名</param>
            <param name="flowNames">流程的完整名称列表</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetApprovedK2Process(System.String,System.String)">
            <summary>
            获取用户已办的流程ID，包括提交的和审批过的
            </summary>
            <param name="username">用户名</param>
            <param name="flowName">流程名</param>
            <returns>流程的实例ID列表</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetApprovedK2ProcessInstance(System.String,System.String)">
            <summary>
            获取用户已办的流程，包括提交的和审批过的
            </summary>
            <param name="username">用户名</param>
            <param name="flowName">流程名</param>
            <returns>流程的实例ID列表</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowService.GetPagedApprovedK2ProcessInstance(System.String,System.String,System.Int32,System.Int32)">
            <summary>
            获取用户已办的流程，包括提交的和审批过的
            </summary>
            <param name="username">用户名</param>
            <param name="flowName">流程名</param>
            <returns>流程的实例列表</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener">
            <summary>
            An extended XmlWriterTraceListener that starts a new file after a configured trace file size. Trace files will be numbered with a four character number suffix.
            <example>
                <code>
                    <sharedListeners>
                        <add type="Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener, Tencent.OA.Framework" name="System.ServiceModel.XmlTrace.Listener" traceOutputOptions="None" initializeData="C:\Logs\MyTraceFileName.svclog" MaxTraceFileSize="1048576" />
                    </sharedListeners>
                </code>
            </example>
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.LogFileNumberCaptureName">
            <summary>
            This is the named capture group to find the numeric suffix of a trace file
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.attributesLoaded">
            <summary>
            This field will be used to remember whether or not we have loaded the custom attributes from the config yet. The 
            initial value is, of course, false.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.logfileSuffixExpression">
            <summary>
            This expression is used to find the number of a trace file in its file name by searching for an underscore (_), a
            numeric expression with any repetitions and a dot (that marks the beginning of the file extension). The named 
            capture group named by the constant &quot;LogFileNumberCaptureName&quot; will contain the number.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.currentFileSuffixNumber">
            <summary>
            The current numeric suffix for trace file names
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.maxTraceFileSize">
            <summary>
            The size in bytes of a trace file before a new file is started. The default value is 128 Mbytes
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.basicTraceFileName">
            <summary>
            The basic trace file name as it is configured in configuration file's system.diagnostics section. However, this
            class will append a numeric suffix to the file name (respecting the original file extension).
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener"/> class by specifying the trace file
            name.
            </summary>
            <param name="filename">The trace file name.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener"/> class by specifying the trace file
            name and the name of the new instance.
            </summary>
            <param name="filename">The trace file name.</param>
            <param name="name">The name of the new instance.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.Fail(System.String)">
            <summary>
            Emits an error message to the listener.
            </summary>
            <param name="message">A message to emit.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.Fail(System.String,System.String)">
            <summary>
            Emits an error message and a detailed message to the listener.
            </summary>
            <param name="message">The error message to write.</param>
            <param name="detailMessage">The detailed error message to append to the error message.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)">
            <summary>
            Writes trace information, a data object, and event information to the file or stream.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache"/> that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">The source name.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="data">A data object to emit.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])">
            <summary>
            Writes trace information, data objects, and event information to the file or stream.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache"/> that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">The source name.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="data">An array of data objects to emit.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
            <summary>
            Writes trace and event information to the listener specific output.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache"/> object that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">A name used to identify the output, typically the name of the application that generated the trace event.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values specifying the type of event that has caused the trace.</param>
            <param name="id">A numeric identifier for the event.</param>
            <PermissionSet>
                <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
                <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
            </PermissionSet>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
            <summary>
            Writes trace information, a message, and event information to the file or stream.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache"/> that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">The source name.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
            <summary>
            Writes trace information, a formatted message, and event information to the file or stream.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache"/> that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">The source name.</param>
            <param name="eventType">One of the <see cref="T:System.Diagnostics.TraceEventType"/> values.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="format">A format string that contains zero or more format items that correspond to objects in the <paramref name="args"/> array.</param>
            <param name="args">An object array containing zero or more objects to format.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)">
            <summary>
            Writes trace information including the identity of a related activity, a message, and event information to the file or stream.
            </summary>
            <param name="eventCache">A <see cref="T:System.Diagnostics.TraceEventCache"/> that contains the current process ID, thread ID, and stack trace information.</param>
            <param name="source">The source name.</param>
            <param name="id">A numeric identifier for the event.</param>
            <param name="message">A trace message to write.</param>
            <param name="relatedActivityId">A <see cref="T:System.Guid"/> structure that identifies a related activity.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.Write(System.Object)">
            <summary>
            Writes the value of the object's <see cref="M:System.Object.ToString"/> method to the listener.
            </summary>
            <param name="o">An <see cref="T:System.Object"/> whose fully qualified class name you want to write.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.Write(System.Object,System.String)">
            <summary>
            Writes a category name and the value of the object's <see cref="M:System.Object.ToString"/> method to the listener.
            </summary>
            <param name="o">An <see cref="T:System.Object"/> whose fully qualified class name you want to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.Write(System.String)">
            <summary>
            Writes a verbatim message without any additional context information to the file or stream.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.Write(System.String,System.String)">
            <summary>
            Writes a category name and a message to the listener.
            </summary>
            <param name="message">A message to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.WriteLine(System.Object)">
            <summary>
            Writes the value of the object's <see cref="M:System.Object.ToString"/> method to the listener.
            </summary>
            <param name="o">An <see cref="T:System.Object"/> whose fully qualified class name you want to write.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.WriteLine(System.Object,System.String)">
            <summary>
            Writes a category name and the value of the object's <see cref="M:System.Object.ToString"/> method to the listener.
            </summary>
            <param name="o">An <see cref="T:System.Object"/> whose fully qualified class name you want to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.WriteLine(System.String)">
            <summary>
            Writes a verbatim message without any additional context information followed by the current line terminator to the file or stream.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.WriteLine(System.String,System.String)">
            <summary>
            Writes a category name and a message to the listener, followed by a line terminator.
            </summary>
            <param name="message">A message to write.</param>
            <param name="category">A category name used to organize the output.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.GetSupportedAttributes">
            <summary>
            Gets the custom attributes supported by the trace listener.
            </summary>
            <returns>
            A string array naming the custom attributes supported by the trace listener, or null if there are no custom attributes.
            </returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.StartNewTraceFile">
            <summary>
            Causes the writer to start a new trace file with an increased number in the file names suffix
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.GetTraceFileNumber">
            <summary>
            Gets the trace file number by checking whether similar trace files are already existant. The method will find the latest trace 
            file and return its number.
            </summary>
            <returns>The number of the latest trace file</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.LoadAttributes">
            <summary>
            Reads the custom attributes' values from the configuration file. We call this method the first time the attributes
            are accessed.
            <remarks>We do not do this when the listener is constructed becausethe attributes will not yet have been read 
            from the configuration file.</remarks>
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.CurrentTraceFileName">
            <summary>
            Gets the name of the current trace file. It is combined from the configured trace file plus an increasing number
            </summary>
            <value>The name of the current trace file.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.MaxTraceFileSize">
            <summary>
            Gets or sets the maximum size of the trace file.
            </summary>
            <value>The maximum size of the trace file.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Diagnostics.RollingXmlWriterTraceListener.IsRollingConditionReached">
            <summary>
            Gets a value indicating whether the condition to roll over the trace file is reached.
            </summary>
            <value>
                <c>true</c> if the condition to roll over the trace file is reached; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.Internal.WCFReusableFaultWrapperProxyClassBuilder`1">
            <summary>
            Builds a class inheriting from WCFAbstractClientProxy.cs that will wrap a WCF Proxy
            and automatically rebuild the proxy if the channel is faulted.
            The class will also unwrap any FaultException and throw the original Exception
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.Internal.WCFReusableFaultWrapperProxyClassBuilder`1.GenerateMethodImpl(System.Reflection.MethodInfo,System.Type[],System.Reflection.Emit.ILGenerator)" -->
        <member name="T:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem">
            <summary>
            流程的代办单据
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.SysKey">
            <summary>
            在个人工作台上注册的系统Key
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.ProcessInstID">
            <summary>
            流程实例ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.ProcessFlowName">
            <summary>
            流程名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.Applicant">
            <summary>
            申请人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.FlowFullName">
            <summary>
            流程全名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.Title">
            <summary>
            审批单的标题
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.Url">
            <summary>
            审批的URL
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.SerialNumber">
            <summary>
            待办的序列号
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.Priority">
            <summary>
            优先级，0表示低，1表示普通； 2表示高
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.HandlerID">
            <summary>
            处理人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.StartTime">
            <summary>
            启动时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.Status">
            <summary>
            状态 0：未审批；1：已审批
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.IsCelerityApprove">
            <summary>
            是否支持快速审批
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.KeyFields">
            <summary>
            关键数据
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.ProcWorklistItem.FormXML">
            <summary>
            表单的XML表示
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.FileList">
            <summary>
            附件信息列表
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.FileList.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="parentNode"></param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.FileList.Create(System.String)">
            <summary>
            创建一个File节点
            </summary>
            <param name="name">节点名</param>
            <returns>返回File节点</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.FileList.Remove(System.Int32)">
            <summary>
            删除某个节点
            </summary>
            <param name="index">要删除的节点的索引值</param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.FileList.Clear">
            <summary>
            删除所有节点
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.FileList.Item(System.Int32)">
            <summary>
            列表索引
            </summary>
            <param name="index">索引值</param>
            <returns>返回File节点</returns>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.Approve">
            <summary>
            审批历史节点
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.Approve.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.Approve.Reviewer">
            <summary>
            Reviewer审批人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.Approve.ActivityName">
            <summary>
            ActivityName审批动作名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.Approve.ApproveTime">
            <summary>
            ApproveTime审批时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.Approve.Opinion">
            <summary>
            Opinion审批意见
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Messages.MessageHelper">
            <summary>
            消息辅助类
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendMail(System.String,System.String,System.String,System.String,Tencent.OA.Framework.Messages.TencentMailType)">
            <summary>
            发送邮件
            </summary>
            <param name="title">邮件标题</param>
            <param name="content">邮件内容</param>
            <param name="from">邮件发件人</param>
            <param name="to">邮件接收人</param>
            <param name="mailType">邮件类型</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendMail(System.String,System.String,System.String,System.String,System.String,Tencent.OA.Framework.Messages.TencentMailType)">
            <summary>
            发送邮件
            </summary>
            <param name="title">邮件标题</param>
            <param name="content">邮件内容</param>
            <param name="from">邮件发件人</param>
            <param name="to">邮件接收人</param>
            <param name="mailType">邮件类型</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendMail(System.String,System.String,System.String,System.String,System.String,System.String,Tencent.OA.Framework.Messages.TencentMailType,Tencent.OA.Framework.Messages.MessagePriority)">
            <summary>
            发送邮件
            </summary>
            <param name="title">邮件标题</param>
            <param name="content">邮件内容</param>
            <param name="from">邮件发件人</param>
            <param name="to">邮件接收人</param>
            <param name="mailType">邮件类型</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendMail(Tencent.OA.Framework.Messages.DataContract.TencentEmail)">
            <summary>
            发送邮件
            </summary>
            <param name="mail"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendRTXMessage(System.String,System.String,System.String,System.String)">
            <summary>
            发送信息
            </summary>
            <param name="sender">发送人</param>
            <param name="receiver">接收人</param>
            <param name="title">信息标题</param>
            <param name="msgInfo">信息内容</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendRTXMessage(System.String,System.String,System.String,System.String,Tencent.OA.Framework.Messages.MessagePriority)">
            <summary>
            发送信息
            </summary>
            <param name="sender">发送人</param>
            <param name="receiver">接收人</param>
            <param name="title">信息标题</param>
            <param name="msgInfo">信息内容</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendRTXMessage(Tencent.OA.Framework.Messages.DataContract.RTXMessage)">
            <summary>
            发送信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendSMSMessage(System.String,System.String,System.String)">
            <summary>
            发送短信信息
            </summary>
            <param name="sender">发送人</param>
            <param name="receiver">接收人</param>
            <param name="msgInfo">信息内容</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendSMSMessage(System.String,System.String,System.String,Tencent.OA.Framework.Messages.MessagePriority)">
            <summary>
            发送短信信息
            </summary>
            <param name="sender">发送人</param>
            <param name="receiver">接收人</param>
            <param name="msgInfo">信息内容</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendSMSMessage(Tencent.OA.Framework.Messages.DataContract.SMSMessage)">
            <summary>
            发送短信信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.MessageHelper.SendSMSMessage(Tencent.OA.Framework.Messages.DataContract.SMSMessage,System.String)">
            <summary>
            不进入队列直接发送短信信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Containers.IoC.Initialize(Microsoft.Practices.Unity.IUnityContainer)">
            <summary>
            初始化IUnityContainer
            </summary>
            <param name="unityContainer"></param>
        </member>
        <member name="T:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute">
            <summary>
            性能计数器属性类
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute.#ctor(System.String,System.String,System.Diagnostics.PerformanceCounterType)">
            <summary>
            构造函数
            </summary>
            <param name="name">名称</param>
            <param name="info">信息</param>
            <param name="type">性能计数器类型</param>
            <seealso cref="T:System.Diagnostics.PerformanceCounterType"/>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute.op_Implicit(Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute)~System.Diagnostics.PerformanceCounterType">
            <summary>
            重载操作符
            </summary>
            <param name="performanceCounter"></param>
            <returns>性能计数器类型</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute.ToString">
            <summary>
            método sobreescrito para poder devolver el nombre del contador
            </summary>
            <returns>retorna el nombre del contador</returns>
        </member>
        <member name="P:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Diagnostics.PerformanceCounterAttribute.CounterType">
            <summary>
            类型
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.JustNullNullableComparer`1">
            <summary>
            A Comparer for Nullable types whose underlying type is not comparable.
            </summary>
            <typeparam name="T">Underlying type</typeparam>
            <remarks>This comparer simply orders items that does not have a value before those that have a value.</remarks>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.LateBoundComparer`1">
            <summary>
            A comparer for reference typed properties or fields which does not declare a IComparer interface.  
            </summary>
            <typeparam name="T">Type to compare (must be a reference type)</typeparam>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.AlwaysEqualComparer`1">
            <summary>
            A "dummy" comparer that regards all values the same.  
            </summary>
            <typeparam name="T">Type to compare</typeparam>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.EnumComparer`1">
            <summary>
            A comparer that compares Enum instances without the need for boxing.
            </summary>
            <typeparam name="T">Type to compare (must be an Enum type).</typeparam>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.EnumComparer`1.Compare(`0,`0)">
            <summary>
            Compares to instances.
            </summary>
            <param name="x">First instance to compare</param>
            <param name="y">Second comparand.</param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.EnumComparer`1.Comparison">
            <summary>
            Gets a Comparison&lt;T&gt; that compares two instances.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.EnumComparer`1.Default">
            <summary>
            Gets the singleton instance of this class.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.NullableEnumComparer`1">
            <summary>
            A comparer that compares Nullable types where the underlying type is an Enum type.
            </summary>
            <typeparam name="T">Underlying type to compare.</typeparam>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.ExtendedComparer`1">
            <summary>
            An extended Comparer class that provides comparers that complements the normal System.Collections.Generic.Comparer&lt;T&gt; comparers. 
            </summary>
            <typeparam name="T">Type to compare.</typeparam>
            <remarks>
            This class extends the System.Collections.Generic.Comparer&lt;T&gt; by returning optimized versions of comparers for enum
            types (including Nullable enum types). For reference types that does not implement any IComparer interface a
            LateBoundComparer&lt;T&gt; is returned that defines null values before non-null values and compares non-values based on 
            IComparer implementation if they exists. For Nullable types whose underlying type is not comparable a 
            JustNullNullableComparer&lt;T&gt; is returned that simple defines those values that do not have a value before values that
            does have a value. Finally, for other types of value types that does not implement a IComparable interface a comparer that
            regards all values equal are returned.
            </remarks>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.OrderByFunction`1">
            <summary>
            Delegate that sorts a specified sequence in a specific order.
            </summary>
            <param name="source">Sequence to be sorted.</param>
            <returns>An ordered sequence.</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.TypeComparer`1">
            <summary>
            Helper class that compares object based on a number of field comparisons given as Comparison delegates.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.ComparerBuilderBase">
            <summary>
            Base class of all ComparerBuilder that contains common members and logic.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Collections.ComparerBuilderBase.stringCompareMethod">
            <summary>
            MethodInfo of String.Compare method used to compare string instances.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Collections.ComparerBuilderBase.nullableGenericCompareMethod">
            <summary>
            MethodInfo of Nullable.Compare used to compare Nullable instances.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Collections.ComparerBuilderBase.nonGenericCompareToMethod">
            <summary>
            MethodInfo for IComparable.CompareTo interface method.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Collections.ComparerBuilderBase.generalCompareMethod">
            <summary>
            MethodInfo of ComparerBuilderBase.Compare method used to compare objects where the comparison cannot be infered at dynamic compile time.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilderBase.GetMethodImplementation(System.Type,System.Reflection.MethodInfo)">
            <summary>
            Helper that returns the implementation of the given interface method for a given source type.
            </summary>
            <param name="sourceType">Type to search for an implementation in.</param>
            <param name="interfaceMethod">Interface method to search for.</param>
            <returns>The implementing method in sourceType or null if given interface method not implemented in source class.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilderBase.GetMemberByName(System.Type,System.String)">
            <summary>
            Helper to get a member (field or property) with the specified name.
            </summary>
            <param name="type">Type to search in.</param>
            <param name="name">Name of member to search for</param>
            <returns>MemberInfo representing the field or property.</returns>
            <remarks>
            Only public properties and fields are included in the search. 
            </remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.Collections.ComparerBuilderBase.BuildNullSafeGetter(System.Collections.Generic.List{System.String},System.Linq.Expressions.Expression)" -->
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilderBase.BuildNullSafeGetter(System.Collections.Generic.List{System.String},System.Int32,System.Linq.Expressions.Expression)">
            <summary>
            Helper method to build an expression that represents a getter for the specified property expression (recursively).
            </summary>
            <param name="propParts">Represents the property to get as a list of property names.</param>
            <param name="partIndex">Current index in propParts list to build for.</param>
            <param name="baseExpression">Base expression to retrieve the given property or field from, e.g. a ParameterExpression</param>
            <returns>An Expression to retrieve the specified property.</returns>
            <exception cref="T:System.ArgumentException">If one of the items in propParts is not recognized as a public field or property.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilderBase.Compare(System.Object,System.Object)">
            <summary>
            Compares two objects whose type was not known at dynamic compile time.
            </summary>
            <param name="o1">First object to compare</param>
            <param name="o2">Second object to compare</param>
            <returns>A value less than zero if o1 &lt; o2, zero if o1 = o2, A value greater than zero if o1 &gt; o2.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilderBase.CreateDataRowComparer``1(System.Data.EnumerableRowCollection{``0},System.String)">
            <summary>
            Creates a comparer for a DataRow.
            </summary>
            <typeparam name="TRow">Type of DataRow</typeparam>
            <param name="source">EnumerableRowCollection&lt;T&gt; representing the data row collection.</param>
            <param name="sortExpression">SQL-like sort expression specifying the sort order.</param>
            <returns>An IComparer&lt;TRow&gt; that compares two rows.</returns>
            <remarks>This method is not used in the OrderBy implementation for EnumerableRowCollections, because
            better performance was obtained by dynamically creating field accessors instead.</remarks>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.ComparerBuilder`1">
            <summary>
            Utility class that dynamically create comparer based on property names and implements sort based on these. 
            </summary>
            <typeparam name="T">Type to be compared and sorted.</typeparam>
            <seealso cref="!:Dynamite.Extensions.ComparerExtensions"/>
        </member>
        <member name="F:Tencent.OA.Framework.Collections.ComparerBuilder`1.comparisonCache">
            <summary>
            Cache of previously created Comparisons where keys represent property name(s) and
            values are Comparision delegates corresponding to these properties.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.#ctor">
            <summary>
            Private constructor to prevent creating instances of this static class. 
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.CreateTypeComparer(System.String)">
            <summary>
            Builds a new comparer that compares to instances based on properties specified in a sort expression.
            </summary>
            <param name="sortExpression">A SQL-like sort expression with comma separated property names (and optional direction specifiers) (e.g. "Age DESC, Name")</param>
            <returns>A TypeComparer that implements both IComparer&lt;T&gt; and non-generic IComparer interface."/&gt;</returns>
            <exception cref="!:System.ArgumentNullExcpetion">If <paramref name="sortExpression"/> is null.</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If <paramref name="sortExpression"/> is an invalid sort expression.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.CreateTypeComparison(System.String)">
            <summary>
            Builds a new Comparison delegate that can compare instances based on properties specified in a sort expression
            </summary>
            <param name="sortExpression">A SQL-like sort expression with comma separated property names (and optional direction specifiers) (e.g. "Age DESC, Name")</param>
            <returns>A Comparison delegate based on the given sort criteria.</returns>
            <exception cref="!:System.ArgumentNullExcpetion">If <paramref name="sortExpression"/> is null.</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If <paramref name="sortExpression"/> is an invalid sort expression.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.OrderBy(System.Linq.IQueryable{`0},System.String)">
            <summary>
            Sorts the elements of a queryable sequence based on the given search criteria. 
            </summary>
            <param name="source">The IQueryable sequence to be sorted.</param>
            <param name="sortExpression">A SQL-like sort expression with comma separated property names (and optional direction specifiers) (e.g. "Age DESC, Name.Length")</param>
            <returns>A queryable sequence sorted according to the sort expression</returns>
            <exception cref="T:System.ArgumentNullException">source or sortExpression is null.</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">if sortExpression is not properly formatted or contains unrecognized property or field names..</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.GetOrderByFunction(System.String)">
            <summary>
            Gets an OrderByFunction&lt;T&gt; that orders an input sequence according to the specified sort expression.
            </summary>
            <param name="sortExpression">Expression to sort after.</param>
            <returns>An OrderByFunction&lt;T&gt; that orders an input sequence according to the specified sort expression</returns>
            <exception cref="T:System.ArgumentNullException">If sortExpression is null.</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If sortExpression is invalid.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.CreateOrderByFunction(System.String)">
            <summary>
            Creates an OrderByFunction&lt;T&gt; that orders an input sequence according to the specified sort expression.
            </summary>
            <param name="sortExpression">Expression to sort after.</param>
            <returns>An OrderByFunction&lt;T&gt; that orders an input sequence according to the specified sort expression</returns>
            <exception cref="T:System.ArgumentNullException">If sortExpression is null.</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If sortExpression is invalid.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.GetPropertyComparison(System.String,System.Boolean)">
            <summary>
            Gets a dynamically created Comparison delegate that compare instances based on a single named property 
            </summary>
            <param name="propertyName">Name of property or field to base comparison on</param>
            <param name="ascending">true to search in ascending order, false to sort in descending order</param>
            <returns>A Comparison delegate for the given property.</returns>
            <remarks>This class caches dynamically created Comparison delegates for best performance.</remarks>
            <exception cref="T:System.ArgumentNullException">if propertyName is null.</exception>
            <exception cref="!:Systen.ArgumentException">If propertyName is not recognized as a public property or field.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.GetPropertyComparison(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Gets a dynamically created Comparison delegate that compare instances based on a compound property expression
            </summary>
            <param name="properties">List of property names representing the property or fields to get. E.g. prop0.prop1.prop2 is represented as a list with items "prop0", "prop1" and "prop2".</param>
            <param name="ascending">true to search in ascending order, false to sort in descending order</param>
            <returns>A Comparison delegate for the given property.</returns>
            <exception cref="T:System.ArgumentNullException">if properties is null.</exception>
            <exception cref="!:Systen.ArgumentException">If any of the strings in properties is not recognized as a public property or field.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.CreatePropertyComparison(System.String,System.Boolean)">
            <summary>
            Dynamically creates a Comparison delegate that compare instances based on a single named property or field.
            </summary>
            <param name="propertyName">Name of public property or field to base comparison on.</param>
            <param name="ascending">true to search in ascending order, false to sort in descending order</param>
            <returns>A Comparision delegate for the given property.</returns>
            <remarks>For higher performance, use GetPropertyComparer, which caches Comparisons once created.</remarks>
            <exception cref="T:System.ArgumentNullException">if propertyName is null.</exception>
            <exception cref="!:Systen.ArgumentException">If propertyName is not recognized as a public property or field.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.CreatePropertyComparison(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Dynamically creates Comparison delegate that compare instances based on a compound property expression
            </summary>
            <param name="properties">List of property names representing the property or field expression to get. E.g. prop0.prop1.prop2 is represented as a list with items "prop0", "prop1" and "prop2".</param>
            <param name="ascending">true to search in ascending order, false to sort in descending order</param>
            <returns>A Comparison delegate for the given property.</returns>
            <remarks>For higher performance in repetitive calls use GetPropertyComparison, which caches results, instead.</remarks>
            <exception cref="T:System.ArgumentNullException">if properties is null.</exception>
            <exception cref="!:Systen.ArgumentException">If any of the strings in properties is not recognized as a public property or field.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.CreatePropertyComparisonExpression(System.Collections.Generic.List{System.String},System.Boolean)">
            <summary>
            Dynamically creates a lambda expression representing a Comparison delegate that compare instances based on a single named property expression
            </summary>
            <param name="properties">List of property names representing the property expression to get. E.g. prop0.prop1.prop2 is represented as a list with items "prop0", "prop1" and "prop2".</param>
            <param name="ascending">true to search in ascending order, false to sort in descending order</param>
            <returns>A Comparison delegate expression for the given property.</returns>
            <exception cref="T:System.ArgumentNullException">if properties is null.</exception>
            <exception cref="!:Systen.ArgumentException">If any of the strings in properties is not recognized as a public property or field.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.CreatePropertyComparisonThroughEmit(System.String,System.Boolean)">
            <summary>
            Dynamically creates a Comparison delegate that compare instances based on a single named property using System.Reflection.Emit.
            </summary>
            <param name="propName">Name of property to base comparison on</param>
            <param name="ascending">true to search in ascending order, false to sort in descending order</param>
            <returns>A Comparison delegate for the given property.</returns>
            <remarks>This cannot be used for value types and does not support fields.</remarks>
            <exception cref="T:System.InvalidOperationException">If T is a value type.</exception>
            <exception cref="T:System.ArgumentException">If propName is not a name of a public readable property in class T</exception>
            <exception cref="T:System.ArgumentNullException">If propName is null.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ComparerBuilder`1.GetFieldComparisons(System.String)">
            <summary>
            Private helper to parse a sort expression string and create Comparison delegates based on each property.
            </summary>
            <param name="sortExpression">Sort expression to parse.</param>
            <returns>List of Comparison delegates, one for each property.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Caching.MemcachedCacheProvider.Get(System.String[])">
            <summary>
            This method will work with memcached 1.2.4 and higher
            </summary>
            <param name="keys"></param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.IClientBase">
            <summary>
            Interface to expose the inner ClientBase properties hidden by the Proxy
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.IClientBase.Abort" -->
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.IClientBase.Close" -->
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.IClientBase.Open" -->
        <member name="E:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.IClientBase.ProxyCreated">
            <summary>
            Fired when a new proxy is created.
            In here you can initialize the Credentials and EndPoints.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.IClientBase.ClientCredentials">
            <summary>
            Gets the client credentials used to call an operation.
            Returns a System.ServiceModel.Description.ClientCredentials that represents
            the proof of identity presented by the client.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.IClientBase.Endpoint">
            <summary>
            Gets the target endpoint for the service to which the WCF client can connect.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.IClientBase.InnerChannel">
            <summary>
            Gets the underlying System.ServiceModel.IClientChannel implementation.
            </summary>
            <value>The client channel for the WCF client object.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.IClientBase.State" -->
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ITokenStaffService.CheckTokencode(System.Int32,System.String,System.String)">
            <summary>
            根据用户名和密码验证用户，限定调用的服务器地址，用于token管理验证
            </summary>
            <param name="staffId">用户Id</param>
            <param name="tokencode">登陆tokencode（不包含pin）</param>
            <param name="warrantString">认证字符串</param>
            <returns>tokencode是否正确</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ITokenStaffService.CheckTokencode(System.String,System.String,System.String)">
            <summary>
            根据用户名和密码验证用户，限定调用的服务器地址，用于token管理验证
            </summary>
            <param name="engName">用户英文名</param>
            <param name="tokencode">登陆tokencode（不包含pin）</param>
            <param name="warrantString">认证字符串</param>
            <returns>tokencode是否正确</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ITokenStaffService.CheckTokencode(System.Int32,System.String)">
            <summary>
            检测用户的tokencode是否有效
            </summary>
            <param name="staffId">员工Id</param>
            <param name="tokencode">密码</param>
            <returns>true - 帐号的tokencode有效,false - 无效tokencode</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ITokenStaffService.CheckTokencode(System.String,System.String)">
            <summary>
            检测用户的tokencode是否有效
            </summary>
            <param name="engName">员工英文名</param>
            <param name="tokencode">密码</param>
            <returns>true - 帐号的tokencode有效,false - 无效tokencode</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ITokenStaffService.CheckPassword(System.Int32,System.String)">
            <summary>
            用户登陆检查，Token验证为第一个选择，如果Token验证没有通过
            检查用户是否启用了Tencent域认证，如果启用则用Tencent域认证
            如果没有通过Tencent域的认证，判断用户是否是客户服务部域认证用户
            如果是，则用客户服务部域认证用户
            </summary>
            <param name="staffId"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.OAForm">
            <summary>
            FormXML
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.MyWorkspace.OAForm.summaryList">
            <summary>
            私有成员
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.OAForm.#ctor">
            <summary>
            默认构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.OAForm.#ctor(System.String)">
            <summary>
            重载构造函数
            </summary>
            <param name="xmlcontent"></param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.OAForm.Save">
            <summary>
            讲document保存到XmlContent字符串
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.OAForm.SummaryList">
            <summary>
            获得摘要列表
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.OAForm.FileList">
            <summary>
            获得附件信息列表
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.OAForm.ApproveList">
            <summary>
            获得审批历史列表
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.OAForm.ActionList">
            <summary>
            获得审批动作列表
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.OAForm.KeyFieldList">
            <summary>
            获得业务审批可变字段列表
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.OAForm.XmlContent">
            <summary>
            获得XmlContent字符串
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.OAForm.Opinion">
            <summary>
            获得XmlContent字符串
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.OAForm.ActionURL">
            <summary>
            Name
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.ServiceContract.IRTXService.SendIM(Tencent.OA.Framework.Messages.DataContract.IMMessage)">
            <summary>
            发送邮件 
            </summary>
            <param name="mail"></param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityMemoryEngine">
            <summary>
            Summary description for NVelocityMemoryEngine.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityMemoryEngine.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityMemoryEngine"/> class.
            </summary>
            <param name="cacheTamplate">if set to <c>true</c> [cache tamplate].</param>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityMemoryEngine.Process(System.Collections.IDictionary,System.String)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="template">The template.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityMemoryEngine.Process(System.Collections.IDictionary,System.IO.TextWriter,System.String)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="writer">The writer.</param>
            <param name="template">The template.</param>
        </member>
        <member name="T:Tencent.OA.Framework.Data.SqlHelper">
            <summary>
            The SqlHelper class is intended to encapsulate high performance, scalable best practices for 
            common uses of SqlClient
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Data.SqlHelper.CommandTimeOut">
            <summary>
            数据库访问超时设置
            </summary>
            <remarks>
            缺省60秒，如果设定将会是全局影响，慎用....
            </remarks>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.AttachParameters(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlParameter[])">
            <summary>
            This method is used to attach array of SqlParameters to a SqlCommand.
            
            This method will assign a value of DbNull to any parameter with a direction of
            InputOutput and a value of null.  
            
            This behavior will prevent default values from being used, but
            this will be the less common case than an intended pure output parameter (derived as InputOutput)
            where the user provided no input value.
            </summary>
            <param name="command">The command to which the parameters will be added</param>
            <param name="commandParameters">An array of SqlParameters to be added to command</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Data.DataRow)">
            <summary>
            This method assigns dataRow column values to an array of SqlParameters
            </summary>
            <param name="commandParameters">Array of SqlParameters to be assigned values</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.AssignParameterValues(System.Data.SqlClient.SqlParameter[],System.Object[])">
            <summary>
            This method assigns an array of values to an array of SqlParameters
            </summary>
            <param name="commandParameters">Array of SqlParameters to be assigned values</param>
            <param name="parameterValues">Array of objects holding the values to be assigned</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],System.Boolean@)">
            <summary>
            This method opens (if necessary) and assigns a connection, transaction, command type and parameters 
            to the provided command
            </summary>
            <param name="command">The SqlCommand to be prepared</param>
            <param name="connection">A valid SqlConnection, on which to execute this command</param>
            <param name="transaction">A valid SqlTransaction, or 'null'</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="mustCloseConnection"><c>true</c> if the connection was opened by the method, otherwose is false.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the database specified in 
            the connection string
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the database specified in the connection string 
            using the provided parameters
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQuery(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(connString, "PublishOrders", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored prcedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(conn, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, "PublishOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns no resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "PublishOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns no resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int result = ExecuteNonQuery(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int result = ExecuteNonQuery(conn, trans, "PublishOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDataset(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDataset(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             DataSet ds = ExecuteDataset(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             DataSet ds = ExecuteDataset(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[],Tencent.OA.Framework.Data.SqlHelper.SqlConnectionOwnership)">
            <summary>
            Create and prepare a SqlCommand, and call ExecuteReader with the appropriate CommandBehavior.
            </summary>
            <remarks>
            If we created and opened the connection, we want the connection to be closed when the DataReader is closed.
            
            If the caller provided the connection, we want to leave it to them to manage.
            </remarks>
            <param name="connection">A valid SqlConnection, on which to execute this command</param>
            <param name="transaction">A valid SqlTransaction, or 'null'</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParameters to be associated with the command or 'null' if no parameters are required</param>
            <param name="connectionOwnership">Indicates whether the connection parameter was provided by the caller, or created by SqlHelper</param>
            <returns>SqlDataReader containing the results of the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReader(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(connString, "GetOrders", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
              SqlDataReader dr = ExecuteReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             SqlDataReader dr = ExecuteReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalar(System.String,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(connString, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(conn, "GetOrderCount", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, CommandType.StoredProcedure, "GetOrderCount", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalar(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             int orderCount = (int)ExecuteScalar(trans, "GetOrderCount", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlConnection,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(conn, "GetOrders", 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure using "FOR XML AUTO"</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String)">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders");
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, CommandType.StoredProcedure, "GetOrders", new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command using "FOR XML AUTO"</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteXmlReader(System.Data.SqlClient.SqlTransaction,System.String,System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             XmlReader r = ExecuteXmlReader(trans, "GetOrders", 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.FillDataset(System.String,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the database specified in 
            the connection string. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.FillDataset(System.String,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the database specified in the connection string 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.FillDataset(System.String,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(connString, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, 24);
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>    
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlConnection. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>    
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(conn, "GetOrders", ds, new string[] {"orders"}, 24, 36);
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[])">
            <summary>
            Execute a SqlCommand (that returns a resultset and takes no parameters) against the provided SqlTransaction. 
            </summary>
            <remarks>
            e.g.:  
             FillDataset(trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"});
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Execute a SqlCommand (that returns a resultset) against the specified SqlTransaction
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataSet,System.String[],System.Object[])">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified 
            SqlTransaction using the provided parameter values.  This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <remarks>
            This method provides no access to output parameters or the stored procedure's return value parameter.
            
            e.g.:  
             FillDataset(trans, "GetOrders", ds, new string[]{"orders"}, 24, 36);
            </remarks>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="parameterValues">An array of objects to be assigned as the input values of the stored procedure</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.FillDataset(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.DataSet,System.String[],System.Data.SqlClient.SqlParameter[])">
            <summary>
            Private helper method that execute a SqlCommand (that returns a resultset) against the specified SqlTransaction and SqlConnection
            using the provided parameters.
            </summary>
            <remarks>
            e.g.:  
             FillDataset(conn, trans, CommandType.StoredProcedure, "GetOrders", ds, new string[] {"orders"}, new SqlParameter("@prodid", 24));
            </remarks>
            <param name="connection">A valid SqlConnection</param>
            <param name="transaction">A valid SqlTransaction</param>
            <param name="commandType">The CommandType (stored procedure, text, etc.)</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="dataSet">A dataset wich will contain the resultset generated by the command</param>
            <param name="tableNames">This array will be used to create table mappings allowing the DataTables to be referenced
            by a user defined name (probably the actual table name)
            </param>
            <param name="commandParameters">An array of SqlParamters used to execute the command</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.UpdateDataset(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlCommand,System.Data.DataSet,System.String)">
            <summary>
            Executes the respective command for each inserted, updated, or deleted row in the DataSet.
            </summary>
            <remarks>
            e.g.:  
             UpdateDataset(conn, insertCommand, deleteCommand, updateCommand, dataSet, "Order");
            </remarks>
            <param name="insertCommand">A valid transact-SQL statement or stored procedure to insert new records into the data source</param>
            <param name="deleteCommand">A valid transact-SQL statement or stored procedure to delete records from the data source</param>
            <param name="updateCommand">A valid transact-SQL statement or stored procedure used to update records in the data source</param>
            <param name="dataSet">The DataSet used to update the data source</param>
            <param name="tableName">The DataTable used to update the data source.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.CreateCommand(System.Data.SqlClient.SqlConnection,System.String,System.String[])">
            <summary>
            Simplify the creation of a Sql command object by allowing
            a stored procedure and optional parameters to be provided
            </summary>
            <remarks>
            e.g.:  
             SqlCommand command = CreateCommand(conn, "AddCustomer", "CustomerID", "CustomerName");
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="sourceColumns">An array of string to be assigned as the source columns of the stored procedure parameters</param>
            <returns>A valid SqlCommand object</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQueryTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQueryTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.  
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteNonQueryTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns no resultset) against the specified
            SqlTransaction using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An int representing the number of rows affected by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDatasetTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDatasetTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the store procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteDatasetTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on row values.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A dataset containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReaderTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReaderTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteReaderTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>A SqlDataReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalarTypedParams(System.String,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the database specified in 
            the connection string using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalarTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteScalarTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a 1x1 resultset) against the specified SqlTransaction
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An object containing the value in the 1x1 resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteXmlReaderTypedParams(System.Data.SqlClient.SqlConnection,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlConnection 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelper.ExecuteXmlReaderTypedParams(System.Data.SqlClient.SqlTransaction,System.String,System.Data.DataRow)">
            <summary>
            Execute a stored procedure via a SqlCommand (that returns a resultset) against the specified SqlTransaction 
            using the dataRow column values as the stored procedure's parameters values.
            This method will query the database to discover the parameters for the 
            stored procedure (the first time each stored procedure is called), and assign the values based on parameter order.
            </summary>
            <param name="transaction">A valid SqlTransaction object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="dataRow">The dataRow used to hold the stored procedure's parameter values.</param>
            <returns>An XmlReader containing the resultset generated by the command</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Data.SqlHelper.SqlConnectionOwnership">
            <summary>
            This enum is used to indicate whether the connection was provided by the caller, or created by SqlHelper, so that
            we can set the appropriate CommandBehavior when calling ExecuteReader()
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Data.SqlHelper.SqlConnectionOwnership.Internal">
            <summary>Connection is owned and managed by SqlHelper</summary>
        </member>
        <member name="F:Tencent.OA.Framework.Data.SqlHelper.SqlConnectionOwnership.External">
            <summary>Connection is owned and managed by the caller</summary>
        </member>
        <member name="T:Tencent.OA.Framework.Data.SqlHelperParameterCache">
            <summary>
            SqlHelperParameterCache provides functions to leverage a static cache of procedure parameters, and the
            ability to discover parameters for stored procedures at run-time.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelperParameterCache.DiscoverSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Resolve at run time the appropriate set of SqlParameters for a stored procedure
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">Whether or not to include their return value parameter</param>
            <returns>The parameter array discovered.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelperParameterCache.CloneParameters(System.Data.SqlClient.SqlParameter[])">
            <summary>
            Deep copy of cached SqlParameter array
            </summary>
            <param name="originalParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelperParameterCache.CacheParameterSet(System.String,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            Add parameter array to the cache
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <param name="commandParameters">An array of SqlParamters to be cached</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelperParameterCache.GetCachedParameterSet(System.String,System.String)">
            <summary>
            Retrieve a parameter array from the cache
            </summary>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="commandText">The stored procedure name or T-SQL command</param>
            <returns>An array of SqlParamters</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelperParameterCache.GetSpParameterSet(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connectionString">A valid connection string for a SqlConnection</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelperParameterCache.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelperParameterCache.GetSpParameterSet(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <remarks>
            This method will query the database for this information, and then store it in a cache for future requests.
            </remarks>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Data.SqlHelperParameterCache.GetSpParameterSetInternal(System.Data.SqlClient.SqlConnection,System.String,System.Boolean)">
            <summary>
            Retrieves the set of SqlParameters appropriate for the stored procedure
            </summary>
            <param name="connection">A valid SqlConnection object</param>
            <param name="spName">The name of the stored procedure</param>
            <param name="includeReturnValueParameter">A bool value indicating whether the return value parameter should be included in the results</param>
            <returns>An array of SqlParameters</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Exceptions.PropertyNotExistException">
            <summary>
            属性不存在时抛出的异常
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Exceptions.PropertyNotExistException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Exceptions.PropertyNotExistException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="M:Tencent.OA.Framework.Exceptions.PropertyNotExistException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常信息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="M:Tencent.OA.Framework.Exceptions.PropertyNotExistException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">异常信息</param>
            <param name="context">上下文信息</param>
        </member>
        <member name="T:Tencent.OA.Framework.Organization.TokenManager">
            <summary>
            Token管理接口
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.TokenManager.IsStaffHasEnableTokens(System.String,System.String)">
            <summary>
            用户是否有Token卡
            </summary>
            <param name="staffID">员工ID</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.TokenManager.ReInitToken(System.Int32,System.Int64,System.Int32)">
            <summary>
            重置用户的Token卡
            </summary>
            <param name="serialNum">用户的Token序列号</param>
            <param name="cancelUserID">用户的ID</param>
            <param name="warrantString">授权字符串</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.TokenManager.SearchTokens(System.Int32,System.String)">
            <summary>
            查询用户的Token卡
            </summary>
            <param name="input">模糊查询</param>
            <returns>查询结果列表</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Organization.ServiceContract.ITokenManagerService">
            <summary>
            Token管理接口
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ITokenManagerService.IsStaffHasEnableTokensByID(System.Int32,System.Int32)">
            <summary>
            用户是否有Token卡
            </summary>
            <param name="staffId">员工</param>
            <param name="operID">操作人</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ITokenManagerService.IsStaffHasEnableTokens(System.String,System.String)">
            <summary>
            用户是否有Token卡
            </summary>
            <param name="engName">员工英文名</param>
            <param name="operEngName">操作人的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ITokenManagerService.ReInitToken(System.Int32,System.Int64,System.Int32,System.String)">
            <summary>
            重置用户的Token卡
            </summary>
            <param name="serialNum">用户的Token序列号</param>
            <param name="cancelUserID">用户的ID</param>
            <param name="warrantString">授权字符串</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.ITokenManagerService.SearchTokens(System.Int32,System.String)">
            <summary>
            查询用户的Token卡
            </summary>
            <param name="input">模糊查询</param>
            <returns>查询结果列表</returns>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.FormParams">
            <summary>
            审批结果表单
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.FormParams.sysKey">
            <summary>
            在个人工作台上注册的系统Key
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.FormParams.StaffId">
            <summary>
            当前用户id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.FormParams.ProcInstId">
            <summary>
            审批单流程id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.FormParams.FlowName">
            <summary>
            流程全名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.FormParams.SerialNumber">
            <summary>
            待办的序列号
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.FormParams.ActionResult">
            <summary>
            //审批结论，如同意、不同意等 
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.FormParams.Opinion">
            <summary>
            审批意见
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.FormParams.KeyFields">
            <summary>
            表单的审批数据
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Filters.MachineFilter">
            <summary>
            Restricts a log entry based on the log entries
            <see cref="!:ILogEntry.MachineName"/> value,
            as specified in the comma delimited <em>machines</em> attribute
            of the filter element.
            <seealso cref="P:System.Environment.MachineName"/>
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.Filters.MachineFilter.Machines">
            <summary>
            Gets or sets a set of machine names to be used by an <see cref="T:Tencent.OA.Framework.Logging.Filter.IFilter"/>.
            </summary>
            <value>The users.</value>
        </member>
        <member name="M:Tencent.OA.Framework.Diagnostics.PerformanceCounterCategoryAttribute.#ctor(System.String,System.Diagnostics.PerformanceCounterCategoryType,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="name">分类名称</param>
            <param name="instanceType">实例类型(single or multi)</param>
            <param name="info">相关信息</param>
            <seealso cref="T:System.Diagnostics.PerformanceCounterCategoryType"/>
        </member>
        <member name="P:Tencent.OA.Framework.Diagnostics.PerformanceCounterCategoryAttribute.Name">
            <summary>
            分类名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Diagnostics.PerformanceCounterCategoryAttribute.Info">
            <summary>
            相关信息
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Diagnostics.PerformanceCounterCategoryAttribute.InstanceType">
            <summary>
            实例类型
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowOpinion">
            <summary>
            K2工作流审批意见处理接口
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowOpinion.SaveActivityMemo(Tencent.OA.Framework.Workflow.DataContract.ActivityMemo)">
            <summary>
            保存审批意见
            </summary>
            <param name="actMemo"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowOpinion.GetActivityMemo(System.Int32,System.String)">
            <summary>
            获取流程实例的活动审批意见
            </summary>
            <param name="procInstId"></param>
            <param name="serialNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IK2FlowOpinion.GetActivityMemos(System.Int32)">
            <summary>
            获取流程实例的所有审批意见
            </summary>
            <param name="procInstId"></param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ActivityMemo.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ActivityMemo.ProcInstID">
            <summary>
            流程实例ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ActivityMemo.SerialNumber">
            <summary>
            流程步骤ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ActivityMemo.ActivityName">
            <summary>
            步骤名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ActivityMemo.StaffFullName">
            <summary>
            处理人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ActivityMemo.Memo">
            <summary>
            意见
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.ActivityMemo.ApproveTime">
            <summary>
            处理时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.ServiceModel.UnityServiceHost.PhysicalPath">
            <summary>
            配置文件所在的物理路径
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Serialization.ObjectXMLSerializer`1">
            <summary>
            对象的 XML 序列化和反序列化的包装类.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.Serialization.ObjectXMLSerializer`1.Load(`0,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.Serialization.ObjectXMLSerializer`1.Load(`0,System.String,System.Type[])" -->
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.Serialization.ObjectXMLSerializer`1.Save(`0,System.Text.StringBuilder)" -->
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.Serialization.ObjectXMLSerializer`1.Save(`0,System.Text.StringBuilder,System.Type[])" -->
        <member name="M:Tencent.OA.Framework.RightWay.Interface.INotify.NitifyRightChange(System.Collections.Generic.List{Tencent.OA.Framework.RightWay.Entity.Processer})">
            <summary>
            业务系统提供实现，统一权限权限更改时调用
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.RightWay.Entity.DataScope.Code">
            <summary>
            数据对象类型（登记在权限系统中的web service的类型）
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.RightWay.Entity.DataScope.DataObjects">
            <summary>
            数据对象（业务系统中的数据对象定义）
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.RightWay.Entity.DataScope.ExcludeDataObjects">
            <summary>
            排除的数据对象 for V3
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.ID">
            <summary>
            流水ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.StaffID">
            <summary>
            员工ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.StaffName">
            <summary>
            员工姓名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageItemID">
            <summary>
            奖惩项ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageItemName">
            <summary>
            奖惩名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageTypeID">
            <summary>
            奖惩类型ID（奖：1；惩：0）
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageTypeName">
            <summary>
            奖惩类型
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageRankID">
            <summary>
            面向范围ID（1：公司级；2：BU级；3：部门级）
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageRankName">
            <summary>
            面向范围
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageLevelID">
            <summary>
            奖惩级别ID（1：1级；2：2级；3：3级；4：4级；5：5级）
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageLevelName">
            <summary>
            奖惩级别
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageRateID">
            <summary>
            奖惩频度ID（1：一次性；2：季度；3：月度；4：年度；5：半年度；6：其他）
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageRateName">
            <summary>
            奖惩频度
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.DepartmentID">
            <summary>
            组织单位ID串，分号间隔
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.DepartmentName">
            <summary>
            组织单位名称串；分号间隔
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageSubLevelID">
            <summary>
            奖惩子项ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageSubLevelName">
            <summary>
            奖惩子项名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageContent">
            <summary>
            奖惩内容
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageFileName">
            <summary>
            奖惩发文名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageDispatchDate">
            <summary>
            奖惩发布时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageCircleBegin">
            <summary>
            奖惩期间－开始日期
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.EncourageCircleEnd">
            <summary>
            奖惩期间－结束日期
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.StaffEncourage.Memo">
            <summary>
            备注说明
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.ID">
            <summary>
            部门ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.ExchangeGroupName">
            <summary>
            内部邮件组名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.Enabled">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.LeaderId">
            <summary>
            经理/LeaderID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.Level">
            <summary>
            级别
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.VicePresidentId">
            <summary>
            业务副总Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.ParentId">
            <summary>
            上级部门ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.SecretaryId">
            <summary>
            部门秘书Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.TypeId">
            <summary>
            部门类型Id
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.TypeName">
            <summary>
            部门类型名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.DeptInfo.ExProperties">
            <summary>
            扩展属性
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.ApproveList">
            <summary>
            审批历史列表
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.ApproveList.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="parentNode"></param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.ApproveList.Create(System.String,System.String,System.String,System.String)">
            <summary>
            创建一个Approve节点
            </summary>
            <param name="name">节点名</param>
            <returns>返回Approve节点</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.ApproveList.Remove(System.Int32)">
            <summary>
            删除某个节点
            </summary>
            <param name="index">要删除的节点的索引值</param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.ApproveList.Clear">
            <summary>
            删除所有节点
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.ApproveList.Item(System.Int32)">
            <summary>
            列表索引
            </summary>
            <param name="index">索引值</param>
            <returns>返回Approve节点</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Logger">
            <summary>
            The main application log.
            Use this static class to write to a
            <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/> defined in the current 
            <see cref="T:Tencent.OA.Framework.Logging.Provider.ILogStrategyProvider"/>.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.InitFromConfig">
            <summary>
            Loads the providers.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.IsEnabled(Tencent.OA.Framework.Logging.ILogStrategy,Tencent.OA.Framework.Logging.Filter.LogEntryOrigin,Tencent.OA.Framework.Logging.LogEntry.IClientInfo)">
            <summary>
            Determines whether logging to the specified origin is enabled.
            Checks whether the current provider is null 
            and if not, then whether all filters are validate.
            Each <see cref="T:Tencent.OA.Framework.Logging.Filter.IFilter"/> makes use of the origin
            parameter and decides whether it is, itself, valid.
            If any filters are not valid, then this method
            returns <code>false</code>.
            </summary>
            <param name="logStrategy">The log strategy to test for whether it is enabled.</param>
            <param name="origin">The origin.</param>
            <param name="info">Client information used during evaluation.</param>
            <returns>
            	<c>true</c> if logging is enable; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.Debug(System.String)">
            <summary>
            Writes a log entry at the <see cref="F:Tencent.OA.Framework.Logging.LogLevel.Debug"/> 
            level to the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.Debug(System.String,System.Exception)">
            <summary>
            Writes a log entry at the <see cref="F:Tencent.OA.Framework.Logging.LogLevel.Debug"/> 
            level to the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception that this message 
            is regarding.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.Info(System.String)">
            <summary>
            Writes a log entry at the <see cref="F:Tencent.OA.Framework.Logging.LogLevel.Info"/> 
            level to the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.Info(System.String,System.Exception)">
            <summary>
            Writes a log entry at the <see cref="F:Tencent.OA.Framework.Logging.LogLevel.Info"/> 
            level to the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception that this message 
            is regarding.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.Warn(System.String)">
            <summary>
            Writes a log entry at the <see cref="F:Tencent.OA.Framework.Logging.LogLevel.Warn"/> 
            level to the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.Warn(System.String,System.Exception)">
            <summary>
            Writes a log entry at the <see cref="F:Tencent.OA.Framework.Logging.LogLevel.Warn"/> 
            level to the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception that this message 
            is regarding.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.Error(System.String)">
            <summary>
            Writes a log entry at the <see cref="F:Tencent.OA.Framework.Logging.LogLevel.Error"/> 
            level to the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.Error(System.String,System.Exception)">
            <summary>
            Writes a log entry at the <see cref="F:Tencent.OA.Framework.Logging.LogLevel.Error"/> 
            level to the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception that this message 
            is regarding.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.Fatal(System.String)">
            <summary>
            Writes a log entry at the <see cref="F:Tencent.OA.Framework.Logging.LogLevel.Fatal"/> 
            level to the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="message">The message to write.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.Fatal(System.String,System.Exception)">
            <summary>
            Writes a log entry at the <see cref="F:Tencent.OA.Framework.Logging.LogLevel.Fatal"/> 
            level to the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>.
            </summary>
            <param name="message">The message to write.</param>
            <param name="exception">The exception that this message 
            is regarding.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Logger.GetCallerLocation(System.Int32)">
            <summary>
            Gets the caller location from the <see cref="T:System.Diagnostics.StackTrace"/>.
            </summary>
            <returns>The code location that the call to log originated.</returns>
        </member>
        <member name="E:Tencent.OA.Framework.Logging.Logger.Write">
            <summary>
            Occurs when the active <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/>
            is called upon to write a log entry.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Filters.EnvironmentUserFilter">
            <summary>
            Restricts a log entry based on the current
            <see cref="P:System.Environment.UserName"/> value,
            as specified in the comma delimited <em>users</em> attribute
            of the filter element.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.Filters.EnvironmentUserFilter.Users">
            <summary>
            Gets or sets a set of user names to be used by an <see cref="T:Tencent.OA.Framework.Logging.Filter.IFilter"/>.
            </summary>
            <value>The users.</value>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.ExceptionMemento">
            <summary>
            所代表的异常信息
            <see cref="T:System.Exception"/>.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ExceptionMemento.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Logging.ExceptionMemento"/> class.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.ExceptionMemento.TypeName">
            <summary>
            获取和设置异常类型名称 <see cref="T:System.Exception"/>.
            </summary>
            <value>类型名称.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.ExceptionMemento.ExtensionData">
            <summary>
            Gets or sets the structure that contains extra data.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject"/> 
            that contains data that is not recognized as belonging to the data contract.</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.DataContract.ClientConfigurationData">
            <summary>
            日志系统的消费者的相关信息
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientConfigurationData.ExpiresInSeconds">
            <summary>
            设置和获取这个客户端配置的失效时间.
            </summary>
            <value>失效时间.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientConfigurationData.RetrievedOn">
            <summary>
            设置和获取客户端信息的获取时间
            </summary>
            <value>客户端信息的获取时间</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientConfigurationData.LogEnabled">
            <summary>
            获取和设置是否启用日志.
            </summary>
            <value><c>true</c> 启用日志; 否则是, <c>false</c>.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.DataContract.ClientConfigurationData.ExtensionData">
             <summary>
            获取和设置额外的数据.
             </summary>
             <value></value>
             <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject"/> 
             that contains data that is not recognized as belonging to the data contract.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ClientLoggingException.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Logging.ClientLoggingException"/> class.
            </summary>
            <param name="userMessage">The localized user message that is appropriate 
            for displaying to a user. Can be <code>null</code>.</param>
            <param name="developerMessage">The developer message that may contain 
            detailed information regarding the exception.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ClientLoggingException.#ctor(System.String,System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Logging.ClientLoggingException"/> class.
            </summary>
            <param name="userMessage">The localized user message that is appropriate 
            for displaying to a user. Can be <code>null</code>.</param>
            <param name="developerMessage">The developer message that may contain 
            detailed information regarding the exception.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ClientLoggingException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Logging.ClientLoggingException"/> class.
            </summary>
            <param name="developerMessage">The developer message that may contain 
            detailed information regarding the exception.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.ClientLoggingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Logging.ClientLoggingException"/> class.
            </summary>
            <param name="developerMessage">The developer message that may contain 
            detailed information regarding the exception.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.ClientLoggingException.UserMessage">
            <summary>
            Gets or sets the localized user message, that is appropriate 
            for displaying to a user.
            </summary>
            <value>The user message.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.ClientLoggingException.UserMessagePresent">
            <summary>
            Gets a value indicating whether the UserMessage is <code>null</code>.
            </summary>
            <value><c>true</c> if the UserMessage is not <code>null</code>; 
            otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Tencent.OA.Framework.LabsNet.DataContract.LabsNetItem.DeviceName">
            <summary>
            设备名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.LabsNet.DataContract.LabsNetItem.MacAddress">
            <summary>
            注册的Mac地址
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.LabsNet.DataContract.LabsNetItem.LastUpdateTime">
            <summary>
            上次更新时间
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.Interfaces.IK2Worklist">
            <summary>
            工作项列表
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ProcessInstance.ProcID">
            <summary>
            流程ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ProcessInstance.ProcFolio">
            <summary>
            流程关键字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ProcessInstance.ProcName">
            <summary>
            流程名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ProcessInstance.ProcStatus">
            <summary>
            流程状态
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ProcessInstance.StartTime">
            <summary>
            流程的启动时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ProcessInstance.FinishTime">
            <summary>
            流程的结束时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ProcessInstance.Originator">
            <summary>
            流程的发起人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ProcessInstance.CurrentActivity">
            <summary>
            流程的当前审批步骤
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.DataContract.K2ProcessInstance.ExtensionData">
            <summary>
            Gets or sets the structure that contains extra data.
            </summary>
            <value></value>
            <returns>An <see cref="T:System.Runtime.Serialization.ExtensionDataObject"/> 
            that contains data that is not recognized as belonging to the data contract.</returns>
        </member>
        <member name="T:Tencent.OA.Framework.ServiceModel.Utils.FormatComment">
            <summary>
            allows customizing a comment
            </summary>
            <param name="comment">The comment to format</param>
            <returns>True if the formatting was handled</returns>
        </member>
        <member name="T:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFAbstractReusableClientProxy`1">
            <summary>
            Class that can be used with PolicyInjection. Dynamically generated classes will inherit from this class.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFAbstractReusableClientProxy`1.CloseProxyBecauseOfException">
            <summary>
            Close the proxy because it was fauled.
            http://bloggingabout.net/blogs/erwyn/archive/2006/12/09/WCF-Service-Proxy-Helper.aspx
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFAbstractReusableClientProxy`1.AssureProxy">
            <summary>
            Create a new proxy if there is none already in use.
            If the previous proxy was faulted, it will be nulled and a new proxy is created
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFAbstractReusableClientProxy`1.Proxy">
            <summary>
            Called to retrieve a cached instance of the proxy.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1">
            <summary>
            Custom client channel. Allows to specify a different configuration file
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="configurationPath"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.#ctor(System.ServiceModel.Channels.Binding,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="binding"></param>
            <param name="configurationPath"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.#ctor(System.ServiceModel.Description.ServiceEndpoint,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="serviceEndpoint"></param>
            <param name="configurationPath"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.#ctor(System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="endpointConfigurationName"></param>
            <param name="configurationPath"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.#ctor(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="binding"></param>
            <param name="endpointAddress"></param>
            <param name="configurationPath"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.#ctor(System.ServiceModel.Channels.Binding,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="binding"></param>
            <param name="remoteAddress"></param>
            <param name="configurationPath"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.#ctor(System.String,System.ServiceModel.EndpointAddress,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="endpointConfigurationName"></param>
            <param name="endpointAddress"></param>
            <param name="configurationPath"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.CreateDescription">
            <summary>
            Loads the serviceEndpoint description from the specified configuration file
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.CreateBinding(System.String,System.ServiceModel.Configuration.ServiceModelSectionGroup)">
            <summary>
            Configures the binding for the selected endpoint
            </summary>
            <param name="bindingName"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.GetBinding(System.ServiceModel.Configuration.IBindingConfigurationElement)">
            <summary>
            Helper method to create the right binding depending on the configuration element
            </summary>
            <param name="configurationElement"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.AddBehaviors(System.String,System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Configuration.ServiceModelSectionGroup)">
            <summary>
            Adds the configured behavior to the selected endpoint
            </summary>
            <param name="behaviorConfiguration"></param>
            <param name="serviceEndpoint"></param>
            <param name="group"></param>
        </member>
        <member name="M:Tencent.OA.Framework.ServiceModel.CustomClientChannel`1.GetIdentity(System.ServiceModel.Configuration.IdentityElement)">
            <summary>
            Gets the endpoint identity from the configuration file
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.SimpleInfo.GetStaffByDept(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="deptId"></param>
            <param name="includePartTimeStaff">
            true:包含兼职，false不包含兼职
            </param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.SimpleInfo.GetOrgByStaff(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="staffid"></param>
            <param name="includePartTime"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.SimpleInfo.GetOrgByStaff(System.Int32,System.Boolean,System.Int32)">
            <summary>
            获取用户的组织，兼职，岗位属性
            </summary>
            <param name="staffid"></param>
            <param name="includePartTime"></param>
            <param name="postPropertyid"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.SimpleInfo.GetPostByStaff(System.Int32,System.Boolean)">
            <summary>
            获取用户的岗位
            </summary>
            <param name="staffid"></param>
            <param name="includePartTime"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.SimpleInfo.GetPostByOrg(System.Int32)">
            <summary>
            根据部门获取岗位
            </summary>
            <param name="deptid"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetStaffInfoById(System.Int32)">
            <summary>
            根据Id获取用户信息
            </summary>
            <param name="staffId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetStaffInfoByLoginName(System.String)">
            <summary>
            根据英文名获取用户信息
            </summary>
            <param name="loginName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetAllStaffInfo">
            <summary>
            获取所有用户列表,只包含必要的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetStaffsByIdString(System.String,System.String)">
            <summary>
            根据Id序列获取用户信息列表
            </summary>
            <param name="idString"></param>
            <param name="splitter"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetStaffIdByTelephoneNumber(System.String)">
            <summary>
            通过电话号码获取员工ID
            </summary>
            <param name="phoneNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetVicePresident(System.Int32)">
            <summary>
            根据部门Id获取部门副总信息
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetAllDeptInfosWithLevel(System.Int32)">
            <summary>
            根据指定深度获取部门列表
            </summary>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetAllDeptInfos">
            <summary>
            获取所有部门列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetDeptsByIdString(System.String,System.String)">
            <summary>
            根据部门Id序列获取部门列表
            </summary>
            <param name="idString"></param>
            <param name="splitter"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetDeptStaffsWithLevel(System.Int32,System.Int32)">
            <summary>
            根据指定深度获取部门下的员工列表
            </summary>
            <param name="deptId"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetDeptStaffs(System.Int32)">
            <summary>
            获取指定部门的员工列表
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetDeptInfo(System.Int32)">
            <summary>
            获取指定Id的部门信息
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetWorkStaffsWithLevel(System.Int32,System.Int32)">
            <summary>
            指定深度，获取指定部门下的工作员工列表
            </summary>
            <param name="deptId"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetWorkStaffs(System.Int32)">
            <summary>
            获取指定部门下的工作员工列表
            </summary>
            <param name="deptId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetChildDeptInfos(System.Int32,System.Int32)">
            <summary>
            指定深度，获取指定部门下的子部门列表
            </summary>
            <param name="parentDeptId"></param>
            <param name="level"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetStaffMembers(System.Int32)">
            <summary>
            获取属于指定邮件组的员工列表
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetMemberOfAdGroups(System.Int32)">
            <summary>
            获取指定邮件组所归属的邮件组列表
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetMemberAdGroups(System.Int32)">
            <summary>
            获取指定邮件组的子邮件组列表
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetAdGroupInfoByName(System.String)">
            <summary>
            获取指定名字的邮件组
            </summary>
            <param name="groupName"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetAdGroupInfoById(System.Int32)">
            <summary>
            获取指定Id的邮件组
            </summary>
            <param name="groupId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetAdGroupsByIdString(System.String,System.String)">
            <summary>
            根据Id序列获取邮件组列表
            </summary>
            <param name="idString"></param>
            <param name="splitter"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetStaffMemberOfAdGroups(System.Int32)">
            <summary>
            获取指定员工所属的邮件组列表
            </summary>
            <param name="staffId"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetAllAdGroups">
            <summary>
            获取所有邮件组列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetAllDeptMapps">
            <summary>
            获取OA和RTX部门映射表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.ServiceContract.IOrgService.GetAllStaffEncourage">
            <summary>
            获取所有员工的奖惩信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.File">
            <summary>
            附件信息结构
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.File.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.File.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.File.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Messages.TencentMailType">
            <summary>
            邮件类型
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.TencentMailType.SEND_TO_INTERNET">
            <summary>
            外部邮件
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.TencentMailType.SEND_TO_ENCHANGE">
            <summary>
            公司Exchange邮件
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.TencentMailType.SEND_TO_MEETING">
            <summary>
            Exchange 会议邮件
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Messages.MessageStatus">
            <summary>
            消息状态枚举
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.MessageStatus.Pickup">
            <summary>
            等待发送
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.MessageStatus.Post">
            <summary>
            已发送
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.MessageStatus.Queue">
            <summary>
            发送失败后处于重发队列
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Messages.TencentMailFormat">
            <summary>
            邮件格式枚举
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.TencentMailFormat.Text">
            <summary>
            纯文本邮件
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.TencentMailFormat.Html">
            <summary>
            Html邮件
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Messages.MessagePriority">
            <summary>
            消息优先级
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.MessagePriority.Low">
            <summary>
            低优先级
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.MessagePriority.Normal">
            <summary>
            普通优先级
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Messages.MessagePriority.Hight">
            <summary>
            高优先级
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.LogLevel">
            <summary>
            Signifies the level at which to write a <see cref="T:Tencent.OA.Framework.Logging.LogEntry.ILogEntry"/>.
            Are used to exclude log entries that have log levels
            less than the current <see cref="T:Tencent.OA.Framework.Logging.ILogStrategy"/> threshold level.
            <seealso cref="M:Tencent.OA.Framework.Logging.ILogStrategy.GetLogLevel(Tencent.OA.Framework.Logging.LogEntry.IClientInfo)"/>.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.LogLevel.All">
            <summary>
            The least restrictive level.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.LogLevel.Debug">
            <summary>
            For debugging purposes.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.LogLevel.Info">
            <summary>
            Signifies verbose information.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.LogLevel.Warn">
            <summary>
            Signifies a warning from e.g. an unexpected event.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.LogLevel.Error">
            <summary>
            When an application error occurs.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.LogLevel.Fatal">
            <summary>
            When the application is no longer
            able to function or is in an unreliable state.
            Highly restrive logging.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.LogLevel.None">
            <summary>
            Logging is disabled.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Filters.IPAddressRangeFilter">
            <summary>
            Restricts logging based on an IP address range.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Filters.IPAddressRangeFilter.IsWithinRange(System.UInt32,System.String,System.UInt32)">
            <summary>
            Determines whether the specified addressValue IP address 
            falls within the range specified by beginAddress and endAddress.
            </summary>
            <param name="beginAddress">The begin address.</param>
            <param name="addressValue">The address value to test.</param>
            <param name="endAddress">The end address.</param>
            <returns>
            	<c>true</c> if the addressValue is within the specified range; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Tencent.OA.Framework.Logging.Filters.IPAddressRangeFilter.ToUInt(System.Net.IPAddress)">
            <summary>
            Converts and <see cref="T:System.Net.IPAddress"/> to an unsigned int.
            </summary>
            <param name="ipAddress">The ip address to convert.</param>
            <returns>A <code>uint</code> representing 
            the specified ipAddress.</returns>
        </member>
        <member name="T:Tencent.OA.Framework.Configuration.ConfigSettings">
            <summary>
            用于TOF中的配置上所使用的常量
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.ConfigSettings.STAFFENDPOINT">
            <summary>
            员工对象节点
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.ConfigSettings.STAFFPOSTENDPOINT">
            <summary>
            员工岗位对象节点
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.ConfigSettings.TOKENSTAFFENDPOINT">
            <summary>
            员工Token管理对象节点
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.ConfigSettings.ADGROUPENDPOINT">
            <summary>
            邮件组对象节点
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.ConfigSettings.POSTENDPOINT">
            <summary>
            岗位对象节点
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.ConfigSettings.DEPTENDPOINT">
            <summary>
            部门对象节点
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.ConfigSettings.DEPTPOSTENDPOINT">
            <summary>
            部门对象节点
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.ConfigSettings.K2OPINION">
            <summary>
            K2流程审批意见服务
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.ConfigSettings.TOKENMANAGERSERVICE">
            <summary>
            Token管理接口
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Configuration.ConfigSettings.MYWORKSPACESERVICE">
            <summary>
            个人工作台管理接口
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigSettings.IsDev">
            <summary>
            是否使用测试环境
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigSettings.SystemKey">
            <summary>
            系统AppKey
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Data.QueryTable">
            <summary>
            The base class for all query table classes.
            
            The QueryTable class is a class represents a table or view in database
            for easily querying database with the dynamic query language provided 
            by tencent.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Data.QueryTable.#ctor(System.String,System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Data.QueryTable"/> class.
            </summary>
            <param name="tableName">Name of the table or view to query on.</param>
            <param name="connectionStringName">
                The connection string name
                used to locate the connecting string for query.
            </param>
            <param name="readOnly">If the query table is readonly.</param>
        </member>
        <member name="M:Tencent.OA.Framework.Data.Assignment.#ctor(Tencent.OA.Framework.Data.IColumn,Tencent.OA.Framework.Data.IExpression)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.Data.Assignment"/> class.
            </summary>
            <param name="left">The left column.</param>
            <param name="right">The right expression.</param>
        </member>
        <member name="P:Tencent.OA.Framework.Data.Assignment.LeftColumn">
            <summary>
            Get the left column of the assignment.
            </summary>
            <value>The left column.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Data.Assignment.RightExpression">
            <summary>
            Get the right expression of the assignment.
            </summary>
            <value>The right expression.</value>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Tencent.OA.Framework.Core.WebServiceClient`1" -->
        <member name="M:Tencent.OA.Framework.Workflow.WorkflowUtilities.SendMessage(SourceCode.KO.ServerEventContext,System.String,System.String)">
            <summary>
            自定义K2的邮件发送
            http://rdacollab.blogspot.com/2008/12/sending-custom-mail-from-k2.html
            </summary>
            <param name="K2"></param>
            <param name="sender"></param>
            <param name="recipients"></param>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.K2ConnectionPool">
            <summary>
            K2连接池管理
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2ConnectionPool.GetConnection">
            <summary>
            从连接池中获取K2连接
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2ConnectionPool.ReleaseConnection(SourceCode.Workflow.Client.Connection)">
            <summary>
            释放K2 连接到链接池
            </summary>
            <param name="k2Conn"></param>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.K2ConnWrap">
            <summary>
            K2连接的包装类
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2ConnWrap.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2ConnWrap.ReTryConn">
            <summary>
            重试
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.K2ConnWrap.K2Conn">
            <summary>
            K2的连接
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Workflow.K2ConnWrap.Status">
            <summary>
            状态
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.K2FlowDelegateClient">
            <summary>
            委托关系代理
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Tencent.OA.Framework.Workflow.K2FlowDelegateClient.AddProcInstanceDelegate(Tencent.OA.Framework.Workflow.DataContract.ProcInstanceDelegate)" -->
        <member name="M:Tencent.OA.Framework.Workflow.K2FlowDelegateClient.GetProcInstanceDelegates(System.Int32)">
            <summary>
            获取用户所有的流程委托关系包括委托和被委托
            </summary>
            <param name="staffId">用户的ID</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2FlowDelegateClient.DeleteProcInstanceDelegates(System.Int32)">
            <summary>
            删除一条委托关系
            </summary>
            <param name="id">委托关系ID</param>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2FlowDelegateClient.GetProcInstanceDelegates(System.Int32,System.String)">
            <summary>
            通过流程实例ID和步骤实例ID获取所有的委托关系
            </summary>
            <param name="procInstId">流程实例ID</param>
            <param name="actInstName">步骤实例ID</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.K2FlowDelegateClient.GetProcInstanceDelegates(System.Int32,System.String,System.Int32)">
            <summary>
            通过流程实例ID、步骤实例ID、StaffID获取用户的所有的委托关系
            </summary>
            <param name="procInstId">流程实例ID</param>
            <param name="actInstName">步骤实例ID</param>
            <param name="staffId">StaffID</param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Organization.OrgEntryNotFoundException">
            <summary>
            组织架构对象不存在时抛出的异常
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.OrgEntryNotFoundException.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.OrgEntryNotFoundException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.OrgEntryNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常信息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.OrgEntryNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            构造函数
            </summary>
            <param name="info">异常信息</param>
            <param name="context">上下文信息</param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroup.#ctor(System.Int32)">
            <summary>
            根据Id构造邮件组对象
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroup.#ctor(System.String)">
            <summary>
            根据名字构造邮件组对象
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroup.GetAllAdGroups">
            <summary>
            获取所有邮件组列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroup.GetMemberAdGroups">
            <summary>
            获取子级邮件组
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroup.GetMemberOfAdGroups">
            <summary>
            获取父级邮件组
            </summary>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Organization.AdGroup.GetStaffMembers">
            <summary>
            获取属于此邮件组的员工列表
            </summary>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.AdGroup.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.ServiceContract.IMyWorkspaceSummitService">
            <summary>
            个人工作台接口（个人工作台端向应用系统端提交数据）
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.ServiceContract.IMyWorkspaceSummitService.SubmitForm(Tencent.OA.Framework.MyWorkspace.FormParams)">
            <summary>
            管理应用中间件将前端提交的数据提交给应用系统处理
            </summary>
            <param name="formParm">审批结果表单</param>
        </member>
        <member name="T:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityAssemblyEngine">
            <summary>
            Summary description for NVelocityAssemblyEngine.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityAssemblyEngine.#ctor(System.String,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityAssemblyEngine"/> class.
            </summary>
            <param name="assemblyName">Name of the assembly.</param>
            <param name="cacheTamplate">if set to <c>true</c> [cache tamplate].</param>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityAssemblyEngine.Process(System.Collections.IDictionary,System.String)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="templateName">Name of the template.</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.NVelocityTemplateEngine.Engines.NVelocityAssemblyEngine.Process(System.Collections.IDictionary,System.IO.TextWriter,System.String)">
            <summary>
            Processes the specified context.
            </summary>
            <param name="context">The context.</param>
            <param name="writer">The writer.</param>
            <param name="templateName">Name of the template.</param>
        </member>
        <member name="T:Tencent.OA.Framework.Web.Security.IPassportObjectEx">
            <summary>
            
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.IPassportObjectEx.DecryptTicket(System.String,System.String)">
            <summary>
            解密Ticket
            </summary>
            <param name="encryptedTicket"></param>
            <param name="clientIP"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Web.Security.IPassportObjectEx.EncryptTicket(Tencent.OA.Framework.Web.Security.AuthenticationTicket)">
            <summary>
            加密Ticket
            </summary>
            <param name="ticket"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.RightWay.Proxy.RightV3Client.GetAgentRelation(System.Int32,System.Int32,System.Boolean)">
            <summary>
            得到当前系统，当前用户的
               被委托人  isGetAgentedData = false
               委托人    isGetAgentedData = true
            </summary>
            <param name="sysID"></param>
            <param name="staffID"></param>
            <param name="isGetAgentedData"></param>
            <returns></returns>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.Token.SerialNum">
            <summary>
            Token卡序列号
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.Token.Status">
            <summary>
            Token卡的状态
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.Token.LastModifyTime">
            <summary>
            最近修改时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.Token.DeathDay">
            <summary>
            最近修改时间
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.Token.AssignerFulleName">
            <summary>
            用户全名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.Token.AssignerId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.AdGroupInfo.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.AdGroupInfo.Name">
            <summary>
            名字
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.AdGroupInfo.FullName">
            <summary>
            全名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Organization.DataContract.AdGroupInfo.Enabled">
            <summary>
            是否有效
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.SummaryList">
            <summary>
            摘要列表
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.SummaryList.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="parentNode"></param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.SummaryList.Create(System.String)">
            <summary>
            创建一个Summary节点
            </summary>
            <param name="name">节点名</param>
            <returns>返回Summary节点</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.SummaryList.Remove(System.Int32)">
            <summary>
            删除某个节点
            </summary>
            <param name="index">要删除的节点的索引值</param>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.SummaryList.Clear">
            <summary>
            删除所有节点
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.SummaryList.Item(System.Int32)">
            <summary>
            列表索引
            </summary>
            <param name="index">索引值</param>
            <returns>返回Summary节点</returns>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.Action">
            <summary>
            审批动作
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.Action.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.Action.Name">
            <summary>
            审批动作名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.Action.UIType">
            <summary>
            审批动作类型
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.Action.Value">
            <summary>
            审批动作值
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.DataContract.RTXMessage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.RTXMessage.Receiver">
            <summary>
            接收人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.RTXMessage.MsgInfo">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.RTXMessage.Title">
            <summary>
            消息主题
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.RTXMessage.Sender">
            <summary>
            信息发送者
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.RTXMessage.Priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.DataContract.SMSMessage.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.SMSMessage.Receiver">
            <summary>
            接收人
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.SMSMessage.MsgInfo">
            <summary>
            消息内容
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.SMSMessage.Sender">
            <summary>
            信息发送者
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Messages.DataContract.SMSMessage.Priority">
            <summary>
            优先级
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Extensions.Data.DataComparerExtensions">
            <summary>
            Static class that holds extension methods to perform sorting of DataTables.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Extensions.Data.DataComparerExtensions.OrderBy``1(System.Data.EnumerableRowCollection{``0},System.String)">
            <summary>
            Sorts the rows according to the specified sort expression.
            </summary>
            <typeparam name="TRow">Type of DataRow in sequence (must inherit System.Data.DataRow)</typeparam>
            <param name="source">EnumerableRowCollection to sort.</param>
            <param name="sortExpression">SQL-like sort expression specifying the column names to order according to, e.g. Column1, Column2 DESC.</param>
            <returns>An System.Data.OrderedEnumerableRowCollection&lt;TRow&gt; ordered according to the given sequence.</returns>
            <exception cref="T:System.ArgumentNullException"><paramref name="source"/> is null or <paramref name="sortExpression"/> is null</exception>
            <exception cref="!:Dynamite.Parsing.ParserException">If <paramref name="sortExpression"/> is an invalid sort expression.</exception>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.StaffEndPonitName">
            <summary>
            员工端点配置名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.StaffPostEndPonitName">
            <summary>
            员工岗位配置名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.TokenStafEndPonitName">
            <summary>
            员工Token管理配置名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.AdGroupEndPonitName">
            <summary>
            邮件组配置名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.PostEndPonitName">
            <summary>
            岗位配置名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.DeptEndPonitName">
            <summary>
            部门配置名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.DeptPostConfigName">
            <summary>
            部门岗位配置名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.LabsNetConfigName">
            <summary>
            无线体验网
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.LoggingConfigName">
            <summary>
            日志配置名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.OpinionConfigName">
            <summary>
            K2流程审批意见配置名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.MessageConfigName">
            <summary>
            消息配置名称
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.TokenServerWarrantString">
            <summary>
            TokenServer 的安全访问字符串
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.BanckAccountWarrantString">
            <summary>
            BanckAccountWarrantString
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.TokenManagerWarrantString">
            <summary>
            BanckAccountWarrantString
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Configuration.ConfigUtility.ClientConfigFile">
            <summary>
            WCF服务的客户端配置文件
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Caching.CacheClient.LoadProvider">
            <summary>
            This function loads providers from the App.Config or Web.config file
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService">
            <summary>
            流程处理服务
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.GetUserWorklists(System.String)">
            <summary>
            获取用户的流程的待办事项
            </summary>
            <param name="engName">用户的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.GetWorklistByFlowName(System.String,System.String)">
            <summary>
            获取用户的流程的待办事项
            </summary>
            <param name="flowName">流程名称</param>
            <param name="engName">用户的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.GetWorklistByFlowNameList(System.Collections.Generic.List{System.String},System.String)">
            <summary>
            获取用户的流程的待办事项
            </summary>
            <param name="flowNameList">流程名称</param>
            <param name="engName">用户的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.GetWorklistByFlowNameActiveName(System.String,System.String,System.String)">
            <summary>
            获取用户的流程的待办事项
            </summary>
            <param name="flowName">流程名称</param>
            <param name="activeName">活动名称</param>
            <param name="engname">用户的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.GetWorklist(System.String,Tencent.OA.Framework.Workflow.DataContract.WorklistCriteria)">
            <summary>
            获取用户的流程的待办事项
            </summary>
            <param name="engname">用户的英文名</param>
            <param name="ctiteria">高级查询对象</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.GetWorklistItem(System.String,System.String)">
            <summary>
            获取工作项
            </summary>
            <param name="Identifier">工作项的ID</param>
            <param name="engname">当前操作者的英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.StartProcess(System.String,System.String,System.String,System.Collections.Generic.List{Tencent.OA.Framework.Workflow.DataContract.K2DataField})">
            <summary>
            启动流程实例
            </summary>
            <param name="engname">用户英文名</param>、
            <param name="processFullname">流程的全名，例如 K2DecimalWF\DecimalWF</param>
            <param name="folio">流程的标题,可以将自定义的流程编号放在这个Folio字段中</param>
            <param name="dataList">流程变量</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.StartProcessAsync(System.String,System.String,System.String,System.Collections.Generic.List{Tencent.OA.Framework.Workflow.DataContract.K2DataField})">
            <summary>
            异步方式启动流程实例
            </summary>
            <param name="engname">用户英文名</param>、
            <param name="processFullname">流程的全名，例如 K2DecimalWF\DecimalWF</param>
            <param name="folio">流程的标题,可以将自定义的流程编号放在这个Folio字段中</param>
            <param name="dataList">流程变量</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.SubmitWorkItem(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String,System.String)">
            <summary>
            提交审批流程
            </summary>
            <param name="workItem">工作项</param>
            <param name="action">执行的动作</param>
            <param name="engname">提交的用户</param>
            <param name="memo">审批的意见</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.SubmitWorkItemAsync(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String,System.String)">
            <summary>
            异步方式提交审批流程
            </summary>
            <param name="workItem">工作项</param>
            <param name="action">执行的动作</param>
            <param name="engname">提交的用户</param>
            <param name="memo">审批的意见</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.GotoActivity(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String)">
            <summary>
            用户Goto到流程的步骤
            </summary>
            <param name="workItem">工作项</param>
            <param name="engname">用户英文名</param>
            <param name="activity">步骤名称</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.GotoActivityAsync(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String)">
            <summary>
            异步方式用户Goto到流程的步骤
            </summary>
            <param name="workItem">工作项</param>
            <param name="engname">用户英文名</param>
            <param name="activity">步骤名称</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.Redirect(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String)">
            <summary>
            将任务转交给用户
            </summary>
            <param name="workItem">工作项</param>
            <param name="engname">用户英文名</param>
            <param name="username">转交给的用户英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.Delegate(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.String)">
            <summary>
            将任务委托给用户
            </summary>
            <param name="workItem">工作项</param>
            <param name="engname">用户英文名</param>
            <param name="username">转交给的用户英文名</param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Workflow.ServiceContract.IWorkflowService.DelegateUsers(Tencent.OA.Framework.Workflow.DataContract.WorklistItem,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            将任务转交给用户
            </summary>
            <param name="workItem">工作项</param>
            <param name="engname">用户英文名</param>
            <param name="username">转交给的用户英文名列表</param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Workflow.DataContract.WorklistCriteria">
            <summary>
            代办高级查询条件类
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Utilities.TypesResolver.CachedTypeResolver">
            <summary>
            Resolves (instantiates) a <see cref="T:System.Type"/> by it's (possibly
            assembly qualified) name, and caches the <see cref="T:System.Type"/>
            instance against the type name.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Utilities.TypesResolver.CachedTypeResolver._typeCache">
            <summary>
            The cache, mapping type names (<see cref="T:System.String"/> instances) against
            <see cref="T:System.Type"/> instances.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.CachedTypeResolver.#ctor(Tencent.OA.Framework.Utilities.TypesResolver.ITypeResolver)">
            <summary>
            Creates a new instance of the <see cref="!:Tencent.OA.Workflow.Utilities.TypesResolver.CachedTypeResolver"/> class.
            </summary>
            <param name="typeResolver">
            The <see cref="!:Tencent.OA.Workflow.Utilities.TypesResolver.ITypeResolver"/> that this instance will delegate
            actual <see cref="T:System.Type"/> resolution to if a <see cref="T:System.Type"/>
            cannot be found in this instance's <see cref="T:System.Type"/> cache.
            </param>
            <exception cref="T:System.ArgumentNullException">
            If the supplied <paramref name="typeResolver"/> is <see langword="null"/>.
            </exception>
        </member>
        <member name="M:Tencent.OA.Framework.Utilities.TypesResolver.CachedTypeResolver.Resolve(System.String)">
            <summary>
            Resolves the supplied <paramref name="typeName"/> to a
            <see cref="T:System.Type"/>
            instance.
            </summary>
            <param name="typeName">
            The (possibly partially assembly qualified) name of a
            <see cref="T:System.Type"/>.
            </param>
            <returns>
            A resolved <see cref="T:System.Type"/> instance.
            </returns>
            <exception cref="T:System.TypeLoadException">
            If the supplied <paramref name="typeName"/> could not be resolved
            to a <see cref="T:System.Type"/>.
            </exception>
        </member>
        <member name="T:Tencent.OA.Framework.ServiceModel.DynamicClientProxy.WCFAbstractReusableFaultWrapperClientProxy`1">
            <summary>
            Class that can be used with PolicyInjection. Dynamically generated classes will inherit from this class.
            This class will also take care to unwrap any FaultException and extract and throw the original exception.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Resources.ArgumentValidation_ArgumentEmpty">
            <summary>
              Looks up a localized string similar to 参数不能为空.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Resources.InternalLog_Prefix_Debug">
            <summary>
              Looks up a localized string similar to Log Debug:.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Resources.InternalLog_Prefix_Error">
            <summary>
              Looks up a localized string similar to Log Error:.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Resources.InternalLog_Prefix_Fatal">
            <summary>
              Looks up a localized string similar to Log Fatal:.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Resources.InternalLog_Prefix_Info">
            <summary>
              Looks up a localized string similar to Log Info:.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Resources.InternalLog_Prefix_Warn">
            <summary>
              Looks up a localized string similar to Log Warning:.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Resources.MissUnityConfiguration">
            <summary>
              Looks up a localized string similar to 缺少Unity 配置.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.ServiceContract.IMyWorkspaceService">
            <summary>
            个人工作台接口（应用系统端向个人工作台端推送数据）
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.ServiceContract.IMyWorkspaceService.PushData(System.String,System.Collections.Generic.List{Tencent.OA.Framework.MyWorkspace.ProcWorklistItem},System.Boolean)">
            <summary>
            应用系统推送待办审批单列表
            </summary>
            <param name="sysKey">业务系统sysKey</param>
            <param name="workItems">待办的列表</param>
            <param name="isAll">是增量还是全部</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.ServiceContract.IMyWorkspaceService.PushDelegateData(System.String,System.Collections.Generic.List{Tencent.OA.Framework.MyWorkspace.ProcWorklistItem},System.Boolean)">
            <summary>
            应用系统推送委托部分的待办审批单列表
            </summary>
            <param name="sysKey">业务系统sysKey</param>
            <param name="workItems">待办的列表</param>
            <param name="isAll">是增量还是全部</param>
            <returns>true or false</returns>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.ServiceContract.IMyWorkspaceService.CompletedForm(System.String,System.Int32,System.String,System.String)">
            <summary>
            管理应用中间件将前端提交的数据提交给应用系统处理，应用系统返回处理结果
            </summary>
            <param name="sysKey">业务系统sysKey</param>
            <param name="StaffId">处理人</param>
            <param name="ProcInstId">流程实例ID</param>
            <param name="SerialNumber">待办的序列号</param>
        </member>
        <member name="T:Tencent.OA.Framework.MyWorkspace.Common.Summary">
            <summary>
            摘要节点
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.MyWorkspace.Common.Summary.#ctor(System.Xml.XmlNode)">
            <summary>
            构造函数
            </summary>
            <param name="node"></param>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.Summary.IsComplex">
            <summary>
            是否是复杂摘要
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.Summary.Name">
            <summary>
            摘要名
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.MyWorkspace.Common.Summary.Value">
            <summary>
            摘要内容
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Messages.ServiceContract.IMessageService">
            <summary>
            消息接口
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.ServiceContract.IMessageService.SendMail(Tencent.OA.Framework.Messages.DataContract.TencentEmail)">
            <summary>
            发送邮件 
            </summary>
            <param name="mail"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.ServiceContract.IMessageService.SendRTX(Tencent.OA.Framework.Messages.DataContract.RTXMessage)">
            <summary>
            发送RTX消息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.ServiceContract.IMessageService.SendSMS(Tencent.OA.Framework.Messages.DataContract.SMSMessage)">
            <summary>
            发送短信消息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:Tencent.OA.Framework.Messages.ServiceContract.IMessageService.SendDirectSMS(Tencent.OA.Framework.Messages.DataContract.SMSMessage,System.String)">
            <summary>
            不进入队列直接发送短信信息
            </summary>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.LogEntry.IServerLogEntry">
            <summary>
            Represents regular log entries that are not from a e.g. web client,
            and that are made within the application.
            <seealso cref="T:Tencent.OA.Framework.Logging.LogEntry.IClientLogEntry"/>
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.IServerLogEntry.Exception">
            <summary>
            Gets or sets the exception that is to be logged.
            May be null.
            </summary>
            <value>The exception that occured.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.IServerLogEntry.AppDomain">
            <summary>
            Gets or sets the app domain that the log request was made.
            </summary>
            <value>The app domain.</value>
        </member>
        <member name="P:Tencent.OA.Framework.Logging.LogEntry.IServerLogEntry.Identity">
            <summary>
            Gets or sets string representation of the current thread's principal identity.
            </summary>
            <value>The string representation of the current thread's principal identity.</value>
        </member>
        <member name="T:Tencent.OA.Framework.Logging.Filter.LogEntryOrigin">
            <summary>
            Indicates where a <see cref="!:ILogEntry"/> came from.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.Filter.LogEntryOrigin.Remote">
            <summary>
            The <see cref="!:ILogEntry"/> is client based.
            </summary>
        </member>
        <member name="F:Tencent.OA.Framework.Logging.Filter.LogEntryOrigin.Local">
            <summary>
            The <see cref="!:ILogEntry"/> is server based.
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.ParserException">
            <summary>
            Exception thrown when an expression cannot be parsed.
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.ParserException.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Creates a new ParserException specifying the position, expression and a custom message.
            </summary>
            <param name="position">Position in expression that error was found.</param>
            <param name="expression">Expression being parsed.</param>
            <param name="message">Custom error message</param>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.ParserException.Position">
            <summary>
            Gets the position at which the error was found (as a zero-based index). -1 if position not applicable or not known.
            </summary>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.ParserException.Expression">
            <summary>
            Gets the expression being parsed when error was found (null if expression not known).
            </summary>
        </member>
        <member name="T:Tencent.OA.Framework.Collections.SimpleTokenizer">
            <summary>
            Provides simple but efficient parsing of string expressions into "tokens".
            </summary>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SimpleTokenizer.#ctor(System.String)">
            <summary>
            Creates a new SimpleParser specifying an expression to be parsed.
            </summary>
            <param name="expression">Expression to be parsed</param>
            <remarks>
            Any leading whitespace is automatically skipped when using this method.
            </remarks>
            <exception cref="T:System.ArgumentNullException">If Expression is set to null.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SimpleTokenizer.AdvanceIfIdent(System.String)">
            <summary>
            Advances the current position and returns true if the token at the current position is an identity equal to the specified identity.
            </summary>
            <param name="identity">Alphanumeric identity token to be tested for</param>
            <returns>True if token at current matched the specified one.</returns>
            <exception cref="!:System.NullPointerException">If identity is null.</exception>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SimpleTokenizer.AdvanceIfSymbol(System.Char)">
            <summary>
            Advances the current position and returns true if the token at the current position is the specified symbol character.
            </summary>
            <param name="symbol">Symbol character</param>
            <returns>True if token at current matched the specified symbol, false otherwise</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SimpleTokenizer.AdvanceIfSymbol(System.String)">
            <summary>
            Advances the current position and returns true if the token at the current position is the specified symbol string.
            </summary>
            <param name="symbol">Symbol string</param>
            <returns>True if token at current matched the specified symbol, false otherwise</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SimpleTokenizer.ReadIdentity">
            <summary>
            Gets the identity at current position and advances the current position to the next token.
            </summary>
            <returns>Next identity token or empty string if no simple word token at current position.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SimpleTokenizer.ReadNextMatch(System.Text.RegularExpressions.Regex)">
            <summary>
            Gets the next part of the expression that matches the given regular expression and advances the position to the next token after that.
            </summary>
            <returns>Next matching string or empty string if no match was found.</returns>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SimpleTokenizer.ExpectIdentity(System.String)">
            <summary>
            Verifies that the current token is the specified identity.
            </summary>
            <remarks>
            Current position is advanced passed the given token in case of a match.
            </remarks>
            <param name="token">Simple alpha-numeric identity token to be tested for</param>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SimpleTokenizer.ExpectSymbol(System.String)">
            <summary>
            Verifies that the current token matches a given symbol and throws a ParserException if not.
            </summary>
            <remarks>
            Current position is advanced passed the given symbol in case of a match.
            </remarks>
            <param name="symbol">Symbolic token to be tested for</param>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SimpleTokenizer.ExpectSymbol(System.Char)">
            <summary>
            Verifies that the current token matches a given symbol and throws a ParserException if not.
            </summary>
            <remarks>
            Current position is advanced passed the given symbol in case of a match.
            </remarks>
            <param name="symbol">Symbolic token to be tested for</param>
        </member>
        <member name="M:Tencent.OA.Framework.Collections.SimpleTokenizer.AdvanceIfTokenAnyOf(System.String[])">
            <summary>
            Advances the current position if token at current position matches any of the specified alphanumeric tokens.
            </summary>
            <param name="testValues">Alphanumeric tokens to test for.</param>
            <returns>The matching token or null if none of the specified tokens matched.</returns>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.SimpleTokenizer.Expression">
            <summary>
            Gets or sets the expression being parsed.
            </summary>
            <remarks>
            Position is reset to the beginning of the expression. Any leading whitespace is automatically skipped.
            </remarks>
            <exception cref="T:System.ArgumentNullException">If Expression is set to null.</exception>
        </member>
        <member name="P:Tencent.OA.Framework.Collections.SimpleTokenizer.Position">
            <summary>
            Gets the current position in expression.
            </summary>
        </member>
    </members>
</doc>
